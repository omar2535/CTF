/
type=rizin rz-db project
version=5

/core
blocksize=0x800
offset=0x2353

/core/analysis

/core/analysis/blocks
0x1000={"size":16,"jump":4114,"fail":4112,"traced":true,"ninstr":4,"op_pos":[4,11,14],"stackptr":8,"parent_stackptr":0}
0x1010={"size":2,"jump":4114,"ninstr":1,"stackptr":-8,"parent_stackptr":8}
0x1012={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":-8,"parent_stackptr":8}
0x1030={"size":6,"ninstr":1,"parent_stackptr":0}
0x1040={"size":6,"ninstr":1,"parent_stackptr":0}
0x1050={"size":6,"ninstr":1,"parent_stackptr":0}
0x1060={"size":6,"ninstr":1,"parent_stackptr":0}
0x1070={"size":42,"traced":true,"ninstr":11,"op_pos":[2,5,6,9,13,14,15,22,29,36],"stackptr":8,"parent_stackptr":0}
0x10a0={"size":19,"jump":4296,"fail":4275,"traced":true,"ninstr":4,"op_pos":[7,14,17],"parent_stackptr":0}
0x10b3={"size":12,"jump":4296,"fail":4287,"traced":true,"ninstr":3,"op_pos":[7,10],"parent_stackptr":0}
0x10bf={"size":2,"ninstr":1,"parent_stackptr":0}
0x10c8={"size":1,"ninstr":1,"stackptr":-8,"parent_stackptr":0}
0x10d0={"size":36,"jump":4360,"fail":4340,"traced":true,"ninstr":9,"op_pos":[7,14,17,20,24,28,31,34],"parent_stackptr":0}
0x10f4={"size":12,"jump":4360,"fail":4352,"traced":true,"ninstr":3,"op_pos":[7,10],"parent_stackptr":0}
0x1100={"size":2,"ninstr":1,"parent_stackptr":0}
0x1108={"size":1,"ninstr":1,"stackptr":-8,"parent_stackptr":0}
0x1110={"size":9,"jump":4424,"fail":4377,"traced":true,"ninstr":2,"op_pos":[7],"parent_stackptr":0}
0x1119={"size":14,"jump":4403,"fail":4391,"traced":true,"ninstr":4,"op_pos":[1,9,12],"stackptr":8,"parent_stackptr":0}
0x1127={"size":12,"jump":4403,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":-8,"parent_stackptr":8}
0x1133={"size":14,"traced":true,"ninstr":4,"op_pos":[5,12,13],"stackptr":-8,"parent_stackptr":8}
0x1148={"size":1,"ninstr":1,"stackptr":-8,"parent_stackptr":0}
0x1150={"size":5,"jump":4304,"ninstr":1,"parent_stackptr":0}
0x1155={"size":4213,"traced":true,"ninstr":753,"op_pos":[1,4,6,8,10,17,24,34,44,47,51,61,71,75,79,83,87,97,107,111,115,125,135,139,143,153,163,167,171,175,179,183,187,190,193,200,207,214,221,231,238,248,255,265,275,278,282,286,290,300,310,314,318,328,338,342,346,356,366,370,374,384,394,398,402,412,422,426,430,440,450,454,458,468,478,485,492,499,506,516,523,530,540,550,553,557,567,577,581,585,595,605,609,613,623,633,637,641,651,661,665,669,679,689,693,697,707,717,721,725,735,745,749,753,763,773,780,787,794,801,808,818,825,835,845,848,852,856,860,870,880,884,888,898,908,912,916,926,936,940,944,954,964,968,972,982,992,996,1000,1010,1020,1024,1028,1038,1048,1055,1062,1069,1076,1086,1093,1096,1103,1108,1111,1114,1117,1120,1123,1126,1129,1136,1139,1146,1151,1154,1157,1160,1163,1166,1168,1170,1174,1178,1181,1184,1188,1192,1195,1197,1204,1207,1214,1219,1222,1225,1228,1231,1234,1236,1238,1242,1246,1249,1252,1256,1260,1263,1265,1272,1275,1282,1287,1290,1293,1296,1299,1302,1304,1306,1310,1314,1317,1320,1324,1328,1331,1333,1340,1343,1350,1355,1358,1361,1364,1367,1370,1372,1374,1378,1382,1385,1388,1392,1396,1399,1401,1408,1418,1428,1431,1435,1445,1455,1459,1463,1473,1483,1487,1491,1501,1511,1515,1519,1529,1539,1543,1547,1557,1567,1571,1575,1585,1595,1599,1603,1613,1623,1627,1631,1638,1645,1655,1665,1672,1679,1682,1689,1699,1706,1709,1713,1717,1721,1724,1727,1731,1735,1745,1755,1759,1763,1773,1783,1787,1791,1801,1811,1815,1819,1829,1839,1843,1847,1857,1867,1871,1875,1885,1895,1902,1909,1916,1923,1926,1933,1943,1950,1953,1960,1965,1968,1971,1974,1977,1980,1983,1986,1993,2003,2013,2016,2020,2030,2040,2044,2048,2058,2068,2072,2076,2086,2096,2100,2104,2114,2124,2128,2132,2142,2152,2156,2160,2170,2180,2184,2188,2198,2208,2212,2216,2226,2236,2243,2250,2257,2264,2271,2281,2288,2291,2295,2299,2303,2307,2311,2321,2331,2335,2339,2349,2359,2363,2367,2377,2387,2391,2395,2399,2403,2407,2411,2414,2417,2424,2431,2438,2445,2452,2462,2469,2479,2489,2492,2496,2506,2516,2520,2524,2534,2544,2548,2552,2562,2572,2576,2580,2590,2600,2604,2608,2618,2628,2632,2636,2646,2656,2660,2664,2668,2672,2682,2692,2699,2706,2713,2720,2723,2730,2740,2747,2757,2767,2770,2774,2784,2794,2798,2802,2812,2822,2826,2830,2840,2850,2854,2858,2868,2878,2882,2886,2896,2906,2910,2914,2918,2922,2932,2942,2946,2950,2957,2964,2974,2984,2991,2998,3005,3015,3022,3025,3029,3033,3037,3041,3045,3055,3065,3069,3073,3083,3093,3097,3101,3111,3121,3125,3129,3133,3137,3141,3145,3148,3151,3158,3165,3172,3179,3186,3196,3203,3206,3213,3218,3221,3224,3227,3230,3233,3236,3239,3246,3249,3256,3261,3264,3267,3270,3273,3276,3279,3282,3289,3292,3299,3304,3307,3310,3313,3316,3319,3322,3325,3332,3335,3342,3347,3350,3353,3356,3359,3362,3365,3368,3372,3376,3379,3381,3388,3391,3398,3403,3406,3409,3412,3415,3418,3420,3422,3426,3430,3433,3436,3440,3444,3447,3449,3456,3459,3466,3471,3474,3477,3480,3483,3486,3488,3490,3494,3498,3501,3504,3508,3512,3515,3517,3524,3527,3534,3539,3542,3545,3548,3551,3554,3556,3558,3562,3566,3569,3572,3576,3580,3583,3585,3592,3602,3612,3615,3619,3623,3627,3637,3647,3651,3655,3665,3675,3679,3683,3693,3703,3707,3711,3721,3731,3735,3739,3749,3759,3763,3767,3777,3787,3791,3795,3805,3815,3822,3829,3836,3843,3852,3859,3866,3869,3876,3881,3884,3887,3890,3893,3896,3898,3900,3904,3908,3911,3913,3920,3923,3930,3935,3938,3941,3944,3947,3950,3953,3956,3963,3970,3977,3984,3991,3998,3999,4006,4007,4014,4015,4022,4023,4030,4031,4038,4039,4046,4047,4054,4055,4062,4063,4070,4071,4078,4079,4086,4087,4094,4095,4102,4103,4110,4111,4118,4119,4126,4127,4134,4135,4142,4143,4150,4151,4158,4159,4166,4167,4170,4173,4176,4183,4188,4193,4200,4201,4205,4207,4209,4211,4212],"stackptr":56000,"parent_stackptr":0}
0x21ca={"size":11,"traced":true,"ninstr":5,"op_pos":[1,4,9,10],"stackptr":-8,"parent_stackptr":0}
0x21d5={"size":11,"traced":true,"ninstr":5,"op_pos":[1,4,9,10],"stackptr":-8,"parent_stackptr":0}
0x21e0={"size":11,"traced":true,"ninstr":5,"op_pos":[1,4,9,10],"stackptr":-8,"parent_stackptr":0}
0x21eb={"size":11,"traced":true,"ninstr":5,"op_pos":[1,4,9,10],"stackptr":-8,"parent_stackptr":0}
0x21f6={"size":11,"traced":true,"ninstr":5,"op_pos":[1,4,9,10],"stackptr":-8,"parent_stackptr":0}
0x2201={"size":11,"traced":true,"ninstr":5,"op_pos":[1,4,9,10],"stackptr":-8,"parent_stackptr":0}
0x220c={"size":11,"traced":true,"ninstr":5,"op_pos":[1,4,9,10],"stackptr":-8,"parent_stackptr":0}
0x2217={"size":11,"traced":true,"ninstr":5,"op_pos":[1,4,9,10],"stackptr":-8,"parent_stackptr":0}
0x2222={"size":44,"jump":8812,"fail":8782,"traced":true,"ninstr":13,"op_pos":[1,4,8,12,17,22,25,29,33,36,40,42],"stackptr":40,"parent_stackptr":0}
0x224e={"size":28,"jump":8863,"fail":8810,"traced":true,"ninstr":8,"op_pos":[5,10,13,17,20,24,26],"stackptr":40,"parent_stackptr":40}
0x226a={"size":2,"jump":8829,"ninstr":1,"stackptr":40,"parent_stackptr":40}
0x226c={"size":17,"jump":9166,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":40,"parent_stackptr":40}
0x227d={"size":32,"jump":8914,"fail":8861,"traced":true,"ninstr":9,"op_pos":[5,10,13,17,21,24,28,30],"stackptr":40,"parent_stackptr":40}
0x229d={"size":2,"jump":8880,"ninstr":1,"stackptr":40,"parent_stackptr":40}
0x229f={"size":17,"jump":9166,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":40,"parent_stackptr":40}
0x22b0={"size":32,"jump":8965,"fail":8912,"traced":true,"ninstr":9,"op_pos":[5,10,13,17,21,24,28,30],"stackptr":40,"parent_stackptr":40}
0x22d0={"size":2,"jump":8931,"ninstr":1,"stackptr":40,"parent_stackptr":40}
0x22d2={"size":17,"jump":9166,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":40,"parent_stackptr":40}
0x22e3={"size":32,"jump":9016,"fail":8963,"traced":true,"ninstr":9,"op_pos":[5,10,13,17,21,24,28,30],"stackptr":40,"parent_stackptr":40}
0x2303={"size":2,"jump":8982,"ninstr":1,"stackptr":40,"parent_stackptr":40}
0x2305={"size":17,"jump":9166,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":40,"parent_stackptr":40}
0x2316={"size":32,"jump":9067,"fail":9014,"traced":true,"ninstr":9,"op_pos":[5,10,13,17,21,24,28,30],"stackptr":40,"parent_stackptr":40}
0x2336={"size":2,"jump":9033,"ninstr":1,"stackptr":40,"parent_stackptr":40}
0x2338={"size":17,"jump":9166,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":40,"parent_stackptr":40}
0x2349={"size":32,"jump":9115,"fail":9065,"traced":true,"ninstr":9,"op_pos":[5,10,13,17,21,24,28,30],"stackptr":40,"parent_stackptr":40}
0x2369={"size":2,"jump":9081,"ninstr":1,"stackptr":40,"parent_stackptr":40}
0x236b={"size":14,"jump":9166,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":40,"parent_stackptr":40}
0x2379={"size":32,"jump":9153,"fail":9113,"traced":true,"ninstr":9,"op_pos":[5,10,13,17,21,24,28,30],"stackptr":40,"parent_stackptr":40}
0x2399={"size":2,"jump":9129,"ninstr":1,"stackptr":40,"parent_stackptr":40}
0x239b={"size":14,"jump":9166,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":40,"parent_stackptr":40}
0x23a9={"size":24,"jump":9166,"traced":true,"ninstr":5,"op_pos":[7,12,17,22],"stackptr":40,"parent_stackptr":40}
0x23c1={"size":13,"jump":9166,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":24,"parent_stackptr":40}
0x23ce={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":24,"parent_stackptr":40}
0x23d0={"size":78,"jump":9271,"traced":true,"ninstr":15,"op_pos":[1,4,11,18,25,30,37,42,49,56,61,64,69,76],"stackptr":2024,"parent_stackptr":0}
0x241e={"size":17,"jump":9282,"fail":9263,"traced":true,"ninstr":5,"op_pos":[3,5,13,15],"stackptr":2024,"parent_stackptr":2024,"cmpval":10}
0x242f={"size":8,"jump":9271,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":2024,"parent_stackptr":2024,"cmpval":1999}
0x2437={"size":9,"jump":9246,"fail":9280,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":2024,"parent_stackptr":2024,"cmpval":1999}
0x2440={"size":2,"jump":9283,"ninstr":1,"stackptr":2024,"parent_stackptr":2024}
0x2442={"size":1,"jump":9283,"traced":true,"ninstr":1,"stackptr":2024,"parent_stackptr":2024,"cmpval":7}
0x2443={"size":6,"jump":9295,"fail":9289,"traced":true,"ninstr":2,"op_pos":[4],"parent_stackptr":2024}
0x2449={"size":6,"jump":9309,"fail":9295,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":2024,"parent_stackptr":2024,"cmpval":8}
0x244f={"size":14,"jump":9325,"traced":true,"ninstr":3,"op_pos":[7,12],"stackptr":2024,"parent_stackptr":2024}
0x245d={"size":16,"jump":9325,"traced":true,"ninstr":4,"op_pos":[7,10,15],"stackptr":2008,"parent_stackptr":2024}
0x246d={"size":3,"traced":true,"ninstr":3,"op_pos":[1,2],"stackptr":2008,"parent_stackptr":2024}

/core/analysis/callables
_Exit=func
__assert_fail=func
__bzero=func
__cxa_throw=func
__error=func
__libc_init=func
__libc_init_array=func
__libc_start_main=func
__maskrune=func
__stack_chk_fail=func
__tolower=func
__toupper=func
__uClibc_main=func
_exit=func
abort=func
abs=func
access=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
aligned_alloc=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atan2=func
atan2f=func
atan2l=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
bind=func
bindtextdomain=func
bsearch=func
btowc=func
bzero=func
calloc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
chmod=func
clearerr=func
clock=func
close=func
compat_mode=func
connect=func
copysign=func
copysignf=func
copysignl=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
difftime=func
div=func
entry.fini0=func
entry.init0=func
entry0=func
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
error=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fchmod=func
fclose=func
fdim=func
fdimf=func
fdiml=func
feclearexcept=func
fegetenv=func
fegetexceptflag=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetexceptflag=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetpos=func
fgets=func
fgetwc=func
fgetws=func
fileno=func
floor=func
floorf=func
floorl=func
fma=func
fmaf=func
fmal=func
fmax=func
fmaxf=func
fmaxl=func
fmin=func
fminf=func
fminl=func
fmod=func
fmodf=func
fmodl=func
fopen=func
fpclassify=func
fprintf=func
fputc=func
fputs=func
fputwc=func
fputws=func
fread=func
free=func
freopen=func
frexp=func
frexpf=func
frexpl=func
fscanf=func
fseek=func
fsetpos=func
fstat=func
ftell=func
fts_children_INODE64=func
fts_close_INODE64=func
fts_open_INODE64=func
fts_read_INODE64=func
fts_set_INODE64=func
func._Exit.arg.0=int,status
func._Exit.args=0x1
func._Exit.noreturn=true
func._Exit.ret=void
func.__assert_fail.arg.0=const char *,function
func.__assert_fail.args=0x4
func.__assert_fail.noreturn=true
func.__assert_fail.ret=void
func.__bzero.arg.0=size_t,n
func.__bzero.args=0x2
func.__bzero.ret=void
func.__cxa_throw.arg.0=void *,dest
func.__cxa_throw.args=0x3
func.__cxa_throw.noreturn=true
func.__cxa_throw.ret=void
func.__error.arg.0=char *,format
func.__error.args=0x3
func.__error.ret=void
func.__libc_init.arg.0=char **,envp
func.__libc_init.args=0x3
func.__libc_init.noreturn=true
func.__libc_init.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__libc_start_main.arg.0=void *,stack_end
func.__libc_start_main.args=0x7
func.__libc_start_main.noreturn=true
func.__libc_start_main.ret=int
func.__maskrune.arg.0=long,f
func.__maskrune.args=0x2
func.__maskrune.ret=int
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=0x1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=0x1
func.__toupper.ret=int
func.__uClibc_main.arg.0=void *,stack_end
func.__uClibc_main.args=0x7
func.__uClibc_main.noreturn=true
func.__uClibc_main.ret=int
func._exit.arg.0=int,status
func._exit.args=0x1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=0x1
func.abs.ret=int
func.access.arg.0=int,mode
func.access.args=0x2
func.access.ret=int
func.acos.arg.0=double,x
func.acos.args=0x1
func.acos.ret=double
func.acosf.arg.0=float,x
func.acosf.args=0x1
func.acosf.ret=float
func.acosh.arg.0=double,x
func.acosh.args=0x1
func.acosh.ret=double
func.acoshf.arg.0=float,x
func.acoshf.args=0x1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=0x1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=0x1
func.acosl.ret=long double
func.aligned_alloc.arg.0=size_t,size
func.aligned_alloc.args=0x2
func.aligned_alloc.ret=void
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=struct tm *,timeptr
func.asctime.args=0x1
func.asctime.ret=char *
func.asin.arg.0=double,x
func.asin.args=0x1
func.asin.ret=double
func.asinf.arg.0=float,x
func.asinf.args=0x1
func.asinf.ret=float
func.asinh.arg.0=double,x
func.asinh.args=0x1
func.asinh.ret=double
func.asinhf.arg.0=float,x
func.asinhf.args=0x1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=0x1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=0x1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=double,x
func.atan.args=0x1
func.atan.ret=double
func.atan2.arg.0=double,x
func.atan2.args=0x2
func.atan2.ret=double
func.atan2f.arg.0=float,x
func.atan2f.args=0x2
func.atan2f.ret=float
func.atan2l.arg.0=long double,x
func.atan2l.args=0x2
func.atan2l.ret=long double
func.atanf.arg.0=float,x
func.atanf.args=0x1
func.atanf.ret=float
func.atanh.arg.0=double,x
func.atanh.args=0x1
func.atanh.ret=double
func.atanhf.arg.0=float,x
func.atanhf.args=0x1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=0x1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=0x1
func.atanl.ret=long double
func.atexit.arg.0=void *,function
func.atexit.args=0x1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=0x1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=0x1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=0x1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=0x1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=0x1
func.basename.ret=char *
func.bind.arg.0=socklen_t,address_len
func.bind.args=0x3
func.bind.ret=int
func.bindtextdomain.arg.0=char *,dirname
func.bindtextdomain.args=0x2
func.bindtextdomain.ret=char *
func.bsearch.arg.0=void *,compar
func.bsearch.args=0x5
func.bsearch.ret=void *
func.btowc.arg.0=int,c
func.btowc.args=0x1
func.btowc.ret=wint_t
func.bzero.arg.0=size_t,n
func.bzero.args=0x2
func.bzero.ret=void
func.calloc.arg.0=size_t,size
func.calloc.args=0x2
func.calloc.ret=void *
func.cbrt.arg.0=double,x
func.cbrt.args=0x1
func.cbrt.ret=double
func.cbrtf.arg.0=float,x
func.cbrtf.args=0x1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=0x1
func.cbrtl.ret=long double
func.ceil.arg.0=double,x
func.ceil.args=0x1
func.ceil.ret=double
func.ceilf.arg.0=float,x
func.ceilf.args=0x1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=0x1
func.ceill.ret=long double
func.chmod.arg.0=int,mode
func.chmod.args=0x2
func.chmod.ret=int
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=0x1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=0x1
func.close.ret=int
func.compat_mode.arg.0=const char *,mode
func.compat_mode.args=0x2
func.compat_mode.ret=bool
func.connect.arg.0=size_t,addrlen
func.connect.args=0x3
func.connect.ret=ssize_t
func.copysign.arg.0=double,y
func.copysign.args=0x2
func.copysign.ret=double
func.copysignf.arg.0=float,y
func.copysignf.args=0x2
func.copysignf.ret=float
func.copysignl.arg.0=long double,y
func.copysignl.args=0x2
func.copysignl.ret=long double
func.cos.arg.0=double,x
func.cos.args=0x1
func.cos.ret=double
func.cosf.arg.0=float,x
func.cosf.args=0x1
func.cosf.ret=float
func.cosh.arg.0=double,x
func.cosh.args=0x1
func.cosh.ret=double
func.coshf.arg.0=float,x
func.coshf.args=0x1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=0x1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=0x1
func.cosl.ret=long double
func.ctime.arg.0=time_t *,timer
func.ctime.args=0x1
func.ctime.ret=char *
func.difftime.arg.0=time_t,time0
func.difftime.args=0x2
func.difftime.ret=double
func.div.arg.0=int,denom
func.div.args=0x2
func.div.ret=div_t
func.entry.fini0.args=0
func.entry.init0.args=0
func.entry0.arg.0=void *,rtld_fini
func.entry0.args=0x1
func.erf.arg.0=double,x
func.erf.args=0x1
func.erf.ret=double
func.erfc.arg.0=double,x
func.erfc.args=0x1
func.erfc.ret=double
func.erfcf.arg.0=float,x
func.erfcf.args=0x1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=0x1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=0x1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=0x1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.args=0x1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.args=0x1
func.errc.noreturn=true
func.errc.ret=void
func.error.arg.0=char *,format
func.error.args=0x3
func.error.ret=void
func.errx.arg.0=int,eval
func.errx.args=0x1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=0x1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=double,x
func.exp.args=0x1
func.exp.ret=double
func.exp2.arg.0=double,x
func.exp2.args=0x1
func.exp2.ret=double
func.exp2f.arg.0=float,x
func.exp2f.args=0x1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=0x1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=0x1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=0x1
func.expl.ret=long double
func.expm1.arg.0=double,x
func.expm1.args=0x1
func.expm1.ret=double
func.expm1f.arg.0=float,x
func.expm1f.args=0x1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=0x1
func.expm1l.ret=long double
func.fabs.arg.0=double,x
func.fabs.args=0x1
func.fabs.ret=double
func.fabsf.arg.0=float,x
func.fabsf.args=0x1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=0x1
func.fabsl.ret=long double
func.fchmod.arg.0=int,mode
func.fchmod.args=0x2
func.fchmod.ret=int
func.fclose.arg.0=FILE *,stream
func.fclose.args=0x1
func.fclose.ret=int
func.fdim.arg.0=double,y
func.fdim.args=0x2
func.fdim.ret=double
func.fdimf.arg.0=float,y
func.fdimf.args=0x2
func.fdimf.ret=float
func.fdiml.arg.0=long double,y
func.fdiml.args=0x2
func.fdiml.ret=long double
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=0x1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=0x1
func.fegetenv.ret=int
func.fegetexceptflag.arg.0=int,excepts
func.fegetexceptflag.args=0x2
func.fegetexceptflag.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=0x1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=0x1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=0x1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=0x1
func.ferror.ret=int
func.fesetenv.arg.0=fenv_t *,arg
func.fesetenv.args=0x1
func.fesetenv.ret=int
func.fesetexceptflag.arg.0=int,excepts
func.fesetexceptflag.args=0x2
func.fesetexceptflag.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=0x1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=0x1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=fenv_t *,arg
func.feupdateenv.args=0x1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=0x1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=0x1
func.fgetc.ret=int
func.fgetpos.arg.0=fpos_t *,pos
func.fgetpos.args=0x2
func.fgetpos.ret=int
func.fgets.arg.0=FILE *,stream
func.fgets.args=0x3
func.fgets.ret=char *
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=0x1
func.fgetwc.ret=wint_t
func.fgetws.arg.0=FILE *,stream
func.fgetws.args=0x3
func.fgetws.ret=wchar_t *
func.fileno.arg.0=FILE *,stream
func.fileno.args=0x1
func.fileno.ret=int
func.floor.arg.0=double,x
func.floor.args=0x1
func.floor.ret=double
func.floorf.arg.0=float,x
func.floorf.args=0x1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=0x1
func.floorl.ret=long double
func.fma.arg.0=double,z
func.fma.args=0x3
func.fma.ret=double
func.fmaf.arg.0=float,z
func.fmaf.args=0x3
func.fmaf.ret=float
func.fmal.arg.0=long double,z
func.fmal.args=0x3
func.fmal.ret=long double
func.fmax.arg.0=double,y
func.fmax.args=0x2
func.fmax.ret=double
func.fmaxf.arg.0=float,y
func.fmaxf.args=0x2
func.fmaxf.ret=float
func.fmaxl.arg.0=long double,y
func.fmaxl.args=0x2
func.fmaxl.ret=long double
func.fmin.arg.0=double,y
func.fmin.args=0x2
func.fmin.ret=double
func.fminf.arg.0=float,y
func.fminf.args=0x2
func.fminf.ret=float
func.fminl.arg.0=long double,y
func.fminl.args=0x2
func.fminl.ret=long double
func.fmod.arg.0=double,y
func.fmod.args=0x2
func.fmod.ret=double
func.fmodf.arg.0=float,y
func.fmodf.args=0x2
func.fmodf.ret=float
func.fmodl.arg.0=long double,y
func.fmodl.args=0x2
func.fmodl.ret=long double
func.fopen.arg.0=const char *,mode
func.fopen.args=0x2
func.fopen.ret=FILE *
func.fpclassify.arg.0=double,x
func.fpclassify.args=0x1
func.fpclassify.ret=int
func.fprintf.arg.0=void *,va_args
func.fprintf.args=0x3
func.fprintf.ret=int
func.fputc.arg.0=FILE *,stream
func.fputc.args=0x2
func.fputc.ret=int
func.fputs.arg.0=FILE *,stream
func.fputs.args=0x2
func.fputs.ret=int
func.fputwc.arg.0=FILE *,stream
func.fputwc.args=0x2
func.fputwc.ret=wint_t
func.fputws.arg.0=FILE *,stream
func.fputws.args=0x2
func.fputws.ret=int
func.fread.arg.0=FILE *,stream
func.fread.args=0x4
func.fread.ret=size_t
func.free.arg.0=void *,ptr
func.free.args=0x1
func.free.ret=void
func.freopen.arg.0=FILE *,stream
func.freopen.args=0x3
func.freopen.ret=FILE *
func.frexp.arg.0=int *,exp
func.frexp.args=0x2
func.frexp.ret=double
func.frexpf.arg.0=int *,exp
func.frexpf.args=0x2
func.frexpf.ret=float
func.frexpl.arg.0=int *,exp
func.frexpl.args=0x2
func.frexpl.ret=long double
func.fscanf.arg.0=void *,va_args
func.fscanf.args=0x3
func.fscanf.ret=int
func.fseek.arg.0=int,whence
func.fseek.args=0x3
func.fseek.ret=int
func.fsetpos.arg.0=fpos_t *,pos
func.fsetpos.args=0x2
func.fsetpos.ret=int
func.fstat.arg.0=void *,buf
func.fstat.args=0x2
func.fstat.ret=int
func.ftell.arg.0=FILE *,stream
func.ftell.args=0x1
func.ftell.ret=long
func.fts_children_INODE64.arg.0=int,opotions
func.fts_children_INODE64.args=0x2
func.fts_children_INODE64.ret=void *
func.fts_close_INODE64.arg.0=void *,ftsp
func.fts_close_INODE64.args=0x1
func.fts_close_INODE64.ret=int
func.fts_open_INODE64.arg.0=void *,ftsen_INODE64t
func.fts_open_INODE64.args=0x4
func.fts_open_INODE64.ret=void *
func.fts_read_INODE64.arg.0=void *,ftsp
func.fts_read_INODE64.args=0x1
func.fts_read_INODE64.ret=void *
func.fts_set_INODE64.arg.0=int,options
func.fts_set_INODE64.args=0x3
func.fts_set_INODE64.ret=int
func.fwide.arg.0=int,mode
func.fwide.args=0x2
func.fwide.ret=int
func.fwprintf.arg.0=wchar_t *,format
func.fwprintf.args=0x2
func.fwprintf.ret=int
func.fwrite.arg.0=FILE *,stream
func.fwrite.args=0x4
func.fwrite.ret=size_t
func.fwscanf.arg.0=wchar_t *,format
func.fwscanf.args=0x2
func.fwscanf.ret=int
func.getc.arg.0=FILE *,stream
func.getc.args=0x1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=0x1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getopt.arg.0=const char *,optstring
func.getopt.args=0x3
func.getopt.ret=int
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=0x1
func.gets.ret=char *
func.getsockname.arg.0=socklen_t *,addrlen
func.getsockname.args=0x3
func.getsockname.ret=int
func.getsockopt.arg.0=socklen_t *,optlen
func.getsockopt.args=0x5
func.getsockopt.ret=int
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=0x1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=time_t *,timer
func.gmtime.args=0x1
func.gmtime.ret=struct tm *
func.group_from_gid.arg.0=int,nogroup
func.group_from_gid.args=0x2
func.group_from_gid.ret=char *
func.humanize_number.arg.0=char *,buf
func.humanize_number.args=0x1
func.humanize_number.ret=int
func.hypot.arg.0=double,y
func.hypot.args=0x2
func.hypot.ret=double
func.hypotf.arg.0=float,y
func.hypotf.args=0x2
func.hypotf.ret=float
func.hypotl.arg.0=long double,y
func.hypotl.args=0x2
func.hypotl.ret=long double
func.ilogb.arg.0=double,x
func.ilogb.args=0x1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=0x1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=0x1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=0x1
func.imaxabs.ret=intmax_t
func.imaxdiv.arg.0=intmax_t,denom
func.imaxdiv.args=0x2
func.imaxdiv.ret=imaxdiv_t
func.inet_aton.arg.0=void *,pin
func.inet_aton.args=0x2
func.inet_aton.ret=int
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=0x1
func.inet_ntoa.ret=char *
func.initstate.arg.0=size_t,size
func.initstate.args=0x3
func.initstate.ret=char *
func.ioctl.arg.0=unsigned long,request
func.ioctl.args=0x2
func.ioctl.ret=int
func.isalnum.arg.0=int,c
func.isalnum.args=0x1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=0x1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=0x1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=0x1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=0x1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=0x1
func.isdigit.ret=int
func.isfinite.arg.0=double,x
func.isfinite.args=0x1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=0x1
func.isgraph.ret=int
func.isgreater.arg.0=double,y
func.isgreater.args=0x2
func.isgreater.ret=bool
func.isgreaterequal.arg.0=double,y
func.isgreaterequal.args=0x2
func.isgreaterequal.ret=bool
func.isinf.arg.0=double,x
func.isinf.args=0x1
func.isinf.ret=bool
func.isless.arg.0=double,y
func.isless.args=0x2
func.isless.ret=bool
func.islessequal.arg.0=double,y
func.islessequal.args=0x2
func.islessequal.ret=bool
func.islessgreater.arg.0=double,y
func.islessgreater.args=0x2
func.islessgreater.ret=bool
func.islower.arg.0=int,c
func.islower.args=0x1
func.islower.ret=int
func.isnan.arg.0=double,x
func.isnan.args=0x1
func.isnan.ret=bool
func.isnormal.arg.0=double,x
func.isnormal.args=0x1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=0x1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=0x1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=0x1
func.isspace.ret=int
func.isunordered.arg.0=double,y
func.isunordered.args=0x2
func.isunordered.ret=bool
func.isupper.arg.0=int,c
func.isupper.args=0x1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=0x1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=0x1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=0x1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=0x1
func.iswcntrl.ret=int
func.iswctype.arg.0=wctype_t,desc
func.iswctype.args=0x2
func.iswctype.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=0x1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=0x1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=0x1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=0x1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=0x1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=0x1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=0x1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=0x1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=0x1
func.isxdigit.ret=int
func.kill.arg.0=int,sig
func.kill.args=0x2
func.kill.ret=int
func.labs.arg.0=long,j
func.labs.args=0x1
func.labs.ret=long
func.ldexp.arg.0=int,exp
func.ldexp.args=0x2
func.ldexp.ret=double
func.ldexpf.arg.0=int,exp
func.ldexpf.args=0x2
func.ldexpf.ret=float
func.ldexpl.arg.0=int,exp
func.ldexpl.args=0x2
func.ldexpl.ret=long double
func.ldiv.arg.0=long,denom
func.ldiv.args=0x2
func.ldiv.ret=ldiv_t
func.lgamma.arg.0=double,x
func.lgamma.args=0x1
func.lgamma.ret=double
func.lgammaf.arg.0=float,x
func.lgammaf.args=0x1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=0x1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=0x1
func.llabs.ret=long long
func.lldiv.arg.0=long long,denom
func.lldiv.args=0x2
func.lldiv.ret=lldiv_t
func.llrint.arg.0=double,x
func.llrint.args=0x1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=0x1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=0x1
func.llrintl.ret=long long
func.llround.arg.0=double,x
func.llround.args=0x1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=0x1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=0x1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=struct lconv *
func.localtime.arg.0=time_t *,timer
func.localtime.args=0x1
func.localtime.ret=struct tm *
func.log.arg.0=double,x
func.log.args=0x1
func.log.ret=double
func.log10.arg.0=double,x
func.log10.args=0x1
func.log10.ret=double
func.log10f.arg.0=float,x
func.log10f.args=0x1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=0x1
func.log10l.ret=long double
func.log1p.arg.0=double,x
func.log1p.args=0x1
func.log1p.ret=double
func.log1pf.arg.0=float,x
func.log1pf.args=0x1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=0x1
func.log1pl.ret=long double
func.log2.arg.0=double,x
func.log2.args=0x1
func.log2.ret=double
func.log2f.arg.0=float,x
func.log2f.args=0x1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=0x1
func.log2l.ret=long double
func.logb.arg.0=double,x
func.logb.args=0x1
func.logb.ret=double
func.logbf.arg.0=float,x
func.logbf.args=0x1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=0x1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=0x1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=0x1
func.logl.ret=long double
func.longjmp.arg.0=int,val
func.longjmp.args=0x2
func.longjmp.ret=void
func.lrint.arg.0=double,x
func.lrint.args=0x1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=0x1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=0x1
func.lrintl.ret=long
func.lround.arg.0=double,x
func.lround.args=0x1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=0x1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=0x1
func.lroundl.ret=long
func.lstat.arg.0=void *,buf
func.lstat.args=0x2
func.lstat.ret=void
func.main.arg.0=char **,envp
func.main.args=0x3
func.main.ret=int
func.malloc.arg.0=size_t,size
func.malloc.args=0x1
func.malloc.ret=void *
func.maskrune.arg.0=unsigned long,f
func.maskrune.args=0x2
func.maskrune.ret=int
func.mblen.arg.0=size_t,n
func.mblen.args=0x2
func.mblen.ret=int
func.mbrlen.arg.0=mbstate_t *,ps
func.mbrlen.args=0x3
func.mbrlen.ret=size_t
func.mbrtowc.arg.0=mbstate_t *,ps
func.mbrtowc.args=0x4
func.mbrtowc.ret=size_t
func.mbsinit.arg.0=mbstate_t *,ps
func.mbsinit.args=0x1
func.mbsinit.ret=int
func.mbsrtowcs.arg.0=mbstate_t *,ps
func.mbsrtowcs.args=0x4
func.mbsrtowcs.ret=size_t
func.mbstowcs.arg.0=size_t,n
func.mbstowcs.args=0x3
func.mbstowcs.ret=size_t
func.mbtowc.arg.0=size_t,n
func.mbtowc.args=0x3
func.mbtowc.ret=int
func.memchr.arg.0=size_t,n
func.memchr.args=0x3
func.memchr.ret=void *
func.memcmp.arg.0=size_t,n
func.memcmp.args=0x3
func.memcmp.ret=int
func.memcpy.arg.0=size_t,n
func.memcpy.args=0x3
func.memcpy.ret=void *
func.memmem.arg.0=int,little_len
func.memmem.args=0x4
func.memmem.ret=void *
func.memmove.arg.0=size_t,n
func.memmove.args=0x3
func.memmove.ret=void *
func.memset.arg.0=size_t,n
func.memset.args=0x3
func.memset.ret=void *
func.mkstemp.arg.0=char *,template
func.mkstemp.args=0x1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=0x1
func.mktemp.ret=char *
func.mktime.arg.0=struct tm *,timeptr
func.mktime.args=0x1
func.mktime.ret=time_t
func.mmap.arg.0=size_t,offset
func.mmap.args=0x6
func.mmap.ret=void *
func.modf.arg.0=double *,iptr
func.modf.args=0x2
func.modf.ret=double
func.modff.arg.0=float *,iptr
func.modff.args=0x2
func.modff.ret=float
func.modfl.arg.0=long double *,iptr
func.modfl.args=0x2
func.modfl.ret=long double
func.munmap.arg.0=size_t,length
func.munmap.args=0x2
func.munmap.ret=int
func.nan.arg.0=const char *,str
func.nan.args=0x1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=0x1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=0x1
func.nanl.ret=long double
func.nanosleep.arg.0=struct timespec *,rem
func.nanosleep.args=0x2
func.nanosleep.ret=int
func.nearbyint.arg.0=double,x
func.nearbyint.args=0x1
func.nearbyint.ret=double
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=0x1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=0x1
func.nearbyintl.ret=long double
func.nextafter.arg.0=double,y
func.nextafter.args=0x2
func.nextafter.ret=double
func.nextafterf.arg.0=float,y
func.nextafterf.args=0x2
func.nextafterf.ret=float
func.nextafterl.arg.0=long double,y
func.nextafterl.args=0x2
func.nextafterl.ret=long double
func.nexttoward.arg.0=long double,y
func.nexttoward.args=0x2
func.nexttoward.ret=double
func.nexttowardf.arg.0=long double,y
func.nexttowardf.args=0x2
func.nexttowardf.ret=float
func.nexttowardl.arg.0=long double,y
func.nexttowardl.args=0x2
func.nexttowardl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=0x1
func.nl_langinfo.ret=char *
func.nl_langinfo_l.arg.0=locale_t,locale
func.nl_langinfo_l.args=0x2
func.nl_langinfo_l.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=0x1
func.objc_enumerationMutation.ret=void
func.objc_msgSend.arg.0=char *,selector
func.objc_msgSend.args=0x2
func.objc_msgSend.ret=void *
func.objc_msgSendSuper2.arg.0=char *,selector
func.objc_msgSendSuper2.args=0x2
func.objc_msgSendSuper2.ret=void *
func.objc_release.arg.0=void *,instance
func.objc_release.args=0x1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=0x1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=0x1
func.objc_retainAutoreleasedReturnValue.ret=void
func.objc_storeStrong.arg.0=int,type
func.objc_storeStrong.args=0x2
func.objc_storeStrong.ret=void *
func.open.arg.0=int,oflag
func.open.args=0x2
func.open.ret=int
func.openat.arg.0=int,oflag
func.openat.args=0x3
func.openat.ret=int
func.pclose.arg.0=FILE *,stream
func.pclose.args=0x1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=0x1
func.perror.ret=void
func.popen.arg.0=const char *,mode
func.popen.args=0x2
func.popen.ret=FILE *
func.pow.arg.0=double,y
func.pow.args=0x2
func.pow.ret=double
func.powf.arg.0=float,y
func.powf.args=0x2
func.powf.ret=float
func.powl.arg.0=long double,y
func.powl.args=0x2
func.powl.ret=long double
func.prctl.arg.0=unsigned long,v5
func.prctl.args=0x5
func.prctl.ret=int
func.printf.arg.0=const char *,format
func.printf.args=0x1
func.printf.ret=int
func.ptrace.arg.0=void *,data
func.ptrace.args=0x4
func.ptrace.ret=long
func.putc.arg.0=FILE *,stream
func.putc.args=0x2
func.putc.ret=int
func.putchar.arg.0=int,c
func.putchar.args=0x1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=0x1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=0x1
func.pututxline.ret=void *
func.putwc.arg.0=FILE *,stream
func.putwc.args=0x2
func.putwc.ret=wint_t
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=0x1
func.putwchar.ret=wint_t
func.qsort.arg.0=void *,compar
func.qsort.args=0x4
func.qsort.ret=void
func.quick_exit.arg.0=int,status
func.quick_exit.args=0x1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=0x1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.read.arg.0=size_t,nbyte
func.read.args=0x3
func.read.ret=ssize_t
func.realloc.arg.0=size_t,size
func.realloc.args=0x2
func.realloc.ret=void *
func.reallocf.arg.0=size_t,size
func.reallocf.args=0x2
func.reallocf.ret=void *
func.recv.arg.0=int,flags
func.recv.args=0x4
func.recv.ret=ssize_t
func.remainder.arg.0=double,y
func.remainder.args=0x2
func.remainder.ret=double
func.remainderf.arg.0=float,y
func.remainderf.args=0x2
func.remainderf.ret=float
func.remainderl.arg.0=long double,y
func.remainderl.args=0x2
func.remainderl.ret=long double
func.remove.arg.0=const char *,filename
func.remove.args=0x1
func.remove.ret=int
func.remquo.arg.0=int *,pquo
func.remquo.args=0x3
func.remquo.ret=double
func.remquof.arg.0=int *,pquo
func.remquof.args=0x3
func.remquof.ret=float
func.remquol.arg.0=int *,pquo
func.remquol.args=0x3
func.remquol.ret=long double
func.rename.arg.0=const char *,newpath
func.rename.args=0x2
func.rename.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=0x1
func.rewind.ret=void
func.rint.arg.0=double,x
func.rint.args=0x1
func.rint.ret=double
func.rintf.arg.0=float,x
func.rintf.args=0x1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=0x1
func.rintl.ret=long double
func.round.arg.0=double,x
func.round.args=0x1
func.round.ret=double
func.roundf.arg.0=float,x
func.roundf.args=0x1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=0x1
func.roundl.ret=long double
func.scalbln.arg.0=long,ex
func.scalbln.args=0x2
func.scalbln.ret=double
func.scalblnf.arg.0=long,ex
func.scalblnf.args=0x2
func.scalblnf.ret=float
func.scalblnl.arg.0=long,ex
func.scalblnl.args=0x2
func.scalblnl.ret=long double
func.scalbn.arg.0=int,ex
func.scalbn.args=0x2
func.scalbn.ret=double
func.scalbnf.arg.0=int,ex
func.scalbnf.args=0x2
func.scalbnf.ret=float
func.scalbnl.arg.0=int,ex
func.scalbnl.args=0x2
func.scalbnl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=0x1
func.scanf.ret=int
func.select.arg.0=struct timeval *,timeout
func.select.args=0x5
func.select.ret=int
func.send.arg.0=int,flags
func.send.args=0x4
func.send.ret=ssize_t
func.setbuf.arg.0=char *,buf
func.setbuf.args=0x2
func.setbuf.ret=void
func.setenv.arg.0=int,overwrite
func.setenv.args=0x3
func.setenv.ret=int
func.setjmp.arg.0=jmp_buf,env
func.setjmp.args=0x1
func.setjmp.ret=int
func.setlocale.arg.0=const char *,locale
func.setlocale.args=0x2
func.setlocale.ret=char *
func.setsockopt.arg.0=socklen_t,optlen
func.setsockopt.args=0x5
func.setsockopt.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=0x1
func.setstate.ret=const char *
func.setvbuf.arg.0=size_t,size
func.setvbuf.args=0x4
func.setvbuf.ret=int
func.sigaction.arg.0=struct sigaction *,oldact
func.sigaction.args=0x3
func.sigaction.ret=int
func.signal.arg.0=void *,func
func.signal.args=0x2
func.signal.ret=void
func.signbit.arg.0=double,x
func.signbit.args=0x1
func.signbit.ret=bool
func.sin.arg.0=double,x
func.sin.args=0x1
func.sin.ret=double
func.sinf.arg.0=float,x
func.sinf.args=0x1
func.sinf.ret=float
func.sinh.arg.0=double,x
func.sinh.args=0x1
func.sinh.ret=double
func.sinhf.arg.0=float,x
func.sinhf.args=0x1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=0x1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=0x1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=0x1
func.sleep.ret=int
func.snprintf.arg.0=va_list,args
func.snprintf.args=0x4
func.snprintf.ret=int
func.snprintf_chk.arg.0=va_list,args
func.snprintf_chk.args=0x4
func.snprintf_chk.ret=int
func.socket.arg.0=int,protocol
func.socket.args=0x3
func.socket.ret=int
func.sprintf.arg.0=va_list,args
func.sprintf.args=0x3
func.sprintf.ret=int
func.sprintf_chk.arg.0=va_list,args
func.sprintf_chk.args=0x3
func.sprintf_chk.ret=int
func.sqrt.arg.0=double,x
func.sqrt.args=0x1
func.sqrt.ret=double
func.sqrtf.arg.0=float,x
func.sqrtf.args=0x1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=0x1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=0x1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=0x1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.sscanf.arg.0=va_list,args
func.sscanf.args=0x3
func.sscanf.ret=int
func.strcasecmp.arg.0=const char *,s2
func.strcasecmp.args=0x2
func.strcasecmp.ret=int
func.strcat.arg.0=const char *,s2
func.strcat.args=0x2
func.strcat.ret=char *
func.strchr.arg.0=int,c
func.strchr.args=0x2
func.strchr.ret=char *
func.strcmp.arg.0=const char *,s2
func.strcmp.args=0x2
func.strcmp.ret=int
func.strcoll.arg.0=const char *,s2
func.strcoll.args=0x2
func.strcoll.ret=int
func.strcpy.arg.0=const char *,src
func.strcpy.args=0x2
func.strcpy.ret=char *
func.strcpy_chk.arg.0=const char *,src
func.strcpy_chk.args=0x2
func.strcpy_chk.ret=char *
func.strcspn.arg.0=const char *,s2
func.strcspn.args=0x2
func.strcspn.ret=size_t
func.strdup.arg.0=const char *,src
func.strdup.args=0x1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=0x1
func.strerror.ret=char *
func.strftime.arg.0=struct tm *,timeptr
func.strftime.args=0x4
func.strftime.ret=size_t
func.strlcpy.arg.0=size_t,_n
func.strlcpy.args=0x3
func.strlcpy.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=0x1
func.strlen.ret=size_t
func.strmode.arg.0=char *,bp
func.strmode.args=0x2
func.strmode.ret=void
func.strncasecmp.arg.0=size_t,n
func.strncasecmp.args=0x3
func.strncasecmp.ret=int
func.strncat.arg.0=size_t,n
func.strncat.args=0x3
func.strncat.ret=char *
func.strncmp.arg.0=size_t,n
func.strncmp.args=0x3
func.strncmp.ret=int
func.strncpy.arg.0=size_t,_n
func.strncpy.args=0x3
func.strncpy.ret=char *
func.strndup.arg.0=int,n
func.strndup.args=0x2
func.strndup.ret=char *
func.strpbrk.arg.0=const char *,s2
func.strpbrk.args=0x2
func.strpbrk.ret=char *
func.strrchr.arg.0=int,c
func.strrchr.args=0x2
func.strrchr.ret=char *
func.strspn.arg.0=const char *,s2
func.strspn.args=0x2
func.strspn.ret=size_t
func.strstr.arg.0=const char *,s2
func.strstr.args=0x2
func.strstr.ret=char *
func.strtod.arg.0=char **,endptr
func.strtod.args=0x2
func.strtod.ret=double
func.strtof.arg.0=char **,endptr
func.strtof.args=0x2
func.strtof.ret=float
func.strtoimax.arg.0=int,base
func.strtoimax.args=0x3
func.strtoimax.ret=intmax_t
func.strtok.arg.0=const char *,s2
func.strtok.args=0x2
func.strtok.ret=char *
func.strtol.arg.0=int,base
func.strtol.args=0x3
func.strtol.ret=long
func.strtold.arg.0=char **,endptr
func.strtold.args=0x2
func.strtold.ret=long double
func.strtoll.arg.0=int,base
func.strtoll.args=0x3
func.strtoll.ret=long long
func.strtoul.arg.0=int,base
func.strtoul.args=0x3
func.strtoul.ret=long
func.strtoull.arg.0=int,base
func.strtoull.args=0x3
func.strtoull.ret=long long
func.strtoumax.arg.0=int,base
func.strtoumax.args=0x3
func.strtoumax.ret=uintmax_t
func.strxfrm.arg.0=size_t,n
func.strxfrm.args=0x3
func.strxfrm.ret=size_t
func.swprintf.arg.0=wchar_t *,format
func.swprintf.args=0x3
func.swprintf.ret=int
func.swscanf.arg.0=wchar_t *,format
func.swscanf.args=0x2
func.swscanf.ret=int
func.symlink.arg.0=const char *,path2
func.symlink.args=0x2
func.symlink.ret=int
func.system.arg.0=const char *,string
func.system.args=0x1
func.system.ret=int
func.tan.arg.0=double,x
func.tan.args=0x1
func.tan.ret=double
func.tanf.arg.0=float,x
func.tanf.args=0x1
func.tanf.ret=float
func.tanh.arg.0=double,x
func.tanh.args=0x1
func.tanh.ret=double
func.tanhf.arg.0=float,x
func.tanhf.args=0x1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=0x1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=0x1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=0x1
func.textdomain.ret=char *
func.tgamma.arg.0=double,x
func.tgamma.args=0x1
func.tgamma.ret=double
func.tgammaf.arg.0=float,x
func.tgammaf.args=0x1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=0x1
func.tgammal.ret=long double
func.tgoto.arg.0=int,row
func.tgoto.args=0x3
func.tgoto.ret=char *
func.time.arg.0=time_t *,timer
func.time.args=0x1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=FILE *
func.tmpnam.arg.0=char *,s
func.tmpnam.args=0x1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=0x1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=0x1
func.toupper.ret=int
func.towctrans.arg.0=wctrans_t,desc
func.towctrans.args=0x2
func.towctrans.ret=wint_t
func.towlower.arg.0=wint_t,wc
func.towlower.args=0x1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=0x1
func.towupper.ret=wint_t
func.trunc.arg.0=double,x
func.trunc.args=0x1
func.trunc.ret=double
func.truncf.arg.0=float,x
func.truncf.args=0x1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=0x1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=0x1
func.umask.ret=int
func.ungetc.arg.0=FILE *,stream
func.ungetc.args=0x2
func.ungetc.ret=int
func.ungetwc.arg.0=FILE *,stream
func.ungetwc.args=0x2
func.ungetwc.ret=wint_t
func.unlink.arg.0=const char *,path
func.unlink.args=0x1
func.unlink.ret=int
func.user_from_uid.arg.0=int,nouser
func.user_from_uid.args=0x2
func.user_from_uid.ret=char *
func.usleep.arg.0=int,s
func.usleep.args=0x1
func.usleep.ret=int
func.vfprintf.arg.0=va_list,ap
func.vfprintf.args=0x3
func.vfprintf.ret=int
func.vfscanf.arg.0=va_list,ap
func.vfscanf.args=0x3
func.vfscanf.ret=int
func.vfwprintf.arg.0=va_list,arg
func.vfwprintf.args=0x3
func.vfwprintf.ret=int
func.vfwscanf.arg.0=va_list,arg
func.vfwscanf.args=0x3
func.vfwscanf.ret=int
func.vprintf.arg.0=va_list,ap
func.vprintf.args=0x2
func.vprintf.ret=int
func.vscanf.arg.0=va_list,ap
func.vscanf.args=0x2
func.vscanf.ret=int
func.vsnprintf.arg.0=va_list,arg
func.vsnprintf.args=0x4
func.vsnprintf.ret=int
func.vsprintf.arg.0=va_list,arg
func.vsprintf.args=0x3
func.vsprintf.ret=int
func.vsscanf.arg.0=va_list,arg
func.vsscanf.args=0x3
func.vsscanf.ret=int
func.vswprintf.arg.0=va_list,arg
func.vswprintf.args=0x4
func.vswprintf.ret=int
func.vswscanf.arg.0=va_list,arg
func.vswscanf.args=0x3
func.vswscanf.ret=int
func.vwprintf.arg.0=va_list,arg
func.vwprintf.args=0x2
func.vwprintf.ret=int
func.vwscanf.arg.0=va_list,arg
func.vwscanf.args=0x2
func.vwscanf.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=0x1
func.wait.ret=pid_t
func.waitid.arg.0=int,options
func.waitid.args=0x4
func.waitid.ret=int
func.waitpid.arg.0=int,options
func.waitpid.args=0x3
func.waitpid.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=0x1
func.warn.ret=void
func.warnc.arg.0=int,opt
func.warnc.args=0x2
func.warnc.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=0x1
func.warnx.ret=void
func.wcrtomb.arg.0=mbstate_t *,ps
func.wcrtomb.args=0x3
func.wcrtomb.ret=size_t
func.wcscat.arg.0=wchar_t *,s2
func.wcscat.args=0x2
func.wcscat.ret=wchar_t *
func.wcschr.arg.0=wchar_t,c
func.wcschr.args=0x2
func.wcschr.ret=wchar_t *
func.wcscmp.arg.0=wchar_t *,s2
func.wcscmp.args=0x2
func.wcscmp.ret=int
func.wcscoll.arg.0=wchar_t *,s2
func.wcscoll.args=0x2
func.wcscoll.ret=int
func.wcscpy.arg.0=wchar_t *,s2
func.wcscpy.args=0x2
func.wcscpy.ret=wchar_t *
func.wcscspn.arg.0=wchar_t *,s2
func.wcscspn.args=0x2
func.wcscspn.ret=size_t
func.wcsftime.arg.0=struct tm *,timeptr
func.wcsftime.args=0x4
func.wcsftime.ret=size_t
func.wcslen.arg.0=wchar_t *,s
func.wcslen.args=0x1
func.wcslen.ret=size_t
func.wcsncat.arg.0=size_t,n
func.wcsncat.args=0x3
func.wcsncat.ret=wchar_t *
func.wcsncmp.arg.0=size_t,n
func.wcsncmp.args=0x3
func.wcsncmp.ret=int
func.wcsncpy.arg.0=size_t,n
func.wcsncpy.args=0x3
func.wcsncpy.ret=wchar_t *
func.wcspbrk.arg.0=wchar_t *,s2
func.wcspbrk.args=0x2
func.wcspbrk.ret=wchar_t *
func.wcsrchr.arg.0=wchar_t,c
func.wcsrchr.args=0x2
func.wcsrchr.ret=wchar_t *
func.wcsrtombs.arg.0=mbstate_t *,ps
func.wcsrtombs.args=0x4
func.wcsrtombs.ret=size_t
func.wcsspn.arg.0=wchar_t *,s2
func.wcsspn.args=0x2
func.wcsspn.ret=size_t
func.wcsstr.arg.0=wchar_t *,s2
func.wcsstr.args=0x2
func.wcsstr.ret=wchar_t *
func.wcstod.arg.0=wchar_t **,endptr
func.wcstod.args=0x2
func.wcstod.ret=double
func.wcstof.arg.0=wchar_t **,endptr
func.wcstof.args=0x2
func.wcstof.ret=float
func.wcstoimax.arg.0=int,base
func.wcstoimax.args=0x3
func.wcstoimax.ret=intmax_t
func.wcstok.arg.0=wchar_t **,ptr
func.wcstok.args=0x3
func.wcstok.ret=wchar_t *
func.wcstol.arg.0=int,base
func.wcstol.args=0x3
func.wcstol.ret=long
func.wcstold.arg.0=wchar_t **,endptr
func.wcstold.args=0x2
func.wcstold.ret=long double
func.wcstoll.arg.0=int,base
func.wcstoll.args=0x3
func.wcstoll.ret=long long
func.wcstombs.arg.0=size_t,n
func.wcstombs.args=0x3
func.wcstombs.ret=size_t
func.wcstoul.arg.0=int,base
func.wcstoul.args=0x3
func.wcstoul.ret=long
func.wcstoull.arg.0=int,base
func.wcstoull.args=0x3
func.wcstoull.ret=long long
func.wcstoumax.arg.0=int,base
func.wcstoumax.args=0x3
func.wcstoumax.ret=uintmax_t
func.wcsxfrm.arg.0=size_t,n
func.wcsxfrm.args=0x3
func.wcsxfrm.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=0x1
func.wctob.ret=int
func.wctomb.arg.0=wchar_t,wchar
func.wctomb.args=0x2
func.wctomb.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=0x1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=0x1
func.wctype.ret=wctype_t
func.wmemchr.arg.0=size_t,n
func.wmemchr.args=0x3
func.wmemchr.ret=wchar_t *
func.wmemcmp.arg.0=size_t,n
func.wmemcmp.args=0x3
func.wmemcmp.ret=int
func.wmemcpy.arg.0=size_t,n
func.wmemcpy.args=0x3
func.wmemcpy.ret=wchar_t *
func.wmemmove.arg.0=size_t,n
func.wmemmove.args=0x3
func.wmemmove.ret=wchar_t *
func.wmemset.arg.0=size_t,n
func.wmemset.args=0x3
func.wmemset.ret=wchar_t *
func.wprintf.arg.0=wchar_t *,format
func.wprintf.args=0x1
func.wprintf.ret=int
func.write.arg.0=size_t,nbytes
func.write.args=0x3
func.write.ret=ssize_t
func.wscanf.arg.0=wchar_t *,format
func.wscanf.args=0x1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=0x1
func.xmalloc.ret=void *
fwide=func
fwprintf=func
fwrite=func
fwscanf=func
getc=func
getchar=func
getenv=func
geteuid=func
getopt=func
getpid=func
getprogname=func
gets=func
getsockname=func
getsockopt=func
getuid=func
getwc=func
getwchar=func
gmtime=func
group_from_gid=func
humanize_number=func
hypot=func
hypotf=func
hypotl=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
imaxdiv=func
inet_aton=func
inet_ntoa=func
initstate=func
ioctl=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isgreater=func
isgreaterequal=func
isinf=func
isless=func
islessequal=func
islessgreater=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isunordered=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswctype=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
kill=func
labs=func
ldexp=func
ldexpf=func
ldexpl=func
ldiv=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
lldiv=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
longjmp=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
lstat=func
main=func
malloc=func
maskrune=func
mblen=func
mbrlen=func
mbrtowc=func
mbsinit=func
mbsrtowcs=func
mbstowcs=func
mbtowc=func
memchr=func
memcmp=func
memcpy=func
memmem=func
memmove=func
memset=func
mkstemp=func
mktemp=func
mktime=func
mmap=func
modf=func
modff=func
modfl=func
munmap=func
nan=func
nanf=func
nanl=func
nanosleep=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nextafter=func
nextafterf=func
nextafterl=func
nexttoward=func
nexttowardf=func
nexttowardl=func
nl_langinfo=func
nl_langinfo_l=func
objc_enumerationMutation=func
objc_msgSend=func
objc_msgSendSuper2=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
objc_storeStrong=func
open=func
openat=func
pclose=func
perror=func
popen=func
pow=func
powf=func
powl=func
prctl=func
printf=func
ptrace=func
putc=func
putchar=func
puts=func
pututxline=func
putwc=func
putwchar=func
qsort=func
quick_exit=func
raise=func
rand=func
random=func
read=func
realloc=func
reallocf=func
recv=func
remainder=func
remainderf=func
remainderl=func
remove=func
remquo=func
remquof=func
remquol=func
rename=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scalbln=func
scalblnf=func
scalblnl=func
scalbn=func
scalbnf=func
scalbnl=func
scanf=func
select=func
send=func
setbuf=func
setenv=func
setjmp=func
setlocale=func
setsockopt=func
setstate=func
setvbuf=func
sigaction=func
signal=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
sleep=func
snprintf=func
snprintf_chk=func
socket=func
sprintf=func
sprintf_chk=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
sscanf=func
strcasecmp=func
strcat=func
strchr=func
strcmp=func
strcoll=func
strcpy=func
strcpy_chk=func
strcspn=func
strdup=func
strerror=func
strftime=func
strlcpy=func
strlen=func
strmode=func
strncasecmp=func
strncat=func
strncmp=func
strncpy=func
strndup=func
strpbrk=func
strrchr=func
strspn=func
strstr=func
strtod=func
strtof=func
strtoimax=func
strtok=func
strtol=func
strtold=func
strtoll=func
strtoul=func
strtoull=func
strtoumax=func
strxfrm=func
swprintf=func
swscanf=func
symlink=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
tgoto=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towctrans=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
umask=func
ungetc=func
ungetwc=func
unlink=func
user_from_uid=func
usleep=func
vfprintf=func
vfscanf=func
vfwprintf=func
vfwscanf=func
vprintf=func
vscanf=func
vsnprintf=func
vsprintf=func
vsscanf=func
vswprintf=func
vswscanf=func
vwprintf=func
vwscanf=func
wait=func
waitid=func
waitpid=func
warn=func
warnc=func
warnx=func
wcrtomb=func
wcscat=func
wcschr=func
wcscmp=func
wcscoll=func
wcscpy=func
wcscspn=func
wcsftime=func
wcslen=func
wcsncat=func
wcsncmp=func
wcsncpy=func
wcspbrk=func
wcsrchr=func
wcsrtombs=func
wcsspn=func
wcsstr=func
wcstod=func
wcstof=func
wcstoimax=func
wcstok=func
wcstol=func
wcstold=func
wcstoll=func
wcstombs=func
wcstoul=func
wcstoull=func
wcstoumax=func
wcsxfrm=func
wctob=func
wctomb=func
wctrans=func
wctype=func
wmemchr=func
wmemcmp=func
wmemcpy=func
wmemmove=func
wmemset=func
wprintf=func
write=func
wscanf=func
xmalloc=func

/core/analysis/cc
amd64=cc
amd64syscall=cc
cc.amd64.arg0=rdi
cc.amd64.arg1=rsi
cc.amd64.arg10=xmm4
cc.amd64.arg2=rdx
cc.amd64.arg3=rcx
cc.amd64.arg4=r8
cc.amd64.arg5=r9
cc.amd64.arg6=xmm0
cc.amd64.arg7=xmm1
cc.amd64.arg8=xmm2
cc.amd64.arg9=xmm3
cc.amd64.ret=rax
cc.amd64syscall.arg0=rdi
cc.amd64syscall.arg1=rsi
cc.amd64syscall.arg2=rdx
cc.amd64syscall.arg3=r10
cc.amd64syscall.arg4=r8
cc.amd64syscall.arg5=r9
cc.amd64syscall.ret=rax
cc.ms.arg0=rcx
cc.ms.arg1=rdx
cc.ms.arg2=r8
cc.ms.arg3=r9
cc.ms.argn=stack
cc.ms.ret=rax
cc.reg.arg0=rdi
cc.reg.arg1=rsi
cc.reg.arg2=rdx
cc.reg.arg3=rcx
cc.reg.ret=rdi
cc.swift.arg0=rdi
cc.swift.arg1=rsi
cc.swift.arg10=xmm4
cc.swift.arg2=rdx
cc.swift.arg3=rcx
cc.swift.arg4=r8
cc.swift.arg5=r9
cc.swift.arg6=xmm0
cc.swift.arg7=xmm1
cc.swift.arg8=xmm2
cc.swift.arg9=xmm3
cc.swift.error=r12
cc.swift.ret=rax
cc.swift.self=r13
default.cc=amd64
ms=cc
reg=cc
swift=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x1000={"name":"fcn.00001000","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":7,"bp_frame":true,"diff":{},"bbs":[4096,4112,4114]}
0x1030={"name":"sym.imp.puts","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4144]}
0x1040={"name":"sym.imp.printf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[4160]}
0x1050={"name":"sym.imp.fgets","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[4176]}
0x1060={"name":"sym.imp.__cxa_finalize","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[4192]}
0x1070={"name":"entry0","bits":64,"type":1,"cc":"amd64","stack":8,"maxstack":8,"ninstr":11,"bp_frame":true,"diff":{},"bbs":[4208],"vars":[{"name":"rtld_fini","type":"void *","kind":"r","reg":"rdx","arg":true,"accs":[{"off":2,"type":"r","reg":"rdx"}]}]}
0x10a0={"name":"fcn.000010a0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":9,"bp_frame":true,"diff":{},"bbs":[4256,4275,4287,4296]}
0x1110={"name":"entry.fini0","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":13,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[4368,4377,4391,4403,4424]}
0x1150={"name":"entry.init0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":15,"bp_frame":true,"diff":{},"bbs":[4304,4340,4352,4360,4432]}
0x1155={"name":"fcn.00001155","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":208,"ninstr":753,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[4437],"vars":[{"name":"var_7550h","type":"const char *","kind":"b","delta":-30040,"accs":[{"off":17,"type":"r","sp":18446744073709521584,"reg":"rbp"},{"off":4095,"type":"r","sp":18446744073709521584,"reg":"rbp"}]},{"name":"format","type":"const char *","kind":"b","delta":-10040,"accs":[{"off":248,"type":"r","sp":18446744073709541584,"reg":"rbp"},{"off":3963,"type":"r","sp":18446744073709541584,"reg":"rbp"}]},{"name":"var_4670h","type":"const char *","kind":"b","delta":-18040,"accs":[{"off":523,"type":"r","sp":18446744073709533584,"reg":"rbp"},{"off":4143,"type":"r","sp":18446744073709533584,"reg":"rbp"}]},{"name":"var_1f60h","type":"const char *","kind":"b","delta":-8040,"accs":[{"off":818,"type":"r","sp":18446744073709543584,"reg":"rbp"},{"off":3970,"type":"r","sp":18446744073709543584,"reg":"rbp"}]},{"name":"var_dae0h","type":"const char *","kind":"b","delta":-56040,"accs":[{"off":1086,"type":"r","sp":18446744073709495584,"reg":"rbp"},{"off":3991,"type":"r","sp":18446744073709495584,"reg":"rbp"}]},{"name":"var_cb40h","type":"const char *","kind":"b","delta":-52040,"accs":[{"off":1129,"type":"r","sp":18446744073709499584,"reg":"rbp"},{"off":4007,"type":"r","sp":18446744073709499584,"reg":"rbp"}]},{"name":"var_36d0h","type":"const char *","kind":"b","delta":-14040,"accs":[{"off":1197,"type":"r","sp":18446744073709537584,"reg":"rbp"},{"off":4159,"type":"r","sp":18446744073709537584,"reg":"rbp"}]},{"name":"var_bba0h","type":"const char *","kind":"b","delta":-48040,"accs":[{"off":1265,"type":"r","sp":18446744073709503584,"reg":"rbp"},{"off":4023,"type":"r","sp":18446744073709503584,"reg":"rbp"}]},{"name":"var_9490h","type":"const char *","kind":"b","delta":-38040,"accs":[{"off":1333,"type":"r","sp":18446744073709513584,"reg":"rbp"},{"off":4063,"type":"r","sp":18446744073709513584,"reg":"rbp"}]},{"name":"var_d310h","type":"const char *","kind":"b","delta":-54040,"accs":[{"off":1401,"type":"r","sp":18446744073709497584,"reg":"rbp"},{"off":3999,"type":"r","sp":18446744073709497584,"reg":"rbp"}]},{"name":"var_65b0h","type":"const char *","kind":"b","delta":-26040,"accs":[{"off":1699,"type":"r","sp":18446744073709525584,"reg":"rbp"},{"off":4111,"type":"r","sp":18446744073709525584,"reg":"rbp"}]},{"name":"var_9c60h","type":"const char *","kind":"b","delta":-40040,"accs":[{"off":1943,"type":"r","sp":18446744073709511584,"reg":"rbp"},{"off":4055,"type":"r","sp":18446744073709511584,"reg":"rbp"}]},{"name":"var_4e40h","type":"const char *","kind":"b","delta":-20040,"accs":[{"off":1986,"type":"r","sp":18446744073709531584,"reg":"rbp"},{"off":4135,"type":"r","sp":18446744073709531584,"reg":"rbp"}]},{"name":"var_7d20h","type":"const char *","kind":"b","delta":-32040,"accs":[{"off":2281,"type":"r","sp":18446744073709519584,"reg":"rbp"},{"off":4087,"type":"r","sp":18446744073709519584,"reg":"rbp"}]},{"name":"var_3ea0h","type":"const char *","kind":"b","delta":-16040,"accs":[{"off":2462,"type":"r","sp":18446744073709535584,"reg":"rbp"},{"off":4151,"type":"r","sp":18446744073709535584,"reg":"rbp"}]},{"name":"var_ac00h","type":"const char *","kind":"b","delta":-44040,"accs":[{"off":2740,"type":"r","sp":18446744073709507584,"reg":"rbp"},{"off":4039,"type":"r","sp":18446744073709507584,"reg":"rbp"}]},{"name":"var_84f0h","type":"const char *","kind":"b","delta":-34040,"accs":[{"off":3015,"type":"r","sp":18446744073709517584,"reg":"rbp"},{"off":4079,"type":"r","sp":18446744073709517584,"reg":"rbp"}]},{"name":"var_5610h","type":"const char *","kind":"b","delta":-22040,"accs":[{"off":3196,"type":"r","sp":18446744073709529584,"reg":"rbp"},{"off":4127,"type":"r","sp":18446744073709529584,"reg":"rbp"}]},{"name":"var_fc0h","type":"int64_t","kind":"b","delta":-4040,"accs":[{"off":3239,"type":"r","sp":18446744073709547584,"reg":"rbp"},{"off":3984,"type":"r","sp":18446744073709547584,"reg":"rbp"}]},{"name":"var_6d80h","type":"const char *","kind":"b","delta":-28040,"accs":[{"off":3282,"type":"r","sp":18446744073709523584,"reg":"rbp"},{"off":4103,"type":"r","sp":18446744073709523584,"reg":"rbp"}]},{"name":"var_8cc0h","type":"const char *","kind":"b","delta":-36040,"accs":[{"off":3325,"type":"r","sp":18446744073709515584,"reg":"rbp"},{"off":4071,"type":"r","sp":18446744073709515584,"reg":"rbp"}]},{"name":"var_c370h","type":"const char *","kind":"b","delta":-50040,"accs":[{"off":3381,"type":"r","sp":18446744073709501584,"reg":"rbp"},{"off":4015,"type":"r","sp":18446744073709501584,"reg":"rbp"}]},{"name":"var_5de0h","type":"const char *","kind":"b","delta":-24040,"accs":[{"off":3449,"type":"r","sp":18446744073709527584,"reg":"rbp"},{"off":4119,"type":"r","sp":18446744073709527584,"reg":"rbp"}]},{"name":"var_b3d0h","type":"const char *","kind":"b","delta":-46040,"accs":[{"off":3517,"type":"r","sp":18446744073709505584,"reg":"rbp"},{"off":4031,"type":"r","sp":18446744073709505584,"reg":"rbp"}]},{"name":"var_1790h","type":"const char *","kind":"b","delta":-6040,"accs":[{"off":3585,"type":"r","sp":18446744073709545584,"reg":"rbp"},{"off":3977,"type":"r","sp":18446744073709545584,"reg":"rbp"}]},{"name":"var_2f00h","type":"const char *","kind":"b","delta":-12040,"accs":[{"off":3859,"type":"r","sp":18446744073709539584,"reg":"rbp"},{"off":3956,"type":"r","sp":18446744073709539584,"reg":"rbp"}]},{"name":"var_a430h","type":"const char *","kind":"b","delta":-42040,"accs":[{"off":3913,"type":"r","sp":18446744073709509584,"reg":"rbp"},{"off":4047,"type":"r","sp":18446744073709509584,"reg":"rbp"}]},{"name":"var_18h","type":"int64_t","kind":"b","delta":-32,"accs":[{"off":4201,"type":"r","sp":18446744073709551592,"reg":"rbp"}]}]}
0x21ca={"name":"fcn.000021ca","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":5,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8650]}
0x21d5={"name":"fcn.000021d5","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":5,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8661]}
0x21e0={"name":"fcn.000021e0","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":5,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8672]}
0x21eb={"name":"fcn.000021eb","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":5,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8683]}
0x21f6={"name":"fcn.000021f6","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":5,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8694]}
0x2201={"name":"fcn.00002201","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":5,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8705]}
0x220c={"name":"fcn.0000220c","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":5,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8716]}
0x2217={"name":"fcn.00002217","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":5,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8727]}
0x2222={"name":"fcn.00002222","bits":64,"type":1,"cc":"amd64","stack":40,"maxstack":40,"ninstr":113,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[8738,8782,8810,8812,8829,8861,8863,8880,8912,8914,8931,8963,8965,8982,9014,9016,9033,9065,9067,9081,9113,9115,9129,9153,9166],"vars":[{"name":"var_18h","type":"char *","kind":"b","delta":-32,"accs":[{"off":8,"type":"w","sp":18446744073709551592,"reg":"rbp"},{"off":25,"type":"r","sp":18446744073709551592,"reg":"rbp"},{"off":57,"type":"r","sp":18446744073709551592,"reg":"rbp"},{"off":104,"type":"r","sp":18446744073709551592,"reg":"rbp"},{"off":155,"type":"r","sp":18446744073709551592,"reg":"rbp"},{"off":206,"type":"r","sp":18446744073709551592,"reg":"rbp"},{"off":257,"type":"r","sp":18446744073709551592,"reg":"rbp"},{"off":308,"type":"r","sp":18446744073709551592,"reg":"rbp"},{"off":356,"type":"r","sp":18446744073709551592,"reg":"rbp"}]},{"name":"var_5h","type":"int64_t","kind":"b","delta":-13,"accs":[{"off":22,"type":"w","sp":18446744073709551611,"reg":"rbp"},{"off":36,"type":"r","sp":18446744073709551611,"reg":"rbp"}]},{"name":"var_8h","type":"int64_t","kind":"b","delta":-16,"accs":[{"off":54,"type":"w","sp":18446744073709551608,"reg":"rbp"},{"off":64,"type":"r","sp":18446744073709551608,"reg":"rbp"}]},{"name":"var_6h","type":"int64_t","kind":"b","delta":-14,"accs":[{"off":101,"type":"w","sp":18446744073709551610,"reg":"rbp"},{"off":115,"type":"r","sp":18446744073709551610,"reg":"rbp"}]},{"name":"var_7h","type":"int64_t","kind":"b","delta":-15,"accs":[{"off":152,"type":"w","sp":18446744073709551609,"reg":"rbp"},{"off":166,"type":"r","sp":18446744073709551609,"reg":"rbp"}]},{"name":"var_1h","type":"int64_t","kind":"b","delta":-9,"accs":[{"off":203,"type":"w","sp":18446744073709551615,"reg":"rbp"},{"off":217,"type":"r","sp":18446744073709551615,"reg":"rbp"}]},{"name":"var_4h","type":"int64_t","kind":"b","delta":-12,"accs":[{"off":254,"type":"w","sp":18446744073709551612,"reg":"rbp"},{"off":268,"type":"r","sp":18446744073709551612,"reg":"rbp"}]},{"name":"var_2h","type":"int64_t","kind":"b","delta":-10,"accs":[{"off":305,"type":"w","sp":18446744073709551614,"reg":"rbp"},{"off":319,"type":"r","sp":18446744073709551614,"reg":"rbp"}]},{"name":"var_3h","type":"int64_t","kind":"b","delta":-11,"accs":[{"off":353,"type":"w","sp":18446744073709551613,"reg":"rbp"},{"off":367,"type":"r","sp":18446744073709551613,"reg":"rbp"}]},{"name":"arg1","type":"char *","kind":"r","reg":"rdi","arg":true,"accs":[{"off":8,"type":"r","reg":"rdi"}]}]}
0x23d0={"name":"main","bits":64,"type":4,"cc":"amd64","stack":2024,"maxstack":2024,"ninstr":40,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[9168,9246,9263,9271,9280,9282,9283,9289,9295,9309,9325],"vars":[{"name":"var_4h","type":"int64_t","kind":"b","delta":-12,"accs":[{"off":11,"type":"w","sp":18446744073709551612,"reg":"rbp"},{"off":95,"type":"r","sp":18446744073709551612,"reg":"rbp"},{"off":115,"type":"r","sp":18446744073709551612,"reg":"rbp"},{"off":121,"type":"r","sp":18446744073709551612,"reg":"rbp"}]},{"name":"s","type":"char *","kind":"b","delta":-2024,"accs":[{"off":49,"type":"r","sp":18446744073709549600,"reg":"rbp"},{"off":83,"type":"r","sp":18446744073709549600,"reg":"rbp"},{"off":141,"type":"r","sp":18446744073709549600,"reg":"rbp"}]},{"name":"var_8h","type":"int64_t","kind":"b","delta":-16,"accs":[{"off":69,"type":"w","sp":18446744073709551608,"reg":"rbp"},{"off":78,"type":"r","sp":18446744073709551608,"reg":"rbp"},{"off":99,"type":"r","sp":18446744073709551608,"reg":"rbp"},{"off":103,"type":"r","sp":18446744073709551608,"reg":"rbp"}]}]}

/core/analysis/hints

/core/analysis/imports

/core/analysis/meta
0x0=[{"type":"C","str":"[27] ---- section size 247 named .shstrtab"}]
0x1000=[{"type":"C","str":"[11] -r-x section size 23 named .init"}]
0x1020=[{"type":"C","str":"[12] -r-x section size 64 named .plt"}]
0x1060=[{"type":"C","str":"[13] -r-x section size 8 named .plt.got"}]
0x1070=[{"type":"C","str":"[14] -r-x section size 5217 named .text"}]
0x1072=[{"type":"t","str":"void *rtld_fini"}]
0x1075=[{"type":"t","str":"int argc"}]
0x1076=[{"type":"t","str":"char **ubp_av"}]
0x107f=[{"type":"t","str":"void *fini"}]
0x1086=[{"type":"t","str":"void *init"}]
0x108d=[{"type":"t","str":"void *main"}]
0x21a5=[{"type":"t","str":"const char *format"}]
0x222a=[{"type":"t","str":"arg1"}]
0x226c=[{"type":"t","str":"const char *s"}]
0x229f=[{"type":"t","str":"const char *s"}]
0x22d2=[{"type":"t","str":"const char *s"}]
0x2305=[{"type":"t","str":"const char *s"}]
0x2338=[{"type":"t","str":"const char *s"}]
0x236b=[{"type":"t","str":"const char *s"}]
0x239b=[{"type":"t","str":"const char *s"}]
0x23a9=[{"type":"t","str":"const char *s"}]
0x23c1=[{"type":"t","str":"const char *s"}]
0x23e2=[{"type":"t","str":"const char *s"}]
0x23ee=[{"type":"t","str":"const char *s"}]
0x23fa=[{"type":"t","str":"FILE *stream"}]
0x2408=[{"type":"t","str":"int size"}]
0x240d=[{"type":"t","str":"char *s"}]
0x244f=[{"type":"t","str":"const char *s"}]
0x2464=[{"type":"t","str":"int64_t arg1"}]
0x24d4=[{"type":"C","str":"[15] -r-x section size 9 named .fini"}]
0x2a8=[{"type":"C","str":"[01] -r-- section size 28 named .interp"}]
0x2c4=[{"type":"C","str":"[02] -r-- section size 36 named .note.gnu.build-id"}]
0x2e8=[{"type":"C","str":"[03] -r-- section size 32 named .note.ABI-tag"}]
0x3000=[{"type":"C","str":"[16] -r-- section size 8115 named .rodata"}]
0x3008=[{"size":514,"type":"s","str":"|                                                  |___/                                |_|                      |___/       |                       |                   |\\\\n|                                                                                                                            |                       |                   |\\\\n|____________________________________________________________________________________________________________________________|_______________________|___________________|\\\\n"}]
0x308=[{"type":"C","str":"[04] -r-- section size 40 named .gnu.hash"}]
0x3210=[{"size":343,"type":"s","str":"|   / _ \\\\\\\\     | |_     / _` | | '_ ` _ \\\\\\\\  | | | | | | | |   | |      / _ \\\\\\\\  | '_ ` _ \\\\\\\\  | '_ \\\\\\\\   / _` | | '_ \\\\\\\\  | | | |      |                       |                   |\\\\n|  / ___ \\\\\\\\    |  _|   | (_| | | | | | | | | | | | | |_| |   | |___  | (_) | | | | | | | | |_) | | (_| | | | | | | |_| |      |                       |                   |\\\\n"}]
0x330=[{"type":"C","str":"[05] -r-- section size 240 named .dynsym"}]
0x3368=[{"size":343,"type":"s","str":"|                                      _            __          _  _                                               _  _            _                                     |\\\\n|  _ __ ___     __ _    __ _   _ __   (_)   ___    / /  ___   _| || |_    ___    _ __            ___   _ __ ___   | || |    _ __  | |_                                   |\\\\n"}]
0x34c0=[{"size":343,"type":"s","str":"|  \\\\\\\\ \\\\\\\\___| /     \\\\\\\\___/  |_| |_| |_| |_| |_| |_|         |_|     |_|  \\\\\\\\__,_|  \\\\\\\\__, | (_)                                      |                   _   |                   |\\\\n|   \\\\\\\\_____/                                                                  |___/                                           |                  |_|  |                   |\\\\n"}]
0x3618=[{"size":343,"type":"s","str":"|                                                              |             |            |                                                                              |\\\\n|                                                              |_____________|____________|                                   _______________________                    |\\\\n"}]
0x3770=[{"size":514,"type":"s","str":"|                                                              |             |            |                                  |                       |                   |\\\\n|                                                              |             |            |                                  |                       |                   |\\\\n|                                                              |_____________|____________|                                  |                       |                   |\\\\n"}]
0x3978=[{"size":514,"type":"s","str":"|                      |___/  |_|                  \\\\\\\\_\\\\\\\\                          |_|     |_____|                                         |_____|                          |\\\\n|                                                                _  _                                                         _                                          |\\\\n|                                                        ___   _| || |_    ___    _ __             ___    _ __ ___    _ __   (_)                                         |\\\\n"}]
0x3b80=[{"size":474,"type":"s","str":"\\\\t     _________________________________________________________________________________________________________________________________________________\\\\n            /                                                                                                                                                 \\\\\\\\\\\\n           /                     __  __                                             _     ____                    _           _   _    ___                     \\\\\\\\\\\\n"}]
0x3d60=[{"size":514,"type":"s","str":"|                                                                                |_|     |_____|                                 |_____|                                 |\\\\n|                                                                  _  _            _    __                                                                               |\\\\n|                                                      _ __ ___   | || |    _ __  | |_  \\\\\\\\ \\\\\\\\                                                                              |\\\\n"}]
0x3f68=[{"size":1027,"type":"s","str":"|                                                                                       /_/                                                                              |\\\\n|                                                                                                                                                                        |\\\\n|                                                                                                                                                                        |\\\\n|                                                                                                                                                                        |\\\\n|                                                               __________________________                                                                               |\\\\n|                                                              |             |            |                                                                              |\\\\n"}]
0x420=[{"type":"C","str":"[06] -r-- section size 149 named .dynstr"}]
0x4370=[{"size":343,"type":"s","str":"|     _        _____                       _   _              ____                                                           |                       |                   |\\\\n|    / \\\\\\\\      |  ___|   __ _   _ __ ___   (_) | |  _   _     / ___|   ___    _ __ ___    _ __     __ _   _ __    _   _       |                       |                   |\\\\n"}]
0x44c8=[{"size":343,"type":"s","str":"|                                                       / __| |_  ..  _|  / _ \\\\\\\\  | '_ \\\\\\\\           / _ \\\\\\\\  | '_ ` _ \\\\\\\\  | '_ \\\\\\\\  | |                                         |\\\\n|                                                       \\\\\\\\__ \\\\\\\\ |_      _| | (_) | | |_) |         | (_) | | | | | | | | | | | | |                                         |\\\\n"}]
0x4620=[{"size":343,"type":"s","str":"|  / / __| \\\\\\\\    | | | | | '_ ` _ \\\\\\\\  | '_ \\\\\\\\  | |  _____  | |_    | |  / _` |  / _` | (_)                                      |                       |                   |\\\\n| | | (__   |   | |_| | | | | | | | | | | | | | |_____| |  _|   | | | (_| | | (_| |  _                                       |                       |                   |\\\\n"}]
0x4778=[{"size":1349,"type":"s","str":"       /                        |_|  |_|  \\\\\\\\___/  |_| |_| |_|    \\\\\\\\__,_| |_| |_|  \\\\\\\\__,_|   |_|      \\\\\\\\___/  | .__/      |___/   |_| |_|  \\\\\\\\__\\\\\\\\_\\\\\\\\                       \\\\\\\\\\\\n      /                                                                                                  |_|                                                        \\\\\\\\\\\\n     /                                                                                                                                                               \\\\\\\\\\\\n    /                                                                                                                                                                 \\\\\\\\\\\\n   /                                                                                                                                                                   \\\\\\\\\\\\n  /                                                                                                                                                                     \\\\\\\\\\\\n /                                                                                                                                                                       \\\\\\\\\\\\n/_________________________________________________________________________________________________________________________________________________________________________\\\\\\\\\\\\n"}]
0x4b6=[{"type":"C","str":"[07] -r-- section size 20 named .gnu.version"}]
0x4cc0=[{"size":514,"type":"s","str":"|                                                                                                                            |                       |                   |\\\\n|                                                                                                                            |                       |                   |\\\\n|    _____        ___                        _           _____   _                                                           |                       |                   |\\\\n"}]
0x4d0=[{"type":"C","str":"[08] -r-- section size 32 named .gnu.version_r"}]
0x4ec8=[{"size":55,"type":"s","str":"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"}]
0x4f0=[{"size":8,"type":"d","str":"8[27]"},{"type":"C","str":"[09] -r-- section size 216 named .rela.dyn"}]
0x4f00=[{"size":51,"type":"s","str":"Invalid Key!\\\\nAre you sure you should have this...?"}]
0x4f38=[{"size":46,"type":"s","str":"Key validated...\\\\nTOP SECRET BLUEPRINTS BELOW\\\\n"}]
0x4f68=[{"size":40,"type":"s","str":"          ***CONFIDENTIAL***          \\\\n"}]
0x4f8=[{"size":8,"type":"d","str":"8[27]"}]
0x4f90=[{"size":35,"type":"s","str":"Please enter your unique key code:"}]
0x4fb4=[{"type":"C","str":"[17] -r-- section size 140 named .eh_frame_hdr"}]
0x500=[{"size":8,"type":"d","str":"8[27]"}]
0x5040=[{"type":"C","str":"[18] -r-- section size 592 named .eh_frame"}]
0x508=[{"size":8,"type":"d","str":"8[27]"}]
0x510=[{"size":8,"type":"d","str":"8[27]"}]
0x518=[{"size":8,"type":"d","str":"8[27]"}]
0x520=[{"size":8,"type":"d","str":"8[27]"}]
0x528=[{"size":8,"type":"d","str":"8[27]"}]
0x530=[{"size":8,"type":"d","str":"8[27]"}]
0x538=[{"size":8,"type":"d","str":"8[27]"}]
0x540=[{"size":8,"type":"d","str":"8[27]"}]
0x548=[{"size":8,"type":"d","str":"8[27]"}]
0x550=[{"size":8,"type":"d","str":"8[27]"}]
0x558=[{"size":8,"type":"d","str":"8[27]"}]
0x560=[{"size":8,"type":"d","str":"8[27]"}]
0x568=[{"size":8,"type":"d","str":"8[27]"}]
0x570=[{"size":8,"type":"d","str":"8[27]"}]
0x578=[{"size":8,"type":"d","str":"8[27]"}]
0x580=[{"size":8,"type":"d","str":"8[27]"}]
0x588=[{"size":8,"type":"d","str":"8[27]"}]
0x590=[{"size":8,"type":"d","str":"8[27]"}]
0x598=[{"size":8,"type":"d","str":"8[27]"}]
0x5a0=[{"size":8,"type":"d","str":"8[27]"}]
0x5a8=[{"size":8,"type":"d","str":"8[27]"}]
0x5b0=[{"size":8,"type":"d","str":"8[27]"}]
0x5b8=[{"size":8,"type":"d","str":"8[27]"}]
0x5c0=[{"size":8,"type":"d","str":"8[27]"}]
0x5c8=[{"size":8,"type":"d","str":"8[9]"},{"type":"C","str":"[10] -r-- section size 72 named .rela.plt"}]
0x5d0=[{"size":8,"type":"d","str":"8[9]"}]
0x5d8=[{"size":8,"type":"d","str":"8[9]"}]
0x5e0=[{"size":8,"type":"d","str":"8[9]"}]
0x5e8=[{"size":8,"type":"d","str":"8[9]"}]
0x5f0=[{"size":8,"type":"d","str":"8[9]"}]
0x5f8=[{"size":8,"type":"d","str":"8[9]"}]
0x600=[{"size":8,"type":"d","str":"8[9]"}]
0x608=[{"size":8,"type":"d","str":"8[9]"}]
0x6de8=[{"size":8,"type":"d"},{"type":"C","str":"[19] -rw- section size 8 named .init_array"}]
0x6df0=[{"size":8,"type":"d"},{"type":"C","str":"[20] -rw- section size 8 named .fini_array"}]
0x6df8=[{"size":8,"type":"d","str":"8[60]"},{"type":"C","str":"[21] -rw- section size 480 named .dynamic"}]
0x6e00=[{"size":8,"type":"d","str":"8[60]"}]
0x6e08=[{"size":8,"type":"d","str":"8[60]"}]
0x6e10=[{"size":8,"type":"d","str":"8[60]"}]
0x6e18=[{"size":8,"type":"d","str":"8[60]"}]
0x6e20=[{"size":8,"type":"d","str":"8[60]"}]
0x6e28=[{"size":8,"type":"d","str":"8[60]"}]
0x6e30=[{"size":8,"type":"d","str":"8[60]"}]
0x6e38=[{"size":8,"type":"d","str":"8[60]"}]
0x6e40=[{"size":8,"type":"d","str":"8[60]"}]
0x6e48=[{"size":8,"type":"d","str":"8[60]"}]
0x6e50=[{"size":8,"type":"d","str":"8[60]"}]
0x6e58=[{"size":8,"type":"d","str":"8[60]"}]
0x6e60=[{"size":8,"type":"d","str":"8[60]"}]
0x6e68=[{"size":8,"type":"d","str":"8[60]"}]
0x6e70=[{"size":8,"type":"d","str":"8[60]"}]
0x6e78=[{"size":8,"type":"d","str":"8[60]"}]
0x6e80=[{"size":8,"type":"d","str":"8[60]"}]
0x6e88=[{"size":8,"type":"d","str":"8[60]"}]
0x6e90=[{"size":8,"type":"d","str":"8[60]"}]
0x6e98=[{"size":8,"type":"d","str":"8[60]"}]
0x6ea0=[{"size":8,"type":"d","str":"8[60]"}]
0x6ea8=[{"size":8,"type":"d","str":"8[60]"}]
0x6eb0=[{"size":8,"type":"d","str":"8[60]"}]
0x6eb8=[{"size":8,"type":"d","str":"8[60]"}]
0x6ec0=[{"size":8,"type":"d","str":"8[60]"}]
0x6ec8=[{"size":8,"type":"d","str":"8[60]"}]
0x6ed0=[{"size":8,"type":"d","str":"8[60]"}]
0x6ed8=[{"size":8,"type":"d","str":"8[60]"}]
0x6ee0=[{"size":8,"type":"d","str":"8[60]"}]
0x6ee8=[{"size":8,"type":"d","str":"8[60]"}]
0x6ef0=[{"size":8,"type":"d","str":"8[60]"}]
0x6ef8=[{"size":8,"type":"d","str":"8[60]"}]
0x6f00=[{"size":8,"type":"d","str":"8[60]"}]
0x6f08=[{"size":8,"type":"d","str":"8[60]"}]
0x6f10=[{"size":8,"type":"d","str":"8[60]"}]
0x6f18=[{"size":8,"type":"d","str":"8[60]"}]
0x6f20=[{"size":8,"type":"d","str":"8[60]"}]
0x6f28=[{"size":8,"type":"d","str":"8[60]"}]
0x6f30=[{"size":8,"type":"d","str":"8[60]"}]
0x6f38=[{"size":8,"type":"d","str":"8[60]"}]
0x6f40=[{"size":8,"type":"d","str":"8[60]"}]
0x6f48=[{"size":8,"type":"d","str":"8[60]"}]
0x6f50=[{"size":8,"type":"d","str":"8[60]"}]
0x6f58=[{"size":8,"type":"d","str":"8[60]"}]
0x6f60=[{"size":8,"type":"d","str":"8[60]"}]
0x6f68=[{"size":8,"type":"d","str":"8[60]"}]
0x6f70=[{"size":8,"type":"d","str":"8[60]"}]
0x6f78=[{"size":8,"type":"d","str":"8[60]"}]
0x6f80=[{"size":8,"type":"d","str":"8[60]"}]
0x6f88=[{"size":8,"type":"d","str":"8[60]"}]
0x6f90=[{"size":8,"type":"d","str":"8[60]"}]
0x6f98=[{"size":8,"type":"d","str":"8[60]"}]
0x6fa0=[{"size":8,"type":"d","str":"8[60]"}]
0x6fa8=[{"size":8,"type":"d","str":"8[60]"}]
0x6fb0=[{"size":8,"type":"d","str":"8[60]"}]
0x6fb8=[{"size":8,"type":"d","str":"8[60]"}]
0x6fc0=[{"size":8,"type":"d","str":"8[60]"}]
0x6fc8=[{"size":8,"type":"d","str":"8[60]"}]
0x6fd0=[{"size":8,"type":"d","str":"8[60]"}]
0x6fd8=[{"size":8,"type":"d"},{"type":"C","str":"[22] -rw- section size 40 named .got"}]
0x6fe0=[{"size":8,"type":"d"}]
0x6fe8=[{"size":8,"type":"d"}]
0x6ff0=[{"size":8,"type":"d"}]
0x6ff8=[{"size":8,"type":"d"}]
0x7000=[{"type":"C","str":"[23] -rw- section size 48 named .got.plt"}]
0x7018=[{"size":8,"type":"d"}]
0x7020=[{"size":8,"type":"d"}]
0x7028=[{"size":8,"type":"d"}]
0x7030=[{"type":"C","str":"[24] -rw- section size 16 named .data"}]
0x7038=[{"size":8,"type":"d"}]
0x7040=[{"type":"C","str":"[25] -rw- section size 16 named .bss"},{"size":8,"type":"d"}]
0x7058=[{"size":8,"type":"d"}]
0x7060=[{"size":8,"type":"d"}]
0x7068=[{"size":8,"type":"d"}]
0x7070=[{"size":8,"type":"d"}]
0x7078=[{"size":8,"type":"d"}]
0x7080=[{"size":8,"type":"d"}]
0x7088=[{"size":8,"type":"d"}]
0x7090=[{"size":8,"type":"d"}]
0x7098=[{"size":8,"type":"d"}]
0x70a0=[{"size":8,"type":"d"}]
0x70a8=[{"size":8,"type":"d"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/noreturn

/core/analysis/pins

/core/analysis/typelinks

/core/analysis/types
FILE=typedef
__div_t=struct
__idtype=enum
__imaxdiv_t=struct
__ldiv_t=struct
__lldiv_t=struct
__siginfo_t=struct
__sigset_t=struct
_fd_set=struct
bool=type
char=type
char *=type
char16_t=type
char32_t=type
char8_t=type
clock_t=typedef
div_t=typedef
double=type
enum.__idtype=P_ALL,P_GID,P_PGID
enum.__idtype.0x0=P_ALL
enum.__idtype.0x1=P_GID
enum.__idtype.0x2=P_PGID
enum.__idtype.P_ALL=0x0
enum.__idtype.P_GID=0x1
enum.__idtype.P_PGID=0x2
fd_mask=typedef
fd_set=typedef
fenv_t=typedef
fexcept_t=typedef
float=type
fpos_t=typedef
gid_t=type
id_t=type
idtype_t=typedef
imaxdiv_t=typedef
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
intmax_t=type
intptr_t=type
jmp_buf=typedef
lconv=struct
ldiv_t=typedef
lldiv_t=typedef
locale_t=typedef
long=type
long double=type
long int=type
long long=type
long long int=type
mbstate_t=typedef
nl_item=typedef
pid_t=type
ptrdiff_t=type
short=type
sigaction=struct
siginfo_t=typedef
sigset_t=typedef
sigval=union
size_t=type
sockaddr=struct
socklen_t=typedef
ssize_t=type
std__type_info=struct
struct.__div_t=quot,rem
struct.__div_t.quot=int,0,0
struct.__div_t.rem=int,2,0
struct.__imaxdiv_t=quot,rem
struct.__imaxdiv_t.quot=intmax_t,0,0
struct.__imaxdiv_t.rem=intmax_t,8,0
struct.__ldiv_t=quot,rem
struct.__ldiv_t.quot=long int,0,0
struct.__ldiv_t.rem=long int,4,0
struct.__lldiv_t=quot,rem
struct.__lldiv_t.quot=long long int,0,0
struct.__lldiv_t.rem=long long int,4,0
struct.__siginfo_t=si_signo,si_code,si_value,si_errno,si_pid,si_uid,si_addr,si_status,si_band
struct.__siginfo_t.si_addr=void *,28,0
struct.__siginfo_t.si_band=int,36,0
struct.__siginfo_t.si_code=int,4,0
struct.__siginfo_t.si_errno=int,16,0
struct.__siginfo_t.si_pid=pid_t,20,0
struct.__siginfo_t.si_signo=int,0,0
struct.__siginfo_t.si_status=int,32,0
struct.__siginfo_t.si_uid=uid_t,24,0
struct.__siginfo_t.si_value=union sigval,8,0
struct.__sigset_t=sig
struct.__sigset_t.sig=unsigned long,0,0
struct._fd_set=fds_bits
struct._fd_set.fds_bits=fd_mask,0,0
struct.sigaction=sa_handler,sa_flags,sa_restorer,sa_mask
struct.sigaction.sa_flags=unsigned long,8,0
struct.sigaction.sa_handler=void *,0,0
struct.sigaction.sa_mask=sigset_t,20,0
struct.sigaction.sa_restorer=void *,12,0
struct.timespec=tv_sec,tv_nsec
struct.timespec.tv_nsec=long,8,0
struct.timespec.tv_sec=time_t,0,0
struct.timeval=tv_sec,tv_usec
struct.timeval.tv_sec=time_t,0,0
struct.timeval.tv_usec=suseconds_t,8,0
struct.tm=tm_sec,tm_min,tm_hour,tm_mday,tm_mon,tm_year,tm_wday,tm_yday,tm_isdst
struct.tm.tm_hour=int,8,0
struct.tm.tm_isdst=int,32,0
struct.tm.tm_mday=int,12,0
struct.tm.tm_min=int,4,0
struct.tm.tm_mon=int,16,0
struct.tm.tm_sec=int,0,0
struct.tm.tm_wday=int,24,0
struct.tm.tm_yday=int,28,0
struct.tm.tm_year=int,20,0
suseconds_t=typedef
time_t=typedef
timespec=struct
timeval=struct
tm=struct
type.bool=b
type.bool.size=8
type.bool.typeclass=None
type.char=c
type.char *=z
type.char *.size=64
type.char *.typeclass=None
type.char.size=8
type.char.typeclass=Signed Integral
type.char16_t=c
type.char16_t.size=16
type.char16_t.typeclass=Signed Integral
type.char32_t=c
type.char32_t.size=32
type.char32_t.typeclass=Signed Integral
type.char8_t=c
type.char8_t.size=8
type.char8_t.typeclass=Signed Integral
type.double=F
type.double.size=64
type.double.typeclass=Floating
type.float=f
type.float.size=32
type.float.typeclass=Floating
type.gid_t=q
type.gid_t.size=64
type.gid_t.typeclass=Integral
type.id_t=q
type.id_t.size=64
type.id_t.typeclass=Integral
type.int=d
type.int.size=32
type.int.typeclass=Signed Integral
type.int16_t=w
type.int16_t.size=16
type.int16_t.typeclass=Signed Integral
type.int32_t=d
type.int32_t.size=32
type.int32_t.typeclass=Signed Integral
type.int64_t=q
type.int64_t.size=64
type.int64_t.typeclass=Signed Integral
type.int8_t=b
type.int8_t.size=8
type.int8_t.typeclass=Signed Integral
type.intmax_t=q
type.intmax_t.size=64
type.intmax_t.typeclass=Signed Integral
type.intptr_t=q
type.intptr_t.size=64
type.intptr_t.typeclass=Signed Integral
type.long=x
type.long double=F
type.long double.size=64
type.long double.typeclass=Floating
type.long int=x
type.long int.size=64
type.long int.typeclass=Signed Integral
type.long long=q
type.long long int=q
type.long long int.size=64
type.long long int.typeclass=Signed Integral
type.long long.size=64
type.long long.typeclass=Signed Integral
type.long.size=64
type.long.typeclass=Signed Integral
type.pid_t=q
type.pid_t.size=64
type.pid_t.typeclass=Integral
type.ptrdiff_t=q
type.ptrdiff_t.size=64
type.ptrdiff_t.typeclass=Integral
type.short=w
type.short.size=16
type.short.typeclass=Signed Integral
type.size_t=q
type.size_t.size=64
type.size_t.typeclass=Unsigned Integral
type.ssize_t=q
type.ssize_t.size=64
type.ssize_t.typeclass=Signed Integral
type.uid_t=q
type.uid_t.size=64
type.uid_t.typeclass=Integral
type.uint16_t=w
type.uint16_t.size=16
type.uint16_t.typeclass=Unsigned Integral
type.uint32_t=d
type.uint32_t.size=32
type.uint32_t.typeclass=Unsigned Integral
type.uint64_t=q
type.uint64_t.size=64
type.uint64_t.typeclass=Unsigned Integral
type.uint8_t=b
type.uint8_t.size=8
type.uint8_t.typeclass=Unsigned Integral
type.uintmax_t=q
type.uintmax_t.size=64
type.uintmax_t.typeclass=Unsigned Integral
type.uintptr_t=q
type.uintptr_t.size=64
type.uintptr_t.typeclass=Unsigned Integral
type.unknown_t=q
type.unknown_t.size=64
type.unknown_t.typeclass=Integral
type.unsigned char=b
type.unsigned char.size=8
type.unsigned char.typeclass=Unsigned Integral
type.unsigned int=i
type.unsigned int.size=32
type.unsigned int.typeclass=Unsigned Integral
type.unsigned long=d
type.unsigned long long=q
type.unsigned long long.size=64
type.unsigned long long.typeclass=Unsigned Integral
type.unsigned long.size=32
type.unsigned long.typeclass=Unsigned Integral
type.unsigned short=w
type.unsigned short.size=16
type.unsigned short.typeclass=Unsigned Integral
type.void *=p
type.void *.size=64
type.void *.typeclass=None
type.void.size=0
type.void.typeclass=None
typedef.FILE=void
typedef.clock_t=void
typedef.div_t=struct __div_t
typedef.fd_mask=long int
typedef.fd_set=struct _fd_set
typedef.fenv_t=void
typedef.fexcept_t=void
typedef.fpos_t=void
typedef.idtype_t=__idtype
typedef.imaxdiv_t=struct __imaxdiv_t
typedef.jmp_buf=void
typedef.ldiv_t=struct __ldiv_t
typedef.lldiv_t=struct __lldiv_t
typedef.locale_t=void
typedef.mbstate_t=void
typedef.nl_item=int
typedef.siginfo_t=struct __siginfo_t
typedef.sigset_t=struct __sigset_t
typedef.socklen_t=int
typedef.suseconds_t=long
typedef.time_t=long
typedef.va_list=char *
typedef.wchar_t=int
typedef.wctrans_t=unsigned int
typedef.wctype_t=int
typedef.wint_t=int
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
uintmax_t=type
uintptr_t=type
union.sigval=sival_int,sival_ptr
union.sigval.sival_int=int,0,0
union.sigval.sival_ptr=void *,0,0
unknown_t=type
unsigned char=type
unsigned int=type
unsigned long=type
unsigned long long=type
unsigned short=type
va_list=typedef
void=type
void *=type
wchar_t=typedef
wctrans_t=typedef
wctype_t=typedef
wint_t=typedef

/core/analysis/vars

/core/analysis/xrefs
0x1004=[{"to":28648,"type":"d"}]
0x1026=[{"to":28688,"type":"c"}]
0x1030=[{"to":28696,"type":"c"}]
0x103b=[{"to":4128,"type":"c"}]
0x1040=[{"to":28704,"type":"c"}]
0x1046=[{"to":1,"type":"d"}]
0x104b=[{"to":4128,"type":"c"}]
0x1050=[{"to":28712,"type":"c"}]
0x1056=[{"to":2,"type":"d"}]
0x105b=[{"to":4128,"type":"c"}]
0x1060=[{"to":28664,"type":"c"}]
0x107f=[{"to":9424,"type":"d"},{"to":5194,"type":"d"}]
0x1086=[{"to":5091,"type":"d"},{"to":9328,"type":"d"}]
0x108d=[{"to":9168,"type":"d"},{"to":4924,"type":"d"}]
0x1094=[{"to":28640,"type":"C"}]
0x10a0=[{"to":28736,"type":"d"}]
0x10a7=[{"to":28736,"type":"d"}]
0x10b3=[{"to":28632,"type":"d"}]
0x10d0=[{"to":28736,"type":"d"}]
0x10d7=[{"to":28736,"type":"d"}]
0x10f4=[{"to":28656,"type":"d"}]
0x1110=[{"to":28744,"type":"d"}]
0x111a=[{"to":28664,"type":"d"}]
0x1127=[{"to":28728,"type":"d"}]
0x112e=[{"to":4192,"type":"C"}]
0x1133=[{"to":4256,"type":"C"}]
0x1138=[{"to":28744,"type":"d"}]
0x1150=[{"to":4304,"type":"c"}]
0x159d=[{"to":6756,"type":"d"},{"to":12296,"type":"d"}]
0x15a4=[{"to":64,"type":"d"}]
0x15c8=[{"to":12816,"type":"d"},{"to":7233,"type":"d"}]
0x15cf=[{"to":42,"type":"d"}]
0x160c=[{"to":7509,"type":"d"},{"to":13160,"type":"d"}]
0x1613=[{"to":42,"type":"d"}]
0x1650=[{"to":7785,"type":"d"},{"to":13504,"type":"d"}]
0x1657=[{"to":42,"type":"d"}]
0x1694=[{"to":13848,"type":"d"},{"to":8061,"type":"d"}]
0x169b=[{"to":42,"type":"d"}]
0x18f6=[{"to":7795,"type":"d"},{"to":14192,"type":"d"}]
0x18fd=[{"to":64,"type":"d"}]
0x1ddb=[{"to":14712,"type":"d"},{"to":7062,"type":"d"}]
0x1de2=[{"to":64,"type":"d"}]
0x1e06=[{"to":7539,"type":"d"},{"to":15232,"type":"d"}]
0x1e0d=[{"to":59,"type":"d"}]
0x1e31=[{"to":15712,"type":"d"},{"to":7976,"type":"d"}]
0x1e38=[{"to":64,"type":"d"}]
0x1e5c=[{"to":16232,"type":"d"},{"to":8453,"type":"d"}]
0x1e63=[{"to":128,"type":"d"}]
0x1e94=[{"to":9429,"type":"d"},{"to":17264,"type":"d"}]
0x1e9b=[{"to":42,"type":"d"}]
0x1ed8=[{"to":17608,"type":"d"}]
0x1edf=[{"to":42,"type":"d"}]
0x1f1c=[{"to":17952,"type":"d"}]
0x1f23=[{"to":42,"type":"d"}]
0x2072=[{"to":18296,"type":"d"}]
0x2079=[{"to":168,"type":"d"}]
0x20a8=[{"to":19648,"type":"d"}]
0x20af=[{"to":64,"type":"d"}]
0x21a5=[{"to":20168,"type":"d"}]
0x21b1=[{"to":4160,"type":"C"}]
0x21ce=[{"to":73,"type":"d"}]
0x21d9=[{"to":67,"type":"d"}]
0x21e4=[{"to":79,"type":"d"}]
0x21ef=[{"to":82,"type":"d"}]
0x21fa=[{"to":77,"type":"d"}]
0x2205=[{"to":79,"type":"d"}]
0x2210=[{"to":80,"type":"d"}]
0x221b=[{"to":78,"type":"d"}]
0x2233=[{"to":8650,"type":"C"}]
0x2253=[{"to":8672,"type":"C"}]
0x226a=[{"to":8829,"type":"c"}]
0x226c=[{"to":20224,"type":"d"}]
0x2273=[{"to":4144,"type":"C"}]
0x2278=[{"to":9166,"type":"c"}]
0x2282=[{"to":8727,"type":"C"}]
0x229d=[{"to":8880,"type":"c"}]
0x229f=[{"to":20224,"type":"d"}]
0x22a6=[{"to":4144,"type":"C"}]
0x22ab=[{"to":9166,"type":"c"}]
0x22b5=[{"to":8694,"type":"C"}]
0x22d0=[{"to":8931,"type":"c"}]
0x22d2=[{"to":20224,"type":"d"}]
0x22d9=[{"to":4144,"type":"C"}]
0x22de=[{"to":9166,"type":"c"}]
0x22e8=[{"to":8716,"type":"C"}]
0x2303=[{"to":8982,"type":"c"}]
0x2305=[{"to":20224,"type":"d"}]
0x230c=[{"to":4144,"type":"C"}]
0x2311=[{"to":9166,"type":"c"}]
0x231b=[{"to":8661,"type":"C"}]
0x2336=[{"to":9033,"type":"c"}]
0x2338=[{"to":20224,"type":"d"}]
0x233f=[{"to":4144,"type":"C"}]
0x2344=[{"to":9166,"type":"c"}]
0x234e=[{"to":8683,"type":"C"}]
0x2369=[{"to":9081,"type":"c"}]
0x236b=[{"to":20224,"type":"d"}]
0x2372=[{"to":4144,"type":"C"}]
0x2377=[{"to":9166,"type":"c"}]
0x237e=[{"to":8705,"type":"C"}]
0x2399=[{"to":9129,"type":"c"}]
0x239b=[{"to":20224,"type":"d"}]
0x23a2=[{"to":4144,"type":"C"}]
0x23a7=[{"to":9166,"type":"c"}]
0x23a9=[{"to":20280,"type":"d"}]
0x23b0=[{"to":4144,"type":"C"}]
0x23ba=[{"to":4437,"type":"C"}]
0x23bf=[{"to":9166,"type":"c"}]
0x23c1=[{"to":20224,"type":"d"}]
0x23c8=[{"to":4144,"type":"C"}]
0x23e2=[{"to":20328,"type":"d"}]
0x23e9=[{"to":4144,"type":"C"}]
0x23ee=[{"to":20368,"type":"d"}]
0x23f5=[{"to":4144,"type":"C"}]
0x23fa=[{"to":19519,"type":"d"},{"to":28736,"type":"d"}]
0x2410=[{"to":4176,"type":"C"}]
0x241c=[{"to":9271,"type":"c"}]
0x242b=[{"to":10,"type":"d"}]
0x2440=[{"to":9283,"type":"c"}]
0x244f=[{"to":20224,"type":"d"}]
0x2456=[{"to":4144,"type":"C"}]
0x245b=[{"to":9325,"type":"c"}]
0x2467=[{"to":8738,"type":"C"}]
0x2472=[{"to":18799,"type":"d"},{"to":28136,"type":"d"}]
0x2489=[{"to":28144,"type":"d"},{"to":18784,"type":"d"}]
0x2498=[{"to":4096,"type":"C"}]

/core/analysis/zigns

/core/analysis/zigns/spaces
name=zs
spacestack=["*"]

/core/analysis/zigns/spaces/spaces

/core/config
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.endsize=true
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.jmp.tblmax=512
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vars.stackname=false
analysis.verbose=false
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=64
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=35
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.dwarf=false
asm.dwarf.abspath=false
asm.dwarf.file=true
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=1
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.arm=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=false
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=8
asm.tabs.off=5
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
bin.at=false
bin.b64str=false
bin.baddr=0
bin.classes=true
bin.dbginfo=true
bin.debase64=false
bin.demangle=true
bin.demangle.libs=false
bin.filter=true
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.maxstr=0
bin.maxstrbuf=0x00a00000
bin.minstr=0
bin.rawstr=false
bin.relocs=true
bin.str.enc=guess
bin.strings=true
bin.useldr=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=vi
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.newtab=false
cfg.oldshell=false
cfg.oldshell.autocompletion=true
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid81406
cfg.wseek=false
cmd.demangle=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsize=1
dbg.bpsysign=false
dbg.btalgo=fuzzy
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=64
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.fastbinmax=10
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=true
dbg.hwbp=0
dbg.malloc=glibc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=0
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=1
dbg.verbose=true
diff.bare=false
diff.from=0
diff.levenstein=false
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=/root
dir.magic=/tmp/.mount_CutterDckyxW/usr/share/rizin/0.3.4/magic
dir.plugins=/tmp/.mount_CutterDckyxW/usr/share/rizin/plugins
dir.prefix=/tmp/.mount_CutterDckyxW/usr
dir.projects=~/.local/share/rizin/projects
dir.types=/usr/include
dir.zigns=~/.local/share/rizin/zigns
elf.checks.sections=true
elf.checks.segments=true
elf.load.sections=true
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=0
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=/home/omar2535/Desktop/programming/CTF/Magpie2022/Mom_pops_HQ/CONFIDENTIAL_BLUEPRINTS
file.loadalign=0x00000400
file.openmany=1
file.path=/home/omar2535/Desktop/programming/CTF/Magpie2022/Mom_pops_HQ/CONFIDENTIAL_BLUEPRINTS
file.type=elf
ghidra.cmt.cpp=true
ghidra.cmt.indent=4
ghidra.indent=4
ghidra.linelen=120
ghidra.maximplref=2
ghidra.nl.brace=false
ghidra.nl.else=false
ghidra.rawptr=true
ghidra.sleighhome=/tmp/.mount_CutterDckyxW/usr/share/rizin/plugins/rz_ghidra_sleigh
ghidra.verbose=true
graph.aeab=false
graph.body=true
graph.bubble=false
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=0
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=xdg-open
http.colon=false
http.cors=false
http.dietime=0
http.dirlist=false
http.homeroot=~/.local/share/rizin/www
http.index=index.html
http.log=true
http.maxport=9999
http.maxsize=0
http.port=9090
http.root=/tmp/.mount_CutterDckyxW/usr/share/rizin/0.3.4/www
http.timeout=3
http.upget=false
http.upload=false
http.uproot=/tmp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=1
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=false
io.pcache.read=false
io.pcache.write=false
io.unalloc=false
io.unalloc.ch=.
io.va=1
jsdec.asm=false
jsdec.blocks=false
jsdec.casts=false
jsdec.debug=false
jsdec.highlight=default
jsdec.paddr=false
jsdec.slow=false
jsdec.xrefs=false
log.colors=false
log.events=false
log.level=4
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=/root/.local/share/rizin/pdb
pdb.useragent=Microsoft-Symbol-Server/6.11.0001.402
prj.compress=false
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.fps=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=false
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.rainbow=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=true
scr.utf8.curvy=false
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
zign.autoload=false
zign.diff.bthresh=1.0
zign.diff.gthresh=1.0
zign.match.bytes=true
zign.match.graph=true
zign.match.hash=true
zign.match.offset=false
zign.match.refs=true
zign.match.types=false
zign.maxsz=500
zign.mincc=10
zign.minsz=16
zign.prefix=sign
zign.threshold=0.0
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/file
absolute=/home/omar2535/Desktop/programming/CTF/Magpie2022/Mom_pops_HQ/CONFIDENTIAL_BLUEPRINTS
raw=/home/omar2535/Desktop/programming/CTF/Magpie2022/Mom_pops_HQ/CONFIDENTIAL_BLUEPRINTS
relative=CONFIDENTIAL_BLUEPRINTS

/core/flags
base=0
realnames=1

/core/flags/flags
entry.fini0={"realname":"entry.fini0","demangled":false,"offset":4368,"size":57,"space":"symbols"}
entry.init0={"realname":"entry.init0","demangled":false,"offset":4432,"size":5,"space":"symbols"}
entry0={"realname":"entry0","demangled":false,"offset":4208,"size":42,"space":"symbols"}
fcn.00001000={"realname":"fcn.00001000","demangled":false,"offset":4096,"size":23,"space":"functions"}
fcn.000010a0={"realname":"fcn.000010a0","demangled":false,"offset":4256,"size":41,"space":"functions"}
fcn.00001155={"realname":"fcn.00001155","demangled":false,"offset":4437,"size":4213,"space":"functions"}
fcn.000021ca={"realname":"fcn.000021ca","demangled":false,"offset":8650,"size":11,"space":"functions"}
fcn.000021d5={"realname":"fcn.000021d5","demangled":false,"offset":8661,"size":11,"space":"functions"}
fcn.000021e0={"realname":"fcn.000021e0","demangled":false,"offset":8672,"size":11,"space":"functions"}
fcn.000021eb={"realname":"fcn.000021eb","demangled":false,"offset":8683,"size":11,"space":"functions"}
fcn.000021f6={"realname":"fcn.000021f6","demangled":false,"offset":8694,"size":11,"space":"functions"}
fcn.00002201={"realname":"fcn.00002201","demangled":false,"offset":8705,"size":11,"space":"functions"}
fcn.0000220c={"realname":"fcn.0000220c","demangled":false,"offset":8716,"size":11,"space":"functions"}
fcn.00002217={"realname":"fcn.00002217","demangled":false,"offset":8727,"size":11,"space":"functions"}
fcn.00002222={"realname":"fcn.00002222","demangled":false,"offset":8738,"size":430,"space":"functions"}
loc.imp._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":0,"size":16,"space":"imports"}
loc.imp._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":0,"size":16,"space":"imports"}
loc.imp.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":0,"size":16,"space":"imports"}
main={"realname":"main","demangled":false,"offset":9168,"size":160,"space":"symbols"}
obj.stdin={"realname":"stdin","demangled":false,"offset":28736,"size":8,"space":"symbols"}
reloc._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":28632,"size":8,"space":"relocs"}
reloc._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":28656,"size":8,"space":"relocs"}
reloc.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":28664,"size":8,"space":"relocs"}
reloc.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":28648,"size":8,"space":"relocs"}
reloc.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":28640,"size":8,"space":"relocs"}
reloc.fgets={"realname":"fgets","demangled":false,"offset":28712,"size":8,"space":"relocs"}
reloc.printf={"realname":"printf","demangled":false,"offset":28704,"size":8,"space":"relocs"}
reloc.puts={"realname":"puts","demangled":false,"offset":28696,"size":8,"space":"relocs"}
reloc.stdin={"realname":"stdin","demangled":false,"offset":28736,"size":8,"space":"relocs"}
reloc.target._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":28808,"size":8,"space":"relocs"}
reloc.target._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":28832,"size":8,"space":"relocs"}
reloc.target.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":28840,"size":8,"space":"relocs"}
reloc.target.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":28824,"size":8,"space":"relocs"}
reloc.target.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":28816,"size":8,"space":"relocs"}
reloc.target.fgets={"realname":"fgets","demangled":false,"offset":28776,"size":8,"space":"relocs"}
reloc.target.printf={"realname":"printf","demangled":false,"offset":28768,"size":8,"space":"relocs"}
reloc.target.puts={"realname":"puts","demangled":false,"offset":28760,"size":8,"space":"relocs"}
reloc.target.stdin={"realname":"stdin","demangled":false,"offset":28736,"size":8,"space":"relocs"}
section.={"realname":"section.","demangled":false,"offset":0,"size":0,"space":"sections"}
section..bss={"realname":"section..bss","demangled":false,"offset":28736,"size":16,"space":"sections"}
section..comment={"realname":"section..comment","demangled":false,"offset":0,"size":29,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":28720,"size":16,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":28152,"size":480,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":1056,"size":149,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":816,"size":240,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":20544,"size":592,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":20404,"size":140,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":9428,"size":9,"space":"sections"}
section..fini_array={"realname":"section..fini_array","demangled":false,"offset":28144,"size":8,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":776,"size":40,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":1206,"size":20,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":1232,"size":32,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":28632,"size":40,"space":"sections"}
section..got.plt={"realname":"section..got.plt","demangled":false,"offset":28672,"size":48,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":4096,"size":23,"space":"sections"}
section..init_array={"realname":"section..init_array","demangled":false,"offset":28136,"size":8,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":680,"size":28,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":744,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":708,"size":36,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":4128,"size":64,"space":"sections"}
section..plt.got={"realname":"section..plt.got","demangled":false,"offset":4192,"size":8,"space":"sections"}
section..rela.dyn={"realname":"section..rela.dyn","demangled":false,"offset":1264,"size":216,"space":"sections"}
section..rela.plt={"realname":"section..rela.plt","demangled":false,"offset":1480,"size":72,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":12288,"size":8115,"space":"sections"}
section..shstrtab={"realname":"section..shstrtab","demangled":false,"offset":0,"size":247,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":4208,"size":5217,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":28152,"size":480,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":20404,"size":140,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":28136,"size":536,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":680,"size":28,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":0,"size":1552,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":4096,"size":5341,"space":"segments"}
segment.LOAD2={"realname":"segment.LOAD2","demangled":false,"offset":12288,"size":8848,"space":"segments"}
segment.LOAD3={"realname":"segment.LOAD3","demangled":false,"offset":28136,"size":616,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":708,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":64,"size":616,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":0,"size":64,"space":"segments"}
str.={"realname":"str.","demangled":false,"offset":19648,"size":514,"space":"strings"}
str..={"realname":"str..","demangled":false,"offset":18296,"size":1349,"space":"strings"}
str...={"realname":"str...","demangled":false,"offset":17608,"size":343,"space":"strings"}
str.CONFIDENTIAL={"realname":"str.CONFIDENTIAL","demangled":false,"offset":20328,"size":40,"space":"strings"}
str.Invalid_Key___Are_you_sure_you_should_have_this...={"realname":"str.Invalid_Key___Are_you_sure_you_should_have_this...","demangled":false,"offset":20224,"size":51,"space":"strings"}
str.Key_validated...__TOP_SECRET_BLUEPRINTS_BELOW={"realname":"str.Key_validated...__TOP_SECRET_BLUEPRINTS_BELOW","demangled":false,"offset":20280,"size":46,"space":"strings"}
str.Please_enter_your_unique_key_code:={"realname":"str.Please_enter_your_unique_key_code:","demangled":false,"offset":20368,"size":35,"space":"strings"}
str.s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s={"realname":"str.s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s_s","demangled":false,"offset":20168,"size":55,"space":"strings"}
sym.imp.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":4192,"size":6,"space":"imports"}
sym.imp.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":0,"size":16,"space":"imports"}
sym.imp.fgets={"realname":"fgets","demangled":false,"offset":4176,"size":6,"space":"imports"}
sym.imp.printf={"realname":"printf","demangled":false,"offset":4160,"size":6,"space":"imports"}
sym.imp.puts={"realname":"puts","demangled":false,"offset":4144,"size":6,"space":"imports"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
functions=s
imports=s
platform.ports=s
registers=s
registers.extended=s
registers.mmio=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones
