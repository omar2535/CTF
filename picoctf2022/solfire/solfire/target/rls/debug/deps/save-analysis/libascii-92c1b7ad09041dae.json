{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3","program":"/home/omar2535/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ascii","/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=92c1b7ad09041dae","-C","extra-filename=-92c1b7ad09041dae","--out-dir","/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps","-L","dependency=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/omar2535/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libascii-92c1b7ad09041dae.rmeta"},"prelude":{"crate_id":{"name":"ascii","disambiguator":[14082873183611778497,0]},"crate_root":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src","external_crates":[{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}}],"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":0,"byte_end":1913,"line_start":1,"line_end":56,"column_start":1,"column_end":54}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1624,"byte_end":1633,"line_start":52,"line_end":52,"column_start":22,"column_end":31},"alias_span":null,"name":"AsciiChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1635,"byte_end":1646,"line_start":52,"line_end":52,"column_start":33,"column_end":44},"alias_span":null,"name":"ToAsciiChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1648,"byte_end":1664,"line_start":52,"line_end":52,"column_start":46,"column_end":62},"alias_span":null,"name":"ToAsciiCharError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1687,"byte_end":1695,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"alias_span":null,"name":"AsciiStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1697,"byte_end":1707,"line_start":53,"line_end":53,"column_start":31,"column_end":41},"alias_span":null,"name":"AsAsciiStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1709,"byte_end":1722,"line_start":53,"line_end":53,"column_start":43,"column_end":56},"alias_span":null,"name":"AsMutAsciiStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1120},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1724,"byte_end":1739,"line_start":53,"line_end":53,"column_start":58,"column_end":73},"alias_span":null,"name":"AsAsciiStrError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1741,"byte_end":1746,"line_start":53,"line_end":53,"column_start":75,"column_end":80},"alias_span":null,"name":"Chars","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1748,"byte_end":1756,"line_start":53,"line_end":53,"column_start":82,"column_end":90},"alias_span":null,"name":"CharsMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1111},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1758,"byte_end":1763,"line_start":53,"line_end":53,"column_start":92,"column_end":97},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1813,"byte_end":1824,"line_start":55,"line_end":55,"column_start":24,"column_end":35},"alias_span":null,"name":"AsciiString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1826,"byte_end":1841,"line_start":55,"line_end":55,"column_start":37,"column_end":52},"alias_span":null,"name":"IntoAsciiString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1843,"byte_end":1857,"line_start":55,"line_end":55,"column_start":54,"column_end":68},"alias_span":null,"name":"FromAsciiError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1885,"byte_end":1897,"line_start":56,"line_end":56,"column_start":26,"column_end":38},"alias_span":null,"name":"caret_encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1899,"byte_end":1911,"line_start":56,"line_end":56,"column_start":40,"column_end":52},"alias_span":null,"name":"caret_decode","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":0,"byte_end":1913,"line_start":1,"line_end":56,"column_start":1,"column_end":54},"name":"","qualname":"::","value":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":92},{"krate":0,"index":317},{"krate":0,"index":551},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":609}],"decl_id":null,"docs":" A library that provides ASCII-only string and character types, equivalent to the `char`, `str`\n and `String` types in the standard library.","sig":null,"attributes":[{"value":"/ A library that provides ASCII-only string and character types, equivalent to the `char`, `str`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":509,"byte_end":607,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ and `String` types in the standard library.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":608,"byte_end":655,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":656,"byte_end":659,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Please refer to the readme file to learn about the different feature modes of this crate.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":660,"byte_end":753,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":754,"byte_end":757,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":758,"byte_end":776,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":777,"byte_end":780,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - The minimum supported Rust version is 1.9.0","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":781,"byte_end":830,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ - Enabling the quickcheck feature requires Rust 1.12.0","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":831,"byte_end":889,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/ - Enabling the serde feature requires Rust 1.13.0","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":890,"byte_end":943,"line_start":22,"line_end":22,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":944,"byte_end":947,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # History","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":948,"byte_end":961,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":962,"byte_end":965,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This package included the Ascii types that were removed from the Rust standard library by the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":966,"byte_end":1063,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ 2014-12 [reform of the `std::ascii` module](https://github.com/rust-lang/rfcs/pull/486). The","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1064,"byte_end":1160,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ API changed significantly since then.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/lib.rs","byte_start":1161,"byte_end":1202,"line_start":28,"line_end":28,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2594,"byte_end":2598,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Null","qualname":"::ascii_char::AsciiChar::Null","value":"AsciiChar::Null","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'\\0'`\n","sig":null,"attributes":[{"value":"/ `'\\0'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2579,"byte_end":2589,"line_start":23,"line_end":23,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2682,"byte_end":2685,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"SOH","qualname":"::ascii_char::AsciiChar::SOH","value":"AsciiChar::SOH","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Start Of Heading](http://en.wikipedia.org/wiki/Start_of_Heading)\n","sig":null,"attributes":[{"value":"/ [Start Of Heading](http://en.wikipedia.org/wiki/Start_of_Heading)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2608,"byte_end":2677,"line_start":25,"line_end":25,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":619},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2763,"byte_end":2766,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"SOX","qualname":"::ascii_char::AsciiChar::SOX","value":"AsciiChar::SOX","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Start Of teXt](http://en.wikipedia.org/wiki/Start_of_Text)\n","sig":null,"attributes":[{"value":"/ [Start Of teXt](http://en.wikipedia.org/wiki/Start_of_Text)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2695,"byte_end":2758,"line_start":27,"line_end":27,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":622},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2850,"byte_end":2853,"line_start":30,"line_end":30,"column_start":5,"column_end":8},"name":"ETX","qualname":"::ascii_char::AsciiChar::ETX","value":"AsciiChar::ETX","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [End of TeXt](http://en.wikipedia.org/wiki/End-of-Text_character)\n","sig":null,"attributes":[{"value":"/ [End of TeXt](http://en.wikipedia.org/wiki/End-of-Text_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2776,"byte_end":2845,"line_start":29,"line_end":29,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":625},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2953,"byte_end":2956,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"EOT","qualname":"::ascii_char::AsciiChar::EOT","value":"AsciiChar::EOT","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [End Of Transmission](http://en.wikipedia.org/wiki/End-of-Transmission_character)\n","sig":null,"attributes":[{"value":"/ [End Of Transmission](http://en.wikipedia.org/wiki/End-of-Transmission_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2863,"byte_end":2948,"line_start":31,"line_end":31,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":628},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3032,"byte_end":3035,"line_start":34,"line_end":34,"column_start":5,"column_end":8},"name":"ENQ","qualname":"::ascii_char::AsciiChar::ENQ","value":"AsciiChar::ENQ","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Enquiry](http://en.wikipedia.org/wiki/Enquiry_character)\n","sig":null,"attributes":[{"value":"/ [Enquiry](http://en.wikipedia.org/wiki/Enquiry_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2966,"byte_end":3027,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":631},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3123,"byte_end":3126,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"ACK","qualname":"::ascii_char::AsciiChar::ACK","value":"AsciiChar::ACK","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Acknowledgement](http://en.wikipedia.org/wiki/Acknowledge_character)\n","sig":null,"attributes":[{"value":"/ [Acknowledgement](http://en.wikipedia.org/wiki/Acknowledge_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3045,"byte_end":3118,"line_start":35,"line_end":35,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":634},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3264,"byte_end":3268,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Bell","qualname":"::ascii_char::AsciiChar::Bell","value":"AsciiChar::Bell","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [bell / alarm / audible](http://en.wikipedia.org/wiki/Bell_character)","sig":null,"attributes":[{"value":"/ [bell / alarm / audible](http://en.wikipedia.org/wiki/Bell_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3136,"byte_end":3209,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3214,"byte_end":3217,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ `'\\a'` is not recognized by Rust.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3222,"byte_end":3259,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":637},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3388,"byte_end":3397,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"name":"BackSpace","qualname":"::ascii_char::AsciiChar::BackSpace","value":"AsciiChar::BackSpace","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Backspace](http://en.wikipedia.org/wiki/Backspace)","sig":null,"attributes":[{"value":"/ [Backspace](http://en.wikipedia.org/wiki/Backspace)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3278,"byte_end":3333,"line_start":41,"line_end":41,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3338,"byte_end":3341,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ `'\\b'` is not recognized by Rust.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3346,"byte_end":3383,"line_start":43,"line_end":43,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":640},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3422,"byte_end":3425,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Tab","qualname":"::ascii_char::AsciiChar::Tab","value":"AsciiChar::Tab","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'\\t'`\n","sig":null,"attributes":[{"value":"/ `'\\t'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3407,"byte_end":3417,"line_start":45,"line_end":45,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":643},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3450,"byte_end":3458,"line_start":48,"line_end":48,"column_start":5,"column_end":13},"name":"LineFeed","qualname":"::ascii_char::AsciiChar::LineFeed","value":"AsciiChar::LineFeed","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'\\n'`\n","sig":null,"attributes":[{"value":"/ `'\\n'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3435,"byte_end":3445,"line_start":47,"line_end":47,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":646},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3585,"byte_end":3587,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"VT","qualname":"::ascii_char::AsciiChar::VT","value":"AsciiChar::VT","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Vertical tab](http://en.wikipedia.org/wiki/Vertical_Tab)","sig":null,"attributes":[{"value":"/ [Vertical tab](http://en.wikipedia.org/wiki/Vertical_Tab)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3469,"byte_end":3530,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3535,"byte_end":3538,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ `'\\v'` is not recognized by Rust.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3543,"byte_end":3580,"line_start":51,"line_end":51,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":649},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3708,"byte_end":3710,"line_start":56,"line_end":56,"column_start":5,"column_end":7},"name":"FF","qualname":"::ascii_char::AsciiChar::FF","value":"AsciiChar::FF","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Form Feed](http://en.wikipedia.org/wiki/Form_Feed)","sig":null,"attributes":[{"value":"/ [Form Feed](http://en.wikipedia.org/wiki/Form_Feed)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3598,"byte_end":3653,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3658,"byte_end":3661,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ `'\\f'` is not recognized by Rust.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3666,"byte_end":3703,"line_start":55,"line_end":55,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":652},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3736,"byte_end":3750,"line_start":58,"line_end":58,"column_start":5,"column_end":19},"name":"CarriageReturn","qualname":"::ascii_char::AsciiChar::CarriageReturn","value":"AsciiChar::CarriageReturn","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'\\r'`\n","sig":null,"attributes":[{"value":"/ `'\\r'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3721,"byte_end":3731,"line_start":57,"line_end":57,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":655},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3844,"byte_end":3846,"line_start":60,"line_end":60,"column_start":5,"column_end":7},"name":"SI","qualname":"::ascii_char::AsciiChar::SI","value":"AsciiChar::SI","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Shift In](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)\n","sig":null,"attributes":[{"value":"/ [Shift In](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3761,"byte_end":3839,"line_start":59,"line_end":59,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":658},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3941,"byte_end":3943,"line_start":62,"line_end":62,"column_start":5,"column_end":7},"name":"SO","qualname":"::ascii_char::AsciiChar::SO","value":"AsciiChar::SO","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Shift Out](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)\n","sig":null,"attributes":[{"value":"/ [Shift Out](http://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3857,"byte_end":3936,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":661},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4028,"byte_end":4031,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"DLE","qualname":"::ascii_char::AsciiChar::DLE","value":"AsciiChar::DLE","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Data Link Escape](http://en.wikipedia.org/wiki/Data_Link_Escape)\n","sig":null,"attributes":[{"value":"/ [Data Link Escape](http://en.wikipedia.org/wiki/Data_Link_Escape)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":3954,"byte_end":4023,"line_start":63,"line_end":63,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":664},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4127,"byte_end":4130,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"DC1","qualname":"::ascii_char::AsciiChar::DC1","value":"AsciiChar::DC1","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Device control 1, often XON](http://en.wikipedia.org/wiki/Device_Control_1)\n","sig":null,"attributes":[{"value":"/ [Device control 1, often XON](http://en.wikipedia.org/wiki/Device_Control_1)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4042,"byte_end":4122,"line_start":65,"line_end":65,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4166,"byte_end":4169,"line_start":68,"line_end":68,"column_start":5,"column_end":8},"name":"DC2","qualname":"::ascii_char::AsciiChar::DC2","value":"AsciiChar::DC2","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" Device control 2\n","sig":null,"attributes":[{"value":"/ Device control 2","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4141,"byte_end":4161,"line_start":67,"line_end":67,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":670},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4217,"byte_end":4220,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"DC3","qualname":"::ascii_char::AsciiChar::DC3","value":"AsciiChar::DC3","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" Device control 3, Often XOFF\n","sig":null,"attributes":[{"value":"/ Device control 3, Often XOFF","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4180,"byte_end":4212,"line_start":69,"line_end":69,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4256,"byte_end":4259,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"DC4","qualname":"::ascii_char::AsciiChar::DC4","value":"AsciiChar::DC4","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" Device control 4\n","sig":null,"attributes":[{"value":"/ Device control 4","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4231,"byte_end":4251,"line_start":71,"line_end":71,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":676},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4366,"byte_end":4369,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"NAK","qualname":"::ascii_char::AsciiChar::NAK","value":"AsciiChar::NAK","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Negative AcKnowledgement](http://en.wikipedia.org/wiki/Negative-acknowledge_character)\n","sig":null,"attributes":[{"value":"/ [Negative AcKnowledgement](http://en.wikipedia.org/wiki/Negative-acknowledge_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4270,"byte_end":4361,"line_start":73,"line_end":73,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":679},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4454,"byte_end":4457,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"SYN","qualname":"::ascii_char::AsciiChar::SYN","value":"AsciiChar::SYN","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Synchronous idle](http://en.wikipedia.org/wiki/Synchronous_Idle)\n","sig":null,"attributes":[{"value":"/ [Synchronous idle](http://en.wikipedia.org/wiki/Synchronous_Idle)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4380,"byte_end":4449,"line_start":75,"line_end":75,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":682},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4570,"byte_end":4573,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"ETB","qualname":"::ascii_char::AsciiChar::ETB","value":"AsciiChar::ETB","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [End of Transmission Block](http://en.wikipedia.org/wiki/End-of-Transmission-Block_character)\n","sig":null,"attributes":[{"value":"/ [End of Transmission Block](http://en.wikipedia.org/wiki/End-of-Transmission-Block_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4468,"byte_end":4565,"line_start":77,"line_end":77,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":685},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4648,"byte_end":4651,"line_start":80,"line_end":80,"column_start":5,"column_end":8},"name":"CAN","qualname":"::ascii_char::AsciiChar::CAN","value":"AsciiChar::CAN","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Cancel](http://en.wikipedia.org/wiki/Cancel_character)\n","sig":null,"attributes":[{"value":"/ [Cancel](http://en.wikipedia.org/wiki/Cancel_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4584,"byte_end":4643,"line_start":79,"line_end":79,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":688},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4730,"byte_end":4732,"line_start":82,"line_end":82,"column_start":5,"column_end":7},"name":"EM","qualname":"::ascii_char::AsciiChar::EM","value":"AsciiChar::EM","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [End of Medium](http://en.wikipedia.org/wiki/End_of_Medium)\n","sig":null,"attributes":[{"value":"/ [End of Medium](http://en.wikipedia.org/wiki/End_of_Medium)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4662,"byte_end":4725,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":691},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4815,"byte_end":4818,"line_start":84,"line_end":84,"column_start":5,"column_end":8},"name":"SUB","qualname":"::ascii_char::AsciiChar::SUB","value":"AsciiChar::SUB","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Substitute](http://en.wikipedia.org/wiki/Substitute_character)\n","sig":null,"attributes":[{"value":"/ [Substitute](http://en.wikipedia.org/wiki/Substitute_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4743,"byte_end":4810,"line_start":83,"line_end":83,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4943,"byte_end":4946,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"ESC","qualname":"::ascii_char::AsciiChar::ESC","value":"AsciiChar::ESC","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Escape](http://en.wikipedia.org/wiki/Escape_character)","sig":null,"attributes":[{"value":"/ [Escape](http://en.wikipedia.org/wiki/Escape_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4829,"byte_end":4888,"line_start":85,"line_end":85,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4893,"byte_end":4896,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ `'\\e'` is not recognized by Rust.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4901,"byte_end":4938,"line_start":87,"line_end":87,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5027,"byte_end":5029,"line_start":90,"line_end":90,"column_start":5,"column_end":7},"name":"FS","qualname":"::ascii_char::AsciiChar::FS","value":"AsciiChar::FS","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [File Separator](http://en.wikipedia.org/wiki/File_separator)\n","sig":null,"attributes":[{"value":"/ [File Separator](http://en.wikipedia.org/wiki/File_separator)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":4957,"byte_end":5022,"line_start":89,"line_end":89,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5112,"byte_end":5114,"line_start":92,"line_end":92,"column_start":5,"column_end":7},"name":"GS","qualname":"::ascii_char::AsciiChar::GS","value":"AsciiChar::GS","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Group Separator](http://en.wikipedia.org/wiki/Group_separator)\n","sig":null,"attributes":[{"value":"/ [Group Separator](http://en.wikipedia.org/wiki/Group_separator)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5040,"byte_end":5107,"line_start":91,"line_end":91,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":703},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5199,"byte_end":5201,"line_start":94,"line_end":94,"column_start":5,"column_end":7},"name":"RS","qualname":"::ascii_char::AsciiChar::RS","value":"AsciiChar::RS","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Record Separator](http://en.wikipedia.org/wiki/Record_separator)\n","sig":null,"attributes":[{"value":"/ [Record Separator](http://en.wikipedia.org/wiki/Record_separator)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5125,"byte_end":5194,"line_start":93,"line_end":93,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":706},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5282,"byte_end":5284,"line_start":96,"line_end":96,"column_start":5,"column_end":7},"name":"US","qualname":"::ascii_char::AsciiChar::US","value":"AsciiChar::US","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Unit Separator](http://en.wikipedia.org/wiki/Unit_separator)\n","sig":null,"attributes":[{"value":"/ [Unit Separator](http://en.wikipedia.org/wiki/Unit_separator)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5212,"byte_end":5277,"line_start":95,"line_end":95,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5309,"byte_end":5314,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Space","qualname":"::ascii_char::AsciiChar::Space","value":"AsciiChar::Space","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `' '`\n","sig":null,"attributes":[{"value":"/ `' '`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5295,"byte_end":5304,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5339,"byte_end":5350,"line_start":100,"line_end":100,"column_start":5,"column_end":16},"name":"Exclamation","qualname":"::ascii_char::AsciiChar::Exclamation","value":"AsciiChar::Exclamation","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'!'`\n","sig":null,"attributes":[{"value":"/ `'!'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5325,"byte_end":5334,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":715},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5375,"byte_end":5384,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"Quotation","qualname":"::ascii_char::AsciiChar::Quotation","value":"AsciiChar::Quotation","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'\"'`\n","sig":null,"attributes":[{"value":"/ `'\"'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5361,"byte_end":5370,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":718},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5409,"byte_end":5413,"line_start":104,"line_end":104,"column_start":5,"column_end":9},"name":"Hash","qualname":"::ascii_char::AsciiChar::Hash","value":"AsciiChar::Hash","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'#'`\n","sig":null,"attributes":[{"value":"/ `'#'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5395,"byte_end":5404,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":721},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5438,"byte_end":5444,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"Dollar","qualname":"::ascii_char::AsciiChar::Dollar","value":"AsciiChar::Dollar","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'$'`\n","sig":null,"attributes":[{"value":"/ `'$'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5424,"byte_end":5433,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":724},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5469,"byte_end":5476,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Percent","qualname":"::ascii_char::AsciiChar::Percent","value":"AsciiChar::Percent","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'%'`\n","sig":null,"attributes":[{"value":"/ `'%'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5455,"byte_end":5464,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":727},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5501,"byte_end":5510,"line_start":110,"line_end":110,"column_start":5,"column_end":14},"name":"Ampersand","qualname":"::ascii_char::AsciiChar::Ampersand","value":"AsciiChar::Ampersand","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'&'`\n","sig":null,"attributes":[{"value":"/ `'&'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5487,"byte_end":5496,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":730},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5536,"byte_end":5546,"line_start":112,"line_end":112,"column_start":5,"column_end":15},"name":"Apostrophe","qualname":"::ascii_char::AsciiChar::Apostrophe","value":"AsciiChar::Apostrophe","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'\\''`\n","sig":null,"attributes":[{"value":"/ `'\\''`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5521,"byte_end":5531,"line_start":111,"line_end":111,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":733},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5571,"byte_end":5580,"line_start":114,"line_end":114,"column_start":5,"column_end":14},"name":"ParenOpen","qualname":"::ascii_char::AsciiChar::ParenOpen","value":"AsciiChar::ParenOpen","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'('`\n","sig":null,"attributes":[{"value":"/ `'('`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5557,"byte_end":5566,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":736},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5605,"byte_end":5615,"line_start":116,"line_end":116,"column_start":5,"column_end":15},"name":"ParenClose","qualname":"::ascii_char::AsciiChar::ParenClose","value":"AsciiChar::ParenClose","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `')'`\n","sig":null,"attributes":[{"value":"/ `')'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5591,"byte_end":5600,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5640,"byte_end":5648,"line_start":118,"line_end":118,"column_start":5,"column_end":13},"name":"Asterisk","qualname":"::ascii_char::AsciiChar::Asterisk","value":"AsciiChar::Asterisk","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'*'`\n","sig":null,"attributes":[{"value":"/ `'*'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5626,"byte_end":5635,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":742},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5673,"byte_end":5677,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"Plus","qualname":"::ascii_char::AsciiChar::Plus","value":"AsciiChar::Plus","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'+'`\n","sig":null,"attributes":[{"value":"/ `'+'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5659,"byte_end":5668,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5702,"byte_end":5707,"line_start":122,"line_end":122,"column_start":5,"column_end":10},"name":"Comma","qualname":"::ascii_char::AsciiChar::Comma","value":"AsciiChar::Comma","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `','`\n","sig":null,"attributes":[{"value":"/ `','`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5688,"byte_end":5697,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5732,"byte_end":5737,"line_start":124,"line_end":124,"column_start":5,"column_end":10},"name":"Minus","qualname":"::ascii_char::AsciiChar::Minus","value":"AsciiChar::Minus","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'-'`\n","sig":null,"attributes":[{"value":"/ `'-'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5718,"byte_end":5727,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":751},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5762,"byte_end":5765,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"Dot","qualname":"::ascii_char::AsciiChar::Dot","value":"AsciiChar::Dot","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'.'`\n","sig":null,"attributes":[{"value":"/ `'.'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5748,"byte_end":5757,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":754},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5790,"byte_end":5795,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Slash","qualname":"::ascii_char::AsciiChar::Slash","value":"AsciiChar::Slash","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'/'`\n","sig":null,"attributes":[{"value":"/ `'/'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5776,"byte_end":5785,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5820,"byte_end":5822,"line_start":130,"line_end":130,"column_start":5,"column_end":7},"name":"_0","qualname":"::ascii_char::AsciiChar::_0","value":"AsciiChar::_0","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'0'`\n","sig":null,"attributes":[{"value":"/ `'0'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5806,"byte_end":5815,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":760},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5847,"byte_end":5849,"line_start":132,"line_end":132,"column_start":5,"column_end":7},"name":"_1","qualname":"::ascii_char::AsciiChar::_1","value":"AsciiChar::_1","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'1'`\n","sig":null,"attributes":[{"value":"/ `'1'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5833,"byte_end":5842,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5874,"byte_end":5876,"line_start":134,"line_end":134,"column_start":5,"column_end":7},"name":"_2","qualname":"::ascii_char::AsciiChar::_2","value":"AsciiChar::_2","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'2'`\n","sig":null,"attributes":[{"value":"/ `'2'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5860,"byte_end":5869,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":766},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5901,"byte_end":5903,"line_start":136,"line_end":136,"column_start":5,"column_end":7},"name":"_3","qualname":"::ascii_char::AsciiChar::_3","value":"AsciiChar::_3","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'3'`\n","sig":null,"attributes":[{"value":"/ `'3'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5887,"byte_end":5896,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5928,"byte_end":5930,"line_start":138,"line_end":138,"column_start":5,"column_end":7},"name":"_4","qualname":"::ascii_char::AsciiChar::_4","value":"AsciiChar::_4","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'4'`\n","sig":null,"attributes":[{"value":"/ `'4'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5914,"byte_end":5923,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":772},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5955,"byte_end":5957,"line_start":140,"line_end":140,"column_start":5,"column_end":7},"name":"_5","qualname":"::ascii_char::AsciiChar::_5","value":"AsciiChar::_5","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'5'`\n","sig":null,"attributes":[{"value":"/ `'5'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5941,"byte_end":5950,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":775},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5982,"byte_end":5984,"line_start":142,"line_end":142,"column_start":5,"column_end":7},"name":"_6","qualname":"::ascii_char::AsciiChar::_6","value":"AsciiChar::_6","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'6'`\n","sig":null,"attributes":[{"value":"/ `'6'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5968,"byte_end":5977,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":778},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6009,"byte_end":6011,"line_start":144,"line_end":144,"column_start":5,"column_end":7},"name":"_7","qualname":"::ascii_char::AsciiChar::_7","value":"AsciiChar::_7","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'7'`\n","sig":null,"attributes":[{"value":"/ `'7'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":5995,"byte_end":6004,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":781},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6036,"byte_end":6038,"line_start":146,"line_end":146,"column_start":5,"column_end":7},"name":"_8","qualname":"::ascii_char::AsciiChar::_8","value":"AsciiChar::_8","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'8'`\n","sig":null,"attributes":[{"value":"/ `'8'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6022,"byte_end":6031,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":784},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6063,"byte_end":6065,"line_start":148,"line_end":148,"column_start":5,"column_end":7},"name":"_9","qualname":"::ascii_char::AsciiChar::_9","value":"AsciiChar::_9","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'9'`\n","sig":null,"attributes":[{"value":"/ `'9'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6049,"byte_end":6058,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":787},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6090,"byte_end":6095,"line_start":150,"line_end":150,"column_start":5,"column_end":10},"name":"Colon","qualname":"::ascii_char::AsciiChar::Colon","value":"AsciiChar::Colon","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `':'`\n","sig":null,"attributes":[{"value":"/ `':'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6076,"byte_end":6085,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":790},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6120,"byte_end":6129,"line_start":152,"line_end":152,"column_start":5,"column_end":14},"name":"Semicolon","qualname":"::ascii_char::AsciiChar::Semicolon","value":"AsciiChar::Semicolon","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `';'`\n","sig":null,"attributes":[{"value":"/ `';'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6106,"byte_end":6115,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":793},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6154,"byte_end":6162,"line_start":154,"line_end":154,"column_start":5,"column_end":13},"name":"LessThan","qualname":"::ascii_char::AsciiChar::LessThan","value":"AsciiChar::LessThan","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'<'`\n","sig":null,"attributes":[{"value":"/ `'<'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6140,"byte_end":6149,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":796},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6187,"byte_end":6192,"line_start":156,"line_end":156,"column_start":5,"column_end":10},"name":"Equal","qualname":"::ascii_char::AsciiChar::Equal","value":"AsciiChar::Equal","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'='`\n","sig":null,"attributes":[{"value":"/ `'='`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6173,"byte_end":6182,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":799},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6217,"byte_end":6228,"line_start":158,"line_end":158,"column_start":5,"column_end":16},"name":"GreaterThan","qualname":"::ascii_char::AsciiChar::GreaterThan","value":"AsciiChar::GreaterThan","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'>'`\n","sig":null,"attributes":[{"value":"/ `'>'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6203,"byte_end":6212,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":802},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6253,"byte_end":6261,"line_start":160,"line_end":160,"column_start":5,"column_end":13},"name":"Question","qualname":"::ascii_char::AsciiChar::Question","value":"AsciiChar::Question","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'?'`\n","sig":null,"attributes":[{"value":"/ `'?'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6239,"byte_end":6248,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":805},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6286,"byte_end":6288,"line_start":162,"line_end":162,"column_start":5,"column_end":7},"name":"At","qualname":"::ascii_char::AsciiChar::At","value":"AsciiChar::At","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'@'`\n","sig":null,"attributes":[{"value":"/ `'@'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6272,"byte_end":6281,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":808},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6313,"byte_end":6314,"line_start":164,"line_end":164,"column_start":5,"column_end":6},"name":"A","qualname":"::ascii_char::AsciiChar::A","value":"AsciiChar::A","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'A'`\n","sig":null,"attributes":[{"value":"/ `'A'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6299,"byte_end":6308,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":811},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6339,"byte_end":6340,"line_start":166,"line_end":166,"column_start":5,"column_end":6},"name":"B","qualname":"::ascii_char::AsciiChar::B","value":"AsciiChar::B","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'B'`\n","sig":null,"attributes":[{"value":"/ `'B'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6325,"byte_end":6334,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6365,"byte_end":6366,"line_start":168,"line_end":168,"column_start":5,"column_end":6},"name":"C","qualname":"::ascii_char::AsciiChar::C","value":"AsciiChar::C","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'C'`\n","sig":null,"attributes":[{"value":"/ `'C'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6351,"byte_end":6360,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":817},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6391,"byte_end":6392,"line_start":170,"line_end":170,"column_start":5,"column_end":6},"name":"D","qualname":"::ascii_char::AsciiChar::D","value":"AsciiChar::D","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'D'`\n","sig":null,"attributes":[{"value":"/ `'D'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6377,"byte_end":6386,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":820},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6417,"byte_end":6418,"line_start":172,"line_end":172,"column_start":5,"column_end":6},"name":"E","qualname":"::ascii_char::AsciiChar::E","value":"AsciiChar::E","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'E'`\n","sig":null,"attributes":[{"value":"/ `'E'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6403,"byte_end":6412,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6443,"byte_end":6444,"line_start":174,"line_end":174,"column_start":5,"column_end":6},"name":"F","qualname":"::ascii_char::AsciiChar::F","value":"AsciiChar::F","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'F'`\n","sig":null,"attributes":[{"value":"/ `'F'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6429,"byte_end":6438,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":826},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6469,"byte_end":6470,"line_start":176,"line_end":176,"column_start":5,"column_end":6},"name":"G","qualname":"::ascii_char::AsciiChar::G","value":"AsciiChar::G","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'G'`\n","sig":null,"attributes":[{"value":"/ `'G'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6455,"byte_end":6464,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":829},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6495,"byte_end":6496,"line_start":178,"line_end":178,"column_start":5,"column_end":6},"name":"H","qualname":"::ascii_char::AsciiChar::H","value":"AsciiChar::H","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'H'`\n","sig":null,"attributes":[{"value":"/ `'H'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6481,"byte_end":6490,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":832},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6521,"byte_end":6522,"line_start":180,"line_end":180,"column_start":5,"column_end":6},"name":"I","qualname":"::ascii_char::AsciiChar::I","value":"AsciiChar::I","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'I'`\n","sig":null,"attributes":[{"value":"/ `'I'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6507,"byte_end":6516,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":835},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6547,"byte_end":6548,"line_start":182,"line_end":182,"column_start":5,"column_end":6},"name":"J","qualname":"::ascii_char::AsciiChar::J","value":"AsciiChar::J","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'J'`\n","sig":null,"attributes":[{"value":"/ `'J'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6533,"byte_end":6542,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":838},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6573,"byte_end":6574,"line_start":184,"line_end":184,"column_start":5,"column_end":6},"name":"K","qualname":"::ascii_char::AsciiChar::K","value":"AsciiChar::K","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'K'`\n","sig":null,"attributes":[{"value":"/ `'K'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6559,"byte_end":6568,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":841},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6599,"byte_end":6600,"line_start":186,"line_end":186,"column_start":5,"column_end":6},"name":"L","qualname":"::ascii_char::AsciiChar::L","value":"AsciiChar::L","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'L'`\n","sig":null,"attributes":[{"value":"/ `'L'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6585,"byte_end":6594,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":844},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6625,"byte_end":6626,"line_start":188,"line_end":188,"column_start":5,"column_end":6},"name":"M","qualname":"::ascii_char::AsciiChar::M","value":"AsciiChar::M","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'M'`\n","sig":null,"attributes":[{"value":"/ `'M'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6611,"byte_end":6620,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":847},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6651,"byte_end":6652,"line_start":190,"line_end":190,"column_start":5,"column_end":6},"name":"N","qualname":"::ascii_char::AsciiChar::N","value":"AsciiChar::N","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'N'`\n","sig":null,"attributes":[{"value":"/ `'N'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6637,"byte_end":6646,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6677,"byte_end":6678,"line_start":192,"line_end":192,"column_start":5,"column_end":6},"name":"O","qualname":"::ascii_char::AsciiChar::O","value":"AsciiChar::O","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'O'`\n","sig":null,"attributes":[{"value":"/ `'O'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6663,"byte_end":6672,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":853},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6703,"byte_end":6704,"line_start":194,"line_end":194,"column_start":5,"column_end":6},"name":"P","qualname":"::ascii_char::AsciiChar::P","value":"AsciiChar::P","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'P'`\n","sig":null,"attributes":[{"value":"/ `'P'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6689,"byte_end":6698,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6729,"byte_end":6730,"line_start":196,"line_end":196,"column_start":5,"column_end":6},"name":"Q","qualname":"::ascii_char::AsciiChar::Q","value":"AsciiChar::Q","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'Q'`\n","sig":null,"attributes":[{"value":"/ `'Q'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6715,"byte_end":6724,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6755,"byte_end":6756,"line_start":198,"line_end":198,"column_start":5,"column_end":6},"name":"R","qualname":"::ascii_char::AsciiChar::R","value":"AsciiChar::R","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'R'`\n","sig":null,"attributes":[{"value":"/ `'R'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6741,"byte_end":6750,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":862},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6781,"byte_end":6782,"line_start":200,"line_end":200,"column_start":5,"column_end":6},"name":"S","qualname":"::ascii_char::AsciiChar::S","value":"AsciiChar::S","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'S'`\n","sig":null,"attributes":[{"value":"/ `'S'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6767,"byte_end":6776,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":865},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6807,"byte_end":6808,"line_start":202,"line_end":202,"column_start":5,"column_end":6},"name":"T","qualname":"::ascii_char::AsciiChar::T","value":"AsciiChar::T","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'T'`\n","sig":null,"attributes":[{"value":"/ `'T'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6793,"byte_end":6802,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":868},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6833,"byte_end":6834,"line_start":204,"line_end":204,"column_start":5,"column_end":6},"name":"U","qualname":"::ascii_char::AsciiChar::U","value":"AsciiChar::U","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'U'`\n","sig":null,"attributes":[{"value":"/ `'U'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6819,"byte_end":6828,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":871},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6859,"byte_end":6860,"line_start":206,"line_end":206,"column_start":5,"column_end":6},"name":"V","qualname":"::ascii_char::AsciiChar::V","value":"AsciiChar::V","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'V'`\n","sig":null,"attributes":[{"value":"/ `'V'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6845,"byte_end":6854,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":874},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6885,"byte_end":6886,"line_start":208,"line_end":208,"column_start":5,"column_end":6},"name":"W","qualname":"::ascii_char::AsciiChar::W","value":"AsciiChar::W","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'W'`\n","sig":null,"attributes":[{"value":"/ `'W'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6871,"byte_end":6880,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6911,"byte_end":6912,"line_start":210,"line_end":210,"column_start":5,"column_end":6},"name":"X","qualname":"::ascii_char::AsciiChar::X","value":"AsciiChar::X","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'X'`\n","sig":null,"attributes":[{"value":"/ `'X'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6897,"byte_end":6906,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":880},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6937,"byte_end":6938,"line_start":212,"line_end":212,"column_start":5,"column_end":6},"name":"Y","qualname":"::ascii_char::AsciiChar::Y","value":"AsciiChar::Y","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'Y'`\n","sig":null,"attributes":[{"value":"/ `'Y'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6923,"byte_end":6932,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6963,"byte_end":6964,"line_start":214,"line_end":214,"column_start":5,"column_end":6},"name":"Z","qualname":"::ascii_char::AsciiChar::Z","value":"AsciiChar::Z","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'Z'`\n","sig":null,"attributes":[{"value":"/ `'Z'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6949,"byte_end":6958,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6989,"byte_end":7000,"line_start":216,"line_end":216,"column_start":5,"column_end":16},"name":"BracketOpen","qualname":"::ascii_char::AsciiChar::BracketOpen","value":"AsciiChar::BracketOpen","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'['`\n","sig":null,"attributes":[{"value":"/ `'['`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":6975,"byte_end":6984,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7025,"byte_end":7034,"line_start":218,"line_end":218,"column_start":5,"column_end":14},"name":"BackSlash","qualname":"::ascii_char::AsciiChar::BackSlash","value":"AsciiChar::BackSlash","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'\\'`\n","sig":null,"attributes":[{"value":"/ `'\\'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7011,"byte_end":7020,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":892},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7059,"byte_end":7071,"line_start":220,"line_end":220,"column_start":5,"column_end":17},"name":"BracketClose","qualname":"::ascii_char::AsciiChar::BracketClose","value":"AsciiChar::BracketClose","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `']'`\n","sig":null,"attributes":[{"value":"/ `']'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7045,"byte_end":7054,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7096,"byte_end":7101,"line_start":222,"line_end":222,"column_start":5,"column_end":10},"name":"Caret","qualname":"::ascii_char::AsciiChar::Caret","value":"AsciiChar::Caret","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'_'`\n","sig":null,"attributes":[{"value":"/ `'_'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7082,"byte_end":7091,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":898},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7126,"byte_end":7136,"line_start":224,"line_end":224,"column_start":5,"column_end":15},"name":"UnderScore","qualname":"::ascii_char::AsciiChar::UnderScore","value":"AsciiChar::UnderScore","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'_'`\n","sig":null,"attributes":[{"value":"/ `'_'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7112,"byte_end":7121,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7161,"byte_end":7166,"line_start":226,"line_end":226,"column_start":5,"column_end":10},"name":"Grave","qualname":"::ascii_char::AsciiChar::Grave","value":"AsciiChar::Grave","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'`'`\n","sig":null,"attributes":[{"value":"/ `'`'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7147,"byte_end":7156,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":904},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7191,"byte_end":7192,"line_start":228,"line_end":228,"column_start":5,"column_end":6},"name":"a","qualname":"::ascii_char::AsciiChar::a","value":"AsciiChar::a","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'a'`\n","sig":null,"attributes":[{"value":"/ `'a'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7177,"byte_end":7186,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7217,"byte_end":7218,"line_start":230,"line_end":230,"column_start":5,"column_end":6},"name":"b","qualname":"::ascii_char::AsciiChar::b","value":"AsciiChar::b","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'b'`\n","sig":null,"attributes":[{"value":"/ `'b'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7203,"byte_end":7212,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":910},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7243,"byte_end":7244,"line_start":232,"line_end":232,"column_start":5,"column_end":6},"name":"c","qualname":"::ascii_char::AsciiChar::c","value":"AsciiChar::c","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'c'`\n","sig":null,"attributes":[{"value":"/ `'c'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7229,"byte_end":7238,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7269,"byte_end":7270,"line_start":234,"line_end":234,"column_start":5,"column_end":6},"name":"d","qualname":"::ascii_char::AsciiChar::d","value":"AsciiChar::d","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'d'`\n","sig":null,"attributes":[{"value":"/ `'d'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7255,"byte_end":7264,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":916},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7296,"byte_end":7297,"line_start":236,"line_end":236,"column_start":5,"column_end":6},"name":"e","qualname":"::ascii_char::AsciiChar::e","value":"AsciiChar::e","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'e'`\n","sig":null,"attributes":[{"value":"/ `'e'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7282,"byte_end":7291,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7323,"byte_end":7324,"line_start":238,"line_end":238,"column_start":5,"column_end":6},"name":"f","qualname":"::ascii_char::AsciiChar::f","value":"AsciiChar::f","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'f'`\n","sig":null,"attributes":[{"value":"/ `'f'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7309,"byte_end":7318,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":922},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7350,"byte_end":7351,"line_start":240,"line_end":240,"column_start":5,"column_end":6},"name":"g","qualname":"::ascii_char::AsciiChar::g","value":"AsciiChar::g","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'g'`\n","sig":null,"attributes":[{"value":"/ `'g'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7336,"byte_end":7345,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7377,"byte_end":7378,"line_start":242,"line_end":242,"column_start":5,"column_end":6},"name":"h","qualname":"::ascii_char::AsciiChar::h","value":"AsciiChar::h","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'h'`\n","sig":null,"attributes":[{"value":"/ `'h'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7363,"byte_end":7372,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":928},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7404,"byte_end":7405,"line_start":244,"line_end":244,"column_start":5,"column_end":6},"name":"i","qualname":"::ascii_char::AsciiChar::i","value":"AsciiChar::i","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'i'`\n","sig":null,"attributes":[{"value":"/ `'i'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7390,"byte_end":7399,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7431,"byte_end":7432,"line_start":246,"line_end":246,"column_start":5,"column_end":6},"name":"j","qualname":"::ascii_char::AsciiChar::j","value":"AsciiChar::j","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'j'`\n","sig":null,"attributes":[{"value":"/ `'j'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7417,"byte_end":7426,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":934},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7458,"byte_end":7459,"line_start":248,"line_end":248,"column_start":5,"column_end":6},"name":"k","qualname":"::ascii_char::AsciiChar::k","value":"AsciiChar::k","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'k'`\n","sig":null,"attributes":[{"value":"/ `'k'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7444,"byte_end":7453,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7485,"byte_end":7486,"line_start":250,"line_end":250,"column_start":5,"column_end":6},"name":"l","qualname":"::ascii_char::AsciiChar::l","value":"AsciiChar::l","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'l'`\n","sig":null,"attributes":[{"value":"/ `'l'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7471,"byte_end":7480,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":940},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7512,"byte_end":7513,"line_start":252,"line_end":252,"column_start":5,"column_end":6},"name":"m","qualname":"::ascii_char::AsciiChar::m","value":"AsciiChar::m","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'m'`\n","sig":null,"attributes":[{"value":"/ `'m'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7498,"byte_end":7507,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7539,"byte_end":7540,"line_start":254,"line_end":254,"column_start":5,"column_end":6},"name":"n","qualname":"::ascii_char::AsciiChar::n","value":"AsciiChar::n","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'n'`\n","sig":null,"attributes":[{"value":"/ `'n'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7525,"byte_end":7534,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7566,"byte_end":7567,"line_start":256,"line_end":256,"column_start":5,"column_end":6},"name":"o","qualname":"::ascii_char::AsciiChar::o","value":"AsciiChar::o","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'o'`\n","sig":null,"attributes":[{"value":"/ `'o'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7552,"byte_end":7561,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7593,"byte_end":7594,"line_start":258,"line_end":258,"column_start":5,"column_end":6},"name":"p","qualname":"::ascii_char::AsciiChar::p","value":"AsciiChar::p","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'p'`\n","sig":null,"attributes":[{"value":"/ `'p'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7579,"byte_end":7588,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7620,"byte_end":7621,"line_start":260,"line_end":260,"column_start":5,"column_end":6},"name":"q","qualname":"::ascii_char::AsciiChar::q","value":"AsciiChar::q","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'q'`\n","sig":null,"attributes":[{"value":"/ `'q'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7606,"byte_end":7615,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7647,"byte_end":7648,"line_start":262,"line_end":262,"column_start":5,"column_end":6},"name":"r","qualname":"::ascii_char::AsciiChar::r","value":"AsciiChar::r","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'r'`\n","sig":null,"attributes":[{"value":"/ `'r'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7633,"byte_end":7642,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":958},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7674,"byte_end":7675,"line_start":264,"line_end":264,"column_start":5,"column_end":6},"name":"s","qualname":"::ascii_char::AsciiChar::s","value":"AsciiChar::s","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'s'`\n","sig":null,"attributes":[{"value":"/ `'s'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7660,"byte_end":7669,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":961},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7701,"byte_end":7702,"line_start":266,"line_end":266,"column_start":5,"column_end":6},"name":"t","qualname":"::ascii_char::AsciiChar::t","value":"AsciiChar::t","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'t'`\n","sig":null,"attributes":[{"value":"/ `'t'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7687,"byte_end":7696,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":964},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7728,"byte_end":7729,"line_start":268,"line_end":268,"column_start":5,"column_end":6},"name":"u","qualname":"::ascii_char::AsciiChar::u","value":"AsciiChar::u","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'u'`\n","sig":null,"attributes":[{"value":"/ `'u'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7714,"byte_end":7723,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":967},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7755,"byte_end":7756,"line_start":270,"line_end":270,"column_start":5,"column_end":6},"name":"v","qualname":"::ascii_char::AsciiChar::v","value":"AsciiChar::v","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'v'`\n","sig":null,"attributes":[{"value":"/ `'v'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7741,"byte_end":7750,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":970},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7782,"byte_end":7783,"line_start":272,"line_end":272,"column_start":5,"column_end":6},"name":"w","qualname":"::ascii_char::AsciiChar::w","value":"AsciiChar::w","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'w'`\n","sig":null,"attributes":[{"value":"/ `'w'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7768,"byte_end":7777,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":973},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7809,"byte_end":7810,"line_start":274,"line_end":274,"column_start":5,"column_end":6},"name":"x","qualname":"::ascii_char::AsciiChar::x","value":"AsciiChar::x","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'x'`\n","sig":null,"attributes":[{"value":"/ `'x'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7795,"byte_end":7804,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":976},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7836,"byte_end":7837,"line_start":276,"line_end":276,"column_start":5,"column_end":6},"name":"y","qualname":"::ascii_char::AsciiChar::y","value":"AsciiChar::y","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'y'`\n","sig":null,"attributes":[{"value":"/ `'y'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7822,"byte_end":7831,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":979},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7863,"byte_end":7864,"line_start":278,"line_end":278,"column_start":5,"column_end":6},"name":"z","qualname":"::ascii_char::AsciiChar::z","value":"AsciiChar::z","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'z'`\n","sig":null,"attributes":[{"value":"/ `'z'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7849,"byte_end":7858,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":982},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7890,"byte_end":7904,"line_start":280,"line_end":280,"column_start":5,"column_end":19},"name":"CurlyBraceOpen","qualname":"::ascii_char::AsciiChar::CurlyBraceOpen","value":"AsciiChar::CurlyBraceOpen","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'{'`\n","sig":null,"attributes":[{"value":"/ `'{'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7876,"byte_end":7885,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7930,"byte_end":7941,"line_start":282,"line_end":282,"column_start":5,"column_end":16},"name":"VerticalBar","qualname":"::ascii_char::AsciiChar::VerticalBar","value":"AsciiChar::VerticalBar","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'|'`\n","sig":null,"attributes":[{"value":"/ `'|'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7916,"byte_end":7925,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":988},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7967,"byte_end":7982,"line_start":284,"line_end":284,"column_start":5,"column_end":20},"name":"CurlyBraceClose","qualname":"::ascii_char::AsciiChar::CurlyBraceClose","value":"AsciiChar::CurlyBraceClose","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'}'`\n","sig":null,"attributes":[{"value":"/ `'}'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7953,"byte_end":7962,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8008,"byte_end":8013,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"Tilde","qualname":"::ascii_char::AsciiChar::Tilde","value":"AsciiChar::Tilde","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" `'~'`\n","sig":null,"attributes":[{"value":"/ `'~'`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":7994,"byte_end":8003,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":994},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8089,"byte_end":8092,"line_start":288,"line_end":288,"column_start":5,"column_end":8},"name":"DEL","qualname":"::ascii_char::AsciiChar::DEL","value":"AsciiChar::DEL","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" [Delete](http://en.wikipedia.org/wiki/Delete_character)\n","sig":null,"attributes":[{"value":"/ [Delete](http://en.wikipedia.org/wiki/Delete_character)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8025,"byte_end":8084,"line_start":287,"line_end":287,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":612},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2563,"byte_end":2572,"line_start":22,"line_end":22,"column_start":10,"column_end":19},"name":"AsciiChar","qualname":"::ascii_char::AsciiChar","value":"pub enum AsciiChar {\n    Null = ,\n    SOH = ,\n    SOX = ,\n    ETX = ,\n    EOT = ,\n    ENQ = ,\n    ACK = ,\n    Bell = ,\n    BackSpace = ,\n    Tab = ,\n    LineFeed = ,\n    VT = ,\n    FF = ,\n    CarriageReturn = ,\n    SI = ,\n    SO = ,\n    DLE = ,\n    DC1 = ,\n    DC2 = ,\n    DC3 = ,\n    DC4 = ,\n    NAK = ,\n    SYN = ,\n    ETB = ,\n    CAN = ,\n    EM = ,\n    SUB = ,\n    ESC = ,\n    FS = ,\n    GS = ,\n    RS = ,\n    US = ,\n    Space = ,\n    Exclamation = ,\n    Quotation = ,\n    Hash = ,\n    Dollar = ,\n    Percent = ,\n    Ampersand = ,\n    Apostrophe = ,\n    ParenOpen = ,\n    ParenClose = ,\n    Asterisk = ,\n    Plus = ,\n    Comma = ,\n    Minus = ,\n    Dot = ,\n    Slash = ,\n    _0 = ,\n    _1 = ,\n    _2 = ,\n    _3 = ,\n    _4 = ,\n    _5 = ,\n    _6 = ,\n    _7 = ,\n    _8 = ,\n    _9 = ,\n    Colon = ,\n    Semicolon = ,\n    LessThan = ,\n    Equal = ,\n    GreaterThan = ,\n    Question = ,\n    At = ,\n    A = ,\n    B = ,\n    C = ,\n    D = ,\n    E = ,\n    F = ,\n    G = ,\n    H = ,\n    I = ,\n    J = ,\n    K = ,\n    L = ,\n    M = ,\n    N = ,\n    O = ,\n    P = ,\n    Q = ,\n    R = ,\n    S = ,\n    T = ,\n    U = ,\n    V = ,\n    W = ,\n    X = ,\n    Y = ,\n    Z = ,\n    BracketOpen = ,\n    BackSlash = ,\n    BracketClose = ,\n    Caret = ,\n    UnderScore = ,\n    Grave = ,\n    a = ,\n    b = ,\n    c = ,\n    d = ,\n    e = ,\n    f = ,\n    g = ,\n    h = ,\n    i = ,\n    j = ,\n    k = ,\n    l = ,\n    m = ,\n    n = ,\n    o = ,\n    p = ,\n    q = ,\n    r = ,\n    s = ,\n    t = ,\n    u = ,\n    v = ,\n    w = ,\n    x = ,\n    y = ,\n    z = ,\n    CurlyBraceOpen = ,\n    VerticalBar = ,\n    CurlyBraceClose = ,\n    Tilde = ,\n    DEL = ,\n}","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994}],"decl_id":null,"docs":" An ASCII character. It wraps a `u8`, with the highest bit always zero.\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2375,"byte_end":2405,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ An ASCII character. It wraps a `u8`, with the highest bit always zero.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2406,"byte_end":2480,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"repr(u8)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":2542,"byte_end":2553,"line_start":21,"line_end":21,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8488,"byte_end":8492,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"from","qualname":"<AsciiChar>::from","value":"pub fn from<C: ToAsciiChar>(C) -> Result<Self, ToAsciiCharError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an ASCII character from a `u8`, `char` or other character type.","sig":null,"attributes":[{"value":"/ Constructs an ASCII character from a `u8`, `char` or other character type.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8124,"byte_end":8202,"line_start":292,"line_end":292,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8207,"byte_end":8210,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8215,"byte_end":8228,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/ Returns `Err(())` if the character can't be ASCII encoded.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8233,"byte_end":8295,"line_start":295,"line_end":295,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8300,"byte_end":8303,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8308,"byte_end":8321,"line_start":297,"line_end":297,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8326,"byte_end":8333,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8338,"byte_end":8365,"line_start":299,"line_end":299,"column_start":5,"column_end":32}},{"value":"/ let a = AsciiChar::from('g').unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8370,"byte_end":8412,"line_start":300,"line_end":300,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.as_char(), 'g');","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8417,"byte_end":8450,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8455,"byte_end":8462,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8467,"byte_end":8476,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8698,"byte_end":8712,"line_start":310,"line_end":310,"column_start":19,"column_end":33},"name":"from_unchecked","qualname":"<AsciiChar>::from_unchecked","value":"pub unsafe fn from_unchecked<C: ToAsciiChar>(C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an ASCII character from a `char` or `u8` without any checks.\n","sig":null,"attributes":[{"value":"/ Constructs an ASCII character from a `char` or `u8` without any checks.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8590,"byte_end":8665,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8670,"byte_end":8679,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8864,"byte_end":8871,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"as_byte","qualname":"<AsciiChar>::as_byte","value":"pub fn as_byte(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Converts an ASCII character into a `u8`.\n","sig":null,"attributes":[{"value":"/ Converts an ASCII character into a `u8`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8794,"byte_end":8838,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8843,"byte_end":8852,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8988,"byte_end":8995,"line_start":322,"line_end":322,"column_start":12,"column_end":19},"name":"as_char","qualname":"<AsciiChar>::as_char","value":"pub fn as_char(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Converts an ASCII character into a `char`.\n","sig":null,"attributes":[{"value":"/ Converts an ASCII character into a `char`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8916,"byte_end":8962,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8967,"byte_end":8976,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9218,"byte_end":9231,"line_start":330,"line_end":330,"column_start":12,"column_end":25},"name":"is_alphabetic","qualname":"<AsciiChar>::is_alphabetic","value":"pub fn is_alphabetic(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a letter (a-z, A-Z)\n","sig":null,"attributes":[{"value":"/ Check if the character is a letter (a-z, A-Z)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9143,"byte_end":9192,"line_start":328,"line_end":328,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9197,"byte_end":9206,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9440,"byte_end":9448,"line_start":337,"line_end":337,"column_start":12,"column_end":20},"name":"is_digit","qualname":"<AsciiChar>::is_digit","value":"pub fn is_digit(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a number (0-9)\n","sig":null,"attributes":[{"value":"/ Check if the character is a number (0-9)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9370,"byte_end":9414,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9419,"byte_end":9428,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9605,"byte_end":9620,"line_start":343,"line_end":343,"column_start":12,"column_end":27},"name":"is_alphanumeric","qualname":"<AsciiChar>::is_alphanumeric","value":"pub fn is_alphanumeric(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a letter or number\n","sig":null,"attributes":[{"value":"/ Check if the character is a letter or number","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9531,"byte_end":9579,"line_start":341,"line_end":341,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9584,"byte_end":9593,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9777,"byte_end":9785,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"is_blank","qualname":"<AsciiChar>::is_blank","value":"pub fn is_blank(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a space or horizontal tab\n","sig":null,"attributes":[{"value":"/ Check if the character is a space or horizontal tab","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9696,"byte_end":9751,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9756,"byte_end":9765,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9953,"byte_end":9966,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"is_whitespace","qualname":"<AsciiChar>::is_whitespace","value":"pub fn is_whitespace(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a ' ', '\\t', '\\n' or '\\r'\n","sig":null,"attributes":[{"value":"/ Check if the character is a ' ', '\\t', '\\n' or '\\r'","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9872,"byte_end":9927,"line_start":353,"line_end":353,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":9932,"byte_end":9941,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10524,"byte_end":10534,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"is_control","qualname":"<AsciiChar>::is_control","value":"pub fn is_control(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the character is a control character","sig":null,"attributes":[{"value":"/ Check if the character is a control character","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10086,"byte_end":10135,"line_start":359,"line_end":359,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10140,"byte_end":10143,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10148,"byte_end":10162,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10167,"byte_end":10174,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use ascii::ToAsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10179,"byte_end":10206,"line_start":363,"line_end":363,"column_start":5,"column_end":32}},{"value":"/ assert_eq!('\\0'.to_ascii_char().unwrap().is_control(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10211,"byte_end":10276,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ assert_eq!('n'.to_ascii_char().unwrap().is_control(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10281,"byte_end":10346,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(' '.to_ascii_char().unwrap().is_control(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10351,"byte_end":10416,"line_start":366,"line_end":366,"column_start":5,"column_end":70}},{"value":"/ assert_eq!('\\n'.to_ascii_char().unwrap().is_control(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10421,"byte_end":10486,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10491,"byte_end":10498,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10503,"byte_end":10512,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10988,"byte_end":10996,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"name":"is_graph","qualname":"<AsciiChar>::is_graph","value":"pub fn is_graph(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is printable (except space)","sig":null,"attributes":[{"value":"/ Checks if the character is printable (except space)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10620,"byte_end":10675,"line_start":374,"line_end":374,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10680,"byte_end":10683,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10688,"byte_end":10702,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10707,"byte_end":10714,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ use ascii::ToAsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10719,"byte_end":10746,"line_start":378,"line_end":378,"column_start":5,"column_end":32}},{"value":"/ assert_eq!('n'.to_ascii_char().unwrap().is_graph(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10751,"byte_end":10813,"line_start":379,"line_end":379,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(' '.to_ascii_char().unwrap().is_graph(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10818,"byte_end":10881,"line_start":380,"line_end":380,"column_start":5,"column_end":68}},{"value":"/ assert_eq!('\\n'.to_ascii_char().unwrap().is_graph(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10886,"byte_end":10950,"line_start":381,"line_end":381,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10955,"byte_end":10962,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":10967,"byte_end":10976,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11447,"byte_end":11455,"line_start":398,"line_end":398,"column_start":12,"column_end":20},"name":"is_print","qualname":"<AsciiChar>::is_print","value":"pub fn is_print(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is printable (including space)","sig":null,"attributes":[{"value":"/ Checks if the character is printable (including space)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11077,"byte_end":11135,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11140,"byte_end":11143,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11148,"byte_end":11162,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11167,"byte_end":11174,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use ascii::ToAsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11179,"byte_end":11206,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/ assert_eq!('n'.to_ascii_char().unwrap().is_print(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11211,"byte_end":11273,"line_start":393,"line_end":393,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(' '.to_ascii_char().unwrap().is_print(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11278,"byte_end":11340,"line_start":394,"line_end":394,"column_start":5,"column_end":67}},{"value":"/ assert_eq!('\\n'.to_ascii_char().unwrap().is_print(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11345,"byte_end":11409,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11414,"byte_end":11421,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11426,"byte_end":11435,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11911,"byte_end":11923,"line_start":412,"line_end":412,"column_start":12,"column_end":24},"name":"is_lowercase","qualname":"<AsciiChar>::is_lowercase","value":"pub fn is_lowercase(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is alphabetic and lowercase","sig":null,"attributes":[{"value":"/ Checks if the character is alphabetic and lowercase","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11532,"byte_end":11587,"line_start":402,"line_end":402,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11592,"byte_end":11595,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11600,"byte_end":11614,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11619,"byte_end":11626,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use ascii::ToAsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11631,"byte_end":11658,"line_start":406,"line_end":406,"column_start":5,"column_end":32}},{"value":"/ assert_eq!('a'.to_ascii_char().unwrap().is_lowercase(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11663,"byte_end":11729,"line_start":407,"line_end":407,"column_start":5,"column_end":71}},{"value":"/ assert_eq!('A'.to_ascii_char().unwrap().is_lowercase(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11734,"byte_end":11801,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ assert_eq!('@'.to_ascii_char().unwrap().is_lowercase(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11806,"byte_end":11873,"line_start":409,"line_end":409,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11878,"byte_end":11885,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11890,"byte_end":11899,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12377,"byte_end":12389,"line_start":426,"line_end":426,"column_start":12,"column_end":24},"name":"is_uppercase","qualname":"<AsciiChar>::is_uppercase","value":"pub fn is_uppercase(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is alphabetic and uppercase","sig":null,"attributes":[{"value":"/ Checks if the character is alphabetic and uppercase","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":11998,"byte_end":12053,"line_start":416,"line_end":416,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12058,"byte_end":12061,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12066,"byte_end":12080,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12085,"byte_end":12092,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ use ascii::ToAsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12097,"byte_end":12124,"line_start":420,"line_end":420,"column_start":5,"column_end":32}},{"value":"/ assert_eq!('A'.to_ascii_char().unwrap().is_uppercase(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12129,"byte_end":12195,"line_start":421,"line_end":421,"column_start":5,"column_end":71}},{"value":"/ assert_eq!('a'.to_ascii_char().unwrap().is_uppercase(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12200,"byte_end":12267,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/ assert_eq!('@'.to_ascii_char().unwrap().is_uppercase(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12272,"byte_end":12339,"line_start":423,"line_end":423,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12344,"byte_end":12351,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12356,"byte_end":12365,"line_start":425,"line_end":425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12909,"byte_end":12923,"line_start":441,"line_end":441,"column_start":12,"column_end":26},"name":"is_punctuation","qualname":"<AsciiChar>::is_punctuation","value":"pub fn is_punctuation(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is punctuation","sig":null,"attributes":[{"value":"/ Checks if the character is punctuation","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12464,"byte_end":12506,"line_start":430,"line_end":430,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12511,"byte_end":12514,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12519,"byte_end":12533,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12538,"byte_end":12545,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use ascii::ToAsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12550,"byte_end":12577,"line_start":434,"line_end":434,"column_start":5,"column_end":32}},{"value":"/ assert_eq!('n'.to_ascii_char().unwrap().is_punctuation(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12582,"byte_end":12651,"line_start":435,"line_end":435,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(' '.to_ascii_char().unwrap().is_punctuation(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12656,"byte_end":12725,"line_start":436,"line_end":436,"column_start":5,"column_end":74}},{"value":"/ assert_eq!('_'.to_ascii_char().unwrap().is_punctuation(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12730,"byte_end":12798,"line_start":437,"line_end":437,"column_start":5,"column_end":73}},{"value":"/ assert_eq!('~'.to_ascii_char().unwrap().is_punctuation(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12803,"byte_end":12871,"line_start":438,"line_end":438,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12876,"byte_end":12883,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":12888,"byte_end":12897,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13486,"byte_end":13492,"line_start":457,"line_end":457,"column_start":12,"column_end":18},"name":"is_hex","qualname":"<AsciiChar>::is_hex","value":"pub fn is_hex(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the character is a valid hex digit","sig":null,"attributes":[{"value":"/ Checks if the character is a valid hex digit","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13002,"byte_end":13050,"line_start":445,"line_end":445,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13055,"byte_end":13058,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13063,"byte_end":13077,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13082,"byte_end":13089,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ use ascii::ToAsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13094,"byte_end":13121,"line_start":449,"line_end":449,"column_start":5,"column_end":32}},{"value":"/ assert_eq!('5'.to_ascii_char().unwrap().is_hex(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13126,"byte_end":13186,"line_start":450,"line_end":450,"column_start":5,"column_end":65}},{"value":"/ assert_eq!('a'.to_ascii_char().unwrap().is_hex(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13191,"byte_end":13251,"line_start":451,"line_end":451,"column_start":5,"column_end":65}},{"value":"/ assert_eq!('F'.to_ascii_char().unwrap().is_hex(), true);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13256,"byte_end":13316,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/ assert_eq!('G'.to_ascii_char().unwrap().is_hex(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13321,"byte_end":13382,"line_start":453,"line_end":453,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(' '.to_ascii_char().unwrap().is_hex(), false);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13387,"byte_end":13448,"line_start":454,"line_end":454,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13453,"byte_end":13460,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13465,"byte_end":13474,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14272,"byte_end":14289,"line_start":475,"line_end":475,"column_start":12,"column_end":29},"name":"as_printable_char","qualname":"<AsciiChar>::as_printable_char","value":"pub fn as_printable_char(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Unicode has printable versions of the ASCII control codes, like '␛'.","sig":null,"attributes":[{"value":"/ Unicode has printable versions of the ASCII control codes, like '␛'.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13596,"byte_end":13670,"line_start":461,"line_end":461,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13675,"byte_end":13678,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is identical with `.as_char()`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13683,"byte_end":13731,"line_start":463,"line_end":463,"column_start":5,"column_end":53}},{"value":"/ for all values `.is_printable()` returns true for,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13736,"byte_end":13790,"line_start":464,"line_end":464,"column_start":5,"column_end":59}},{"value":"/ but replaces the control codes with those unicodes printable versions.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13795,"byte_end":13869,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13874,"byte_end":13877,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13882,"byte_end":13896,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13901,"byte_end":13908,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ # use ascii::ToAsciiChar;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13913,"byte_end":13942,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/ assert_eq!('\\0'.to_ascii_char().unwrap().as_printable_char(), '␀');","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":13947,"byte_end":14020,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/ assert_eq!('\\n'.to_ascii_char().unwrap().as_printable_char(), '␊');","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14025,"byte_end":14098,"line_start":471,"line_end":471,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(' '.to_ascii_char().unwrap().as_printable_char(), ' ');","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14103,"byte_end":14173,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/ assert_eq!('p'.to_ascii_char().unwrap().as_printable_char(), 'p');","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14178,"byte_end":14248,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14253,"byte_end":14260,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14600,"byte_end":14620,"line_start":486,"line_end":486,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<AsciiChar>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces letters `a` to `z` with `A` to `Z`\n","sig":null,"attributes":[{"value":"/ Replaces letters `a` to `z` with `A` to `Z`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14541,"byte_end":14588,"line_start":485,"line_end":485,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14746,"byte_end":14766,"line_start":491,"line_end":491,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<AsciiChar>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces letters `A` to `Z` with `a` to `z`\n","sig":null,"attributes":[{"value":"/ Replaces letters `A` to `Z` with `a` to `z`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14687,"byte_end":14734,"line_start":490,"line_end":490,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14937,"byte_end":14955,"line_start":497,"line_end":497,"column_start":12,"column_end":30},"name":"to_ascii_uppercase","qualname":"<AsciiChar>::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maps letters `a`...`z` to `A`...`Z` and returns everything else unchanged.\n","sig":null,"attributes":[{"value":"/ Maps letters `a`...`z` to `A`...`Z` and returns everything else unchanged.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14833,"byte_end":14911,"line_start":495,"line_end":495,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":14916,"byte_end":14925,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15279,"byte_end":15297,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"to_ascii_lowercase","qualname":"<AsciiChar>::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maps letters `A`...`Z` to `a`...`z` and returns everything else unchanged.\n","sig":null,"attributes":[{"value":"/ Maps letters `A`...`Z` to `a`...`z` and returns everything else unchanged.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15175,"byte_end":15253,"line_start":506,"line_end":506,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15258,"byte_end":15267,"line_start":507,"line_end":507,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15576,"byte_end":15596,"line_start":518,"line_end":518,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<AsciiChar>::eq_ignore_ascii_case","value":"pub fn eq_ignore_ascii_case(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares two characters case-insensitively.\n","sig":null,"attributes":[{"value":"/ Compares two characters case-insensitively.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15517,"byte_end":15564,"line_start":517,"line_end":517,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18092,"byte_end":18108,"line_start":623,"line_end":623,"column_start":12,"column_end":28},"name":"ToAsciiCharError","qualname":"::ascii_char::ToAsciiCharError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `ToAsciiChar`.\n","sig":null,"attributes":[{"value":"/ Error returned by `ToAsciiChar`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18006,"byte_end":18042,"line_start":621,"line_end":621,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":71},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18939,"byte_end":18950,"line_start":657,"line_end":657,"column_start":11,"column_end":22},"name":"ToAsciiChar","qualname":"::ascii_char::ToAsciiChar","value":"ToAsciiChar","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"decl_id":null,"docs":" Convert `char`, `u8` and other character types to `AsciiChar`.\n","sig":null,"attributes":[{"value":"/ Convert `char`, `u8` and other character types to `AsciiChar`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18862,"byte_end":18928,"line_start":656,"line_end":656,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":19046,"byte_end":19069,"line_start":659,"line_end":659,"column_start":15,"column_end":38},"name":"to_ascii_char_unchecked","qualname":"::ascii_char::ToAsciiChar::to_ascii_char_unchecked","value":"pub unsafe fn to_ascii_char_unchecked(Self) -> AsciiChar","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Convert to `AsciiChar` without checking that it is an ASCII character.\n","sig":null,"attributes":[{"value":"/ Convert to `AsciiChar` without checking that it is an ASCII character.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18957,"byte_end":19031,"line_start":658,"line_end":658,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":19129,"byte_end":19142,"line_start":661,"line_end":661,"column_start":8,"column_end":21},"name":"to_ascii_char","qualname":"::ascii_char::ToAsciiChar::to_ascii_char","value":"pub fn to_ascii_char(Self) -> Result<AsciiChar, ToAsciiCharError>","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Convert to `AsciiChar`.\n","sig":null,"attributes":[{"value":"/ Convert to `AsciiChar`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":19094,"byte_end":19121,"line_start":660,"line_end":660,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26779,"byte_end":26787,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"AsciiStr","qualname":"::ascii_str::AsciiStr","value":"AsciiStr {  }","parent":null,"children":[{"krate":0,"index":1047}],"decl_id":null,"docs":" AsciiStr represents a byte or string slice that only contains ASCII characters.","sig":null,"attributes":[{"value":"/ AsciiStr represents a byte or string slice that only contains ASCII characters.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26439,"byte_end":26522,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26523,"byte_end":26526,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ It wraps an `[AsciiChar]` and implements many of `str`s methods and traits.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26527,"byte_end":26606,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26607,"byte_end":26610,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ It can be created by a checked conversion from a `str` or `[u8]`, or borrowed from an","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26611,"byte_end":26700,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ `AsciiString`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26701,"byte_end":26719,"line_start":26,"line_end":26,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26886,"byte_end":26889,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<AsciiStr>::new","value":"pub fn new<S: AsRef<AsciiStr> + ?Sized>(&S) -> &AsciiStr","parent":null,"children":[],"decl_id":null,"docs":" Coerces into an `AsciiStr` slice.\n","sig":null,"attributes":[{"value":"/ Coerces into an `AsciiStr` slice.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26837,"byte_end":26874,"line_start":33,"line_end":33,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27036,"byte_end":27042,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"as_str","qualname":"<AsciiStr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Converts `&self` to a `&str` slice.\n","sig":null,"attributes":[{"value":"/ Converts `&self` to a `&str` slice.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26971,"byte_end":27010,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27015,"byte_end":27024,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27197,"byte_end":27205,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<AsciiStr>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts `&self` into a byte slice.\n","sig":null,"attributes":[{"value":"/ Converts `&self` into a byte slice.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27132,"byte_end":27171,"line_start":44,"line_end":44,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27176,"byte_end":27185,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27377,"byte_end":27385,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<AsciiStr>::as_slice","value":"pub fn as_slice(&Self) -> &[AsciiChar]","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire string as slice of `AsciiChar`s.\n","sig":null,"attributes":[{"value":"/ Returns the entire string as slice of `AsciiChar`s.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27296,"byte_end":27351,"line_start":50,"line_end":50,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27356,"byte_end":27365,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27531,"byte_end":27543,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<AsciiStr>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [AsciiChar]","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire string as mutable slice of `AsciiChar`s.\n","sig":null,"attributes":[{"value":"/ Returns the entire string as mutable slice of `AsciiChar`s.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27442,"byte_end":27505,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27510,"byte_end":27519,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27965,"byte_end":27971,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AsciiStr>::as_ptr","value":"pub fn as_ptr(&Self) -> *const AsciiChar","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the `AsciiStr`'s buffer.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the `AsciiStr`'s buffer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27612,"byte_end":27665,"line_start":62,"line_end":62,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27670,"byte_end":27673,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the slice outlives the pointer this function returns, or else it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27678,"byte_end":27774,"line_start":64,"line_end":64,"column_start":5,"column_end":101}},{"value":"/ will end up pointing to garbage. Modifying the `AsciiStr` may cause it's buffer to be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27779,"byte_end":27868,"line_start":65,"line_end":65,"column_start":5,"column_end":94}},{"value":"/ reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27873,"byte_end":27939,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":27944,"byte_end":27953,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28410,"byte_end":28420,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<AsciiStr>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut AsciiChar","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the `AsciiStr`'s buffer.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the `AsciiStr`'s buffer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28045,"byte_end":28110,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28115,"byte_end":28118,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the slice outlives the pointer this function returns, or else it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28123,"byte_end":28219,"line_start":74,"line_end":74,"column_start":5,"column_end":101}},{"value":"/ will end up pointing to garbage. Modifying the `AsciiStr` may cause it's buffer to be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28224,"byte_end":28313,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28318,"byte_end":28384,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28389,"byte_end":28398,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28614,"byte_end":28629,"line_start":84,"line_end":84,"column_start":12,"column_end":27},"name":"to_ascii_string","qualname":"<AsciiStr>::to_ascii_string","value":"pub fn to_ascii_string(&Self) -> AsciiString","parent":null,"children":[],"decl_id":null,"docs":" Copies the content of this `AsciiStr` into an owned `AsciiString`.\n","sig":null,"attributes":[{"value":"/ Copies the content of this `AsciiStr` into an owned `AsciiString`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28504,"byte_end":28574,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28579,"byte_end":28602,"line_start":83,"line_end":83,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29091,"byte_end":29101,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<AsciiStr>::from_ascii","value":"pub fn from_ascii<B: ?Sized>(&B) -> Result<&AsciiStr, AsAsciiStrError> where\nB: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Converts anything that can represent a byte slice into an `AsciiStr`.","sig":null,"attributes":[{"value":"/ Converts anything that can represent a byte slice into an `AsciiStr`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28712,"byte_end":28785,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28790,"byte_end":28793,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28798,"byte_end":28812,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28817,"byte_end":28824,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28829,"byte_end":28855,"line_start":92,"line_end":92,"column_start":5,"column_end":31}},{"value":"/ let foo = AsciiStr::from_ascii(\"foo\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28860,"byte_end":28902,"line_start":93,"line_end":93,"column_start":5,"column_end":47}},{"value":"/ let err = AsciiStr::from_ascii(\"Ŋ\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28907,"byte_end":28948,"line_start":94,"line_end":94,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(foo.unwrap().as_str(), \"foo\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":28953,"byte_end":28998,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(err.unwrap_err().valid_up_to(), 0);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29003,"byte_end":29053,"line_start":96,"line_end":96,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29058,"byte_end":29065,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29070,"byte_end":29079,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29604,"byte_end":29624,"line_start":116,"line_end":116,"column_start":19,"column_end":39},"name":"from_ascii_unchecked","qualname":"<AsciiStr>::from_ascii_unchecked","value":"pub unsafe fn from_ascii_unchecked<B: ?Sized>(&B) -> &AsciiStr where\nB: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Converts anything that can be represented as a byte slice to an `AsciiStr` without checking\n for non-ASCII characters..","sig":null,"attributes":[{"value":"/ Converts anything that can be represented as a byte slice to an `AsciiStr` without checking","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29251,"byte_end":29346,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/ for non-ASCII characters..","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29351,"byte_end":29381,"line_start":107,"line_end":107,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29386,"byte_end":29389,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29394,"byte_end":29408,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29413,"byte_end":29420,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29425,"byte_end":29451,"line_start":111,"line_end":111,"column_start":5,"column_end":31}},{"value":"/ let foo = unsafe{ AsciiStr::from_ascii_unchecked(\"foo\") };","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29456,"byte_end":29518,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(foo.as_str(), \"foo\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29523,"byte_end":29559,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29564,"byte_end":29571,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29576,"byte_end":29585,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30021,"byte_end":30024,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"len","qualname":"<AsciiStr>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of characters / bytes in this ASCII sequence.","sig":null,"attributes":[{"value":"/ Returns the number of characters / bytes in this ASCII sequence.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29759,"byte_end":29827,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29832,"byte_end":29835,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29840,"byte_end":29854,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29859,"byte_end":29866,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29871,"byte_end":29897,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ let s = AsciiStr::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29902,"byte_end":29951,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(s.len(), 3);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29956,"byte_end":29983,"line_start":129,"line_end":129,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":29988,"byte_end":29995,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30000,"byte_end":30009,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30433,"byte_end":30441,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<AsciiStr>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the ASCII slice contains zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the ASCII slice contains zero bytes.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30079,"byte_end":30135,"line_start":136,"line_end":136,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30140,"byte_end":30143,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30148,"byte_end":30162,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30167,"byte_end":30174,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30179,"byte_end":30205,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/ let mut empty = AsciiStr::from_ascii(\"\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30210,"byte_end":30264,"line_start":141,"line_end":141,"column_start":5,"column_end":59}},{"value":"/ let mut full = AsciiStr::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30269,"byte_end":30325,"line_start":142,"line_end":142,"column_start":5,"column_end":61}},{"value":"/ assert!(empty.is_empty());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30330,"byte_end":30360,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/ assert!(!full.is_empty());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30365,"byte_end":30395,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30400,"byte_end":30407,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30412,"byte_end":30421,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30582,"byte_end":30587,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"chars","qualname":"<AsciiStr>::chars","value":"pub fn chars(&Self) -> Chars","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the characters of the `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the characters of the `AsciiStr`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30494,"byte_end":30556,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30561,"byte_end":30570,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30796,"byte_end":30805,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"chars_mut","qualname":"<AsciiStr>::chars_mut","value":"pub fn chars_mut(&mut Self) -> CharsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the characters of the `AsciiStr` which allows you to modify the\n value of each `AsciiChar`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the characters of the `AsciiStr` which allows you to modify the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30643,"byte_end":30735,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ value of each `AsciiChar`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30740,"byte_end":30770,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30775,"byte_end":30784,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31290,"byte_end":31295,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"split","qualname":"<AsciiStr>::split","value":"pub fn split(&Self, AsciiChar) -> Split","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over parts of the `AsciiStr` separated by a character.","sig":null,"attributes":[{"value":"/ Returns an iterator over parts of the `AsciiStr` separated by a character.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30872,"byte_end":30950,"line_start":164,"line_end":164,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30955,"byte_end":30958,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30963,"byte_end":30977,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30982,"byte_end":30989,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{AsciiStr, AsciiChar};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":30994,"byte_end":31033,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ let words = AsciiStr::from_ascii(\"apple banana lemon\").unwrap()","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31038,"byte_end":31105,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/     .split(AsciiChar::Space)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31110,"byte_end":31142,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/     .map(|a| a.as_str())","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31147,"byte_end":31175,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31180,"byte_end":31209,"line_start":172,"line_end":172,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(words, [\"apple\", \"banana\", \"lemon\"]);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31214,"byte_end":31266,"line_start":173,"line_end":173,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31271,"byte_end":31278,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31723,"byte_end":31728,"line_start":189,"line_end":189,"column_start":12,"column_end":17},"name":"lines","qualname":"<AsciiStr>::lines","value":"pub fn lines(&Self) -> Lines","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the lines of the `AsciiStr`, which are themselves `AsciiStr`s.","sig":null,"attributes":[{"value":"/ Returns an iterator over the lines of the `AsciiStr`, which are themselves `AsciiStr`s.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31446,"byte_end":31537,"line_start":183,"line_end":183,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31542,"byte_end":31545,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Lines are ended with either `LineFeed` (`\\n`), or `CarriageReturn` then `LineFeed` (`\\r\\n`).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31550,"byte_end":31646,"line_start":185,"line_end":185,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31651,"byte_end":31654,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The final line ending is optional.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31659,"byte_end":31697,"line_start":187,"line_end":187,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31702,"byte_end":31711,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32114,"byte_end":32118,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"trim","qualname":"<AsciiStr>::trim","value":"pub fn trim(&Self) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an ASCII string slice with leading and trailing whitespace removed.","sig":null,"attributes":[{"value":"/ Returns an ASCII string slice with leading and trailing whitespace removed.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31810,"byte_end":31889,"line_start":195,"line_end":195,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31894,"byte_end":31897,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31902,"byte_end":31916,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31921,"byte_end":31928,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31933,"byte_end":31959,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/ let example = AsciiStr::from_ascii(\"  \\twhite \\tspace  \\t\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":31964,"byte_end":32037,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(\"white \\tspace\", example.trim());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32042,"byte_end":32090,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32095,"byte_end":32102,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32486,"byte_end":32495,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"trim_left","qualname":"<AsciiStr>::trim_left","value":"pub fn trim_left(&Self) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an ASCII string slice with leading whitespace removed.","sig":null,"attributes":[{"value":"/ Returns an ASCII string slice with leading whitespace removed.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32186,"byte_end":32252,"line_start":207,"line_end":207,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32257,"byte_end":32260,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32265,"byte_end":32279,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32284,"byte_end":32291,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32296,"byte_end":32322,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ let example = AsciiStr::from_ascii(\"  \\twhite \\tspace  \\t\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32327,"byte_end":32400,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(\"white \\tspace  \\t\", example.trim_left());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32405,"byte_end":32462,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32467,"byte_end":32474,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32899,"byte_end":32909,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"trim_right","qualname":"<AsciiStr>::trim_right","value":"pub fn trim_right(&Self) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an ASCII string slice with trailing whitespace removed.","sig":null,"attributes":[{"value":"/ Returns an ASCII string slice with trailing whitespace removed.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32597,"byte_end":32664,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32669,"byte_end":32672,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32677,"byte_end":32691,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32696,"byte_end":32703,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32708,"byte_end":32734,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/ let example = AsciiStr::from_ascii(\"  \\twhite \\tspace  \\t\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32739,"byte_end":32812,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(\"  \\twhite \\tspace\", example.trim_right());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32817,"byte_end":32875,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":32880,"byte_end":32887,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33156,"byte_end":33176,"line_start":236,"line_end":236,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<AsciiStr>::eq_ignore_ascii_case","value":"pub fn eq_ignore_ascii_case(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares two strings case-insensitively.\n","sig":null,"attributes":[{"value":"/ Compares two strings case-insensitively.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33100,"byte_end":33144,"line_start":235,"line_end":235,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33447,"byte_end":33467,"line_start":244,"line_end":244,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<AsciiStr>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces lowercase letters with their uppercase equivalent.\n","sig":null,"attributes":[{"value":"/ Replaces lowercase letters with their uppercase equivalent.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33372,"byte_end":33435,"line_start":243,"line_end":243,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33654,"byte_end":33674,"line_start":251,"line_end":251,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<AsciiStr>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces uppercase letters with their lowercase equivalent.\n","sig":null,"attributes":[{"value":"/ Replaces uppercase letters with their lowercase equivalent.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33579,"byte_end":33642,"line_start":250,"line_end":250,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33908,"byte_end":33926,"line_start":259,"line_end":259,"column_start":12,"column_end":30},"name":"to_ascii_uppercase","qualname":"<AsciiStr>::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> AsciiString","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this string where letters 'a' to 'z' are mapped to 'A' to 'Z'.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this string where letters 'a' to 'z' are mapped to 'A' to 'Z'.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33786,"byte_end":33870,"line_start":257,"line_end":257,"column_start":5,"column_end":89}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":33875,"byte_end":33896,"line_start":258,"line_end":258,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34205,"byte_end":34223,"line_start":267,"line_end":267,"column_start":12,"column_end":30},"name":"to_ascii_lowercase","qualname":"<AsciiStr>::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> AsciiString","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this string where letters 'A' to 'Z' are mapped to 'a' to 'z'.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this string where letters 'A' to 'Z' are mapped to 'a' to 'z'.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34083,"byte_end":34167,"line_start":265,"line_end":265,"column_start":5,"column_end":89}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34172,"byte_end":34193,"line_start":266,"line_end":266,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34465,"byte_end":34470,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"first","qualname":"<AsciiStr>::first","value":"pub fn first(&Self) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first character if the string is not empty.\n","sig":null,"attributes":[{"value":"/ Returns the first character if the string is not empty.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34380,"byte_end":34439,"line_start":273,"line_end":273,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34444,"byte_end":34453,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34632,"byte_end":34636,"line_start":281,"line_end":281,"column_start":12,"column_end":16},"name":"last","qualname":"<AsciiStr>::last","value":"pub fn last(&Self) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last character if the string is not empty.\n","sig":null,"attributes":[{"value":"/ Returns the last character if the string is not empty.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34548,"byte_end":34606,"line_start":279,"line_end":279,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":34611,"byte_end":34620,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":238},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":40651,"byte_end":40656,"line_start":539,"line_end":539,"column_start":10,"column_end":15},"name":"Chars","qualname":"::ascii_str::Chars","value":"Iter","parent":null,"children":[],"decl_id":null,"docs":" An immutable iterator over the characters of an `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ An immutable iterator over the characters of an `AsciiStr`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":40578,"byte_end":40641,"line_start":538,"line_end":538,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":40755,"byte_end":40763,"line_start":542,"line_end":542,"column_start":10,"column_end":18},"name":"CharsMut","qualname":"::ascii_str::CharsMut","value":"IterMut","parent":null,"children":[],"decl_id":null,"docs":" A mutable iterator over the characters of an `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over the characters of an `AsciiStr`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":40685,"byte_end":40745,"line_start":541,"line_end":541,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1100},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":40995,"byte_end":41000,"line_start":548,"line_end":548,"column_start":12,"column_end":17},"name":"Split","qualname":"::ascii_str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104}],"decl_id":null,"docs":" An iterator over parts of an `AsciiStr` separated by an `AsciiChar`.","sig":null,"attributes":[{"value":"/ An iterator over parts of an `AsciiStr` separated by an `AsciiChar`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":40795,"byte_end":40867,"line_start":544,"line_end":544,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":40868,"byte_end":40871,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ This type is created by [`AsciiChar::split()`](struct.AsciiChar.html#method.split).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":40872,"byte_end":40959,"line_start":546,"line_end":546,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1111},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":42148,"byte_end":42153,"line_start":590,"line_end":590,"column_start":12,"column_end":17},"name":"Lines","qualname":"::ascii_str::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":1113}],"decl_id":null,"docs":" An iterator over the lines of the internal character array.\n","sig":null,"attributes":[{"value":"/ An iterator over the lines of the internal character array.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":42049,"byte_end":42112,"line_start":588,"line_end":588,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43772,"byte_end":43787,"line_start":643,"line_end":643,"column_start":12,"column_end":27},"name":"AsAsciiStrError","qualname":"::ascii_str::AsAsciiStrError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error that is returned when a sequence of `u8` are not all ASCII.","sig":null,"attributes":[{"value":"/ Error that is returned when a sequence of `u8` are not all ASCII.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43548,"byte_end":43617,"line_start":639,"line_end":639,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43618,"byte_end":43621,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ Is used by `As[Mut]AsciiStr` and the `from_ascii` method on `AsciiStr` and `AsciiString`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43622,"byte_end":43715,"line_start":641,"line_end":641,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44072,"byte_end":44083,"line_start":652,"line_end":652,"column_start":12,"column_end":23},"name":"valid_up_to","qualname":"<AsAsciiStrError>::valid_up_to","value":"pub fn valid_up_to(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first non-ASCII byte.","sig":null,"attributes":[{"value":"/ Returns the index of the first non-ASCII byte.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43895,"byte_end":43945,"line_start":648,"line_end":648,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43950,"byte_end":43953,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ It is the maximum index such that `from_ascii(input[..index])` would return `Ok(_)`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43958,"byte_end":44046,"line_start":650,"line_end":650,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44051,"byte_end":44060,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":266},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44705,"byte_end":44715,"line_start":676,"line_end":676,"column_start":11,"column_end":21},"name":"AsAsciiStr","qualname":"::ascii_str::AsAsciiStr","value":"AsAsciiStr","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"decl_id":null,"docs":" Convert slices of bytes to `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ Convert slices of bytes to `AsciiStr`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44652,"byte_end":44694,"line_start":675,"line_end":675,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44809,"byte_end":44831,"line_start":678,"line_end":678,"column_start":15,"column_end":37},"name":"as_ascii_str_unchecked","qualname":"::ascii_str::AsAsciiStr::as_ascii_str_unchecked","value":"pub unsafe fn as_ascii_str_unchecked(&Self) -> &AsciiStr","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Convert to an ASCII slice without checking for non-ASCII characters.\n","sig":null,"attributes":[{"value":"/ Convert to an ASCII slice without checking for non-ASCII characters.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44722,"byte_end":44794,"line_start":677,"line_end":677,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44895,"byte_end":44907,"line_start":680,"line_end":680,"column_start":8,"column_end":20},"name":"as_ascii_str","qualname":"::ascii_str::AsAsciiStr::as_ascii_str","value":"pub fn as_ascii_str(&Self) -> Result<&AsciiStr, AsAsciiStrError>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Convert to an ASCII slice.\n","sig":null,"attributes":[{"value":"/ Convert to an ASCII slice.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44857,"byte_end":44887,"line_start":679,"line_end":679,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":269},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":45018,"byte_end":45031,"line_start":684,"line_end":684,"column_start":11,"column_end":24},"name":"AsMutAsciiStr","qualname":"::ascii_str::AsMutAsciiStr","value":"AsMutAsciiStr","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" Convert mutable slices of bytes to `AsciiStr`.\n","sig":null,"attributes":[{"value":"/ Convert mutable slices of bytes to `AsciiStr`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44957,"byte_end":45007,"line_start":683,"line_end":683,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":45132,"byte_end":45158,"line_start":686,"line_end":686,"column_start":15,"column_end":41},"name":"as_mut_ascii_str_unchecked","qualname":"::ascii_str::AsMutAsciiStr::as_mut_ascii_str_unchecked","value":"pub unsafe fn as_mut_ascii_str_unchecked(&mut Self) -> &mut AsciiStr","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Convert to a mutable ASCII slice without checking for non-ASCII characters.\n","sig":null,"attributes":[{"value":"/ Convert to a mutable ASCII slice without checking for non-ASCII characters.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":45038,"byte_end":45117,"line_start":685,"line_end":685,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":45237,"byte_end":45253,"line_start":688,"line_end":688,"column_start":8,"column_end":24},"name":"as_mut_ascii_str","qualname":"::ascii_str::AsMutAsciiStr::as_mut_ascii_str","value":"pub fn as_mut_ascii_str(&mut Self) -> Result<&mut AsciiStr, AsAsciiStrError>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Convert to a mutable ASCII slice.\n","sig":null,"attributes":[{"value":"/ Convert to a mutable ASCII slice.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":45192,"byte_end":45229,"line_start":687,"line_end":687,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1135},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60256,"byte_end":60267,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"AsciiString","qualname":"::ascii_string::AsciiString","value":"AsciiString {  }","parent":null,"children":[{"krate":0,"index":1136}],"decl_id":null,"docs":" A growable string stored as an ASCII encoded buffer.\n","sig":null,"attributes":[{"value":"/ A growable string stored as an ASCII encoded buffer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60124,"byte_end":60180,"line_start":18,"line_end":18,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60536,"byte_end":60539,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<AsciiString>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty ASCII string buffer without allocating.","sig":null,"attributes":[{"value":"/ Creates a new, empty ASCII string buffer without allocating.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60321,"byte_end":60385,"line_start":25,"line_end":25,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60390,"byte_end":60393,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60398,"byte_end":60412,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60417,"byte_end":60424,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60429,"byte_end":60458,"line_start":29,"line_end":29,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::new();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60463,"byte_end":60498,"line_start":30,"line_end":30,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60503,"byte_end":60510,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60515,"byte_end":60524,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60979,"byte_end":60992,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<AsciiString>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ASCII string buffer with the given capacity.\n The string will be able to hold exactly `capacity` bytes without reallocating.\n If `capacity` is 0, the ASCII string will not allocate.","sig":null,"attributes":[{"value":"/ Creates a new ASCII string buffer with the given capacity.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60603,"byte_end":60665,"line_start":37,"line_end":37,"column_start":5,"column_end":67}},{"value":"/ The string will be able to hold exactly `capacity` bytes without reallocating.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60670,"byte_end":60752,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ If `capacity` is 0, the ASCII string will not allocate.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60757,"byte_end":60816,"line_start":39,"line_end":39,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60821,"byte_end":60824,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60829,"byte_end":60843,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60848,"byte_end":60855,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60860,"byte_end":60889,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::with_capacity(10);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60894,"byte_end":60941,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60946,"byte_end":60953,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60958,"byte_end":60967,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62202,"byte_end":62216,"line_start":86,"line_end":86,"column_start":19,"column_end":33},"name":"from_raw_parts","qualname":"<AsciiString>::from_raw_parts","value":"pub unsafe fn from_raw_parts(*mut AsciiChar, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AsciiString` from a length, capacity and pointer.","sig":null,"attributes":[{"value":"/ Creates a new `AsciiString` from a length, capacity and pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61089,"byte_end":61157,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61162,"byte_end":61165,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61170,"byte_end":61182,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61187,"byte_end":61190,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This is highly unsafe, due to the number of invariants that aren't checked:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61195,"byte_end":61274,"line_start":55,"line_end":55,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61279,"byte_end":61282,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ * The memory at `ptr` need to have been previously allocated by the same allocator this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61287,"byte_end":61378,"line_start":57,"line_end":57,"column_start":5,"column_end":96}},{"value":"/   library uses.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61383,"byte_end":61402,"line_start":58,"line_end":58,"column_start":5,"column_end":24}},{"value":"/ * `length` needs to be less than or equal to `capacity`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61407,"byte_end":61467,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/ * `capacity` needs to be the correct value.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61472,"byte_end":61519,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61524,"byte_end":61527,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Violating these may cause problems like corrupting the allocator's internal datastructures.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61532,"byte_end":61627,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61632,"byte_end":61635,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61640,"byte_end":61654,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61659,"byte_end":61662,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61667,"byte_end":61683,"line_start":66,"line_end":66,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61688,"byte_end":61691,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61696,"byte_end":61703,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61708,"byte_end":61737,"line_start":69,"line_end":69,"column_start":5,"column_end":34}},{"value":"/ use std::mem;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61742,"byte_end":61759,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61764,"byte_end":61767,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61772,"byte_end":61784,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/    let s = AsciiString::from_ascii(\"hello\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61789,"byte_end":61846,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/    let ptr = s.as_ptr();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61851,"byte_end":61879,"line_start":74,"line_end":74,"column_start":5,"column_end":33}},{"value":"/    let len = s.len();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61884,"byte_end":61909,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/    let capacity = s.capacity();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61914,"byte_end":61949,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61954,"byte_end":61957,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/    mem::forget(s);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61962,"byte_end":61984,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61989,"byte_end":61992,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/    let s = AsciiString::from_raw_parts(ptr as *mut _, len, capacity);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":61997,"byte_end":62070,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62075,"byte_end":62078,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(AsciiString::from_ascii(\"hello\").unwrap(), s);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62083,"byte_end":62147,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62152,"byte_end":62157,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62162,"byte_end":62169,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62174,"byte_end":62183,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62829,"byte_end":62849,"line_start":98,"line_end":98,"column_start":19,"column_end":39},"name":"from_ascii_unchecked","qualname":"<AsciiString>::from_ascii_unchecked","value":"pub unsafe fn from_ascii_unchecked<B>(B) -> Self where B: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes to an `AsciiString` without checking for non-ASCII characters.","sig":null,"attributes":[{"value":"/ Converts a vector of bytes to an `AsciiString` without checking for non-ASCII characters.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62363,"byte_end":62456,"line_start":90,"line_end":90,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62461,"byte_end":62464,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62469,"byte_end":62481,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/ This function is unsafe because it does not check that the bytes passed to it are valid","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62486,"byte_end":62577,"line_start":93,"line_end":93,"column_start":5,"column_end":96}},{"value":"/ ASCII characters. If this constraint is violated, it may cause memory unsafety issues with","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62582,"byte_end":62676,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ future of the `AsciiString`, as the rest of this library assumes that `AsciiString`s are","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62681,"byte_end":62773,"line_start":95,"line_end":95,"column_start":5,"column_end":97}},{"value":"/ ASCII encoded.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62778,"byte_end":62796,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":62801,"byte_end":62810,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63687,"byte_end":63697,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<AsciiString>::from_ascii","value":"pub fn from_ascii<B>(B) -> Result<AsciiString, FromAsciiError<B>> where\nB: Into<Vec<u8>> + AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Converts anything that can represent a byte buffer into an `AsciiString`.","sig":null,"attributes":[{"value":"/ Converts anything that can represent a byte buffer into an `AsciiString`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63178,"byte_end":63255,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63260,"byte_end":63263,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63268,"byte_end":63281,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ Returns the byte buffer if not all of the bytes are ASCII characters.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63286,"byte_end":63359,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63364,"byte_end":63367,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63372,"byte_end":63386,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63391,"byte_end":63398,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63403,"byte_end":63432,"line_start":119,"line_end":119,"column_start":5,"column_end":34}},{"value":"/ let foo = AsciiString::from_ascii(\"foo\".to_string()).unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63437,"byte_end":63503,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ let err = AsciiString::from_ascii(\"Ŋ\".to_string()).unwrap_err();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63508,"byte_end":63577,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(foo.as_str(), \"foo\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63582,"byte_end":63618,"line_start":122,"line_end":122,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(err.into_source(), \"Ŋ\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63623,"byte_end":63663,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":63668,"byte_end":63675,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64500,"byte_end":64508,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"push_str","qualname":"<AsciiString>::push_str","value":"pub fn push_str(&mut Self, &AsciiStr)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given ASCII string onto this ASCII string buffer.","sig":null,"attributes":[{"value":"/ Pushes the given ASCII string onto this ASCII string buffer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64113,"byte_end":64177,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64182,"byte_end":64185,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64190,"byte_end":64204,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64209,"byte_end":64216,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{AsciiString, AsAsciiStr};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64221,"byte_end":64264,"line_start":144,"line_end":144,"column_start":5,"column_end":48}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64269,"byte_end":64295,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/ let mut s = AsciiString::from_str(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64300,"byte_end":64354,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"/ s.push_str(\"bar\".as_ascii_str().unwrap());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64359,"byte_end":64405,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(s, \"foobar\".as_ascii_str().unwrap());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64410,"byte_end":64462,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64467,"byte_end":64474,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64479,"byte_end":64488,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64875,"byte_end":64883,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AsciiString>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that this ASCII string buffer can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that this ASCII string buffer can hold without reallocating.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64592,"byte_end":64684,"line_start":155,"line_end":155,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64689,"byte_end":64692,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64697,"byte_end":64711,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64716,"byte_end":64723,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64728,"byte_end":64757,"line_start":159,"line_end":159,"column_start":5,"column_end":34}},{"value":"/ let s = String::with_capacity(10);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64762,"byte_end":64800,"line_start":160,"line_end":160,"column_start":5,"column_end":43}},{"value":"/ assert!(s.capacity() >= 10);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64805,"byte_end":64837,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64842,"byte_end":64849,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64854,"byte_end":64863,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65411,"byte_end":65418,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"reserve","qualname":"<AsciiString>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted in the given\n `AsciiString`. The collection may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted in the given","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":64941,"byte_end":65027,"line_start":168,"line_end":168,"column_start":5,"column_end":91}},{"value":"/ `AsciiString`. The collection may reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65032,"byte_end":65121,"line_start":169,"line_end":169,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65126,"byte_end":65129,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65134,"byte_end":65146,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65151,"byte_end":65200,"line_start":172,"line_end":172,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65205,"byte_end":65208,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65213,"byte_end":65227,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65232,"byte_end":65239,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65244,"byte_end":65273,"line_start":176,"line_end":176,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::new();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65278,"byte_end":65313,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"/ s.reserve(10);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65318,"byte_end":65336,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/ assert!(s.capacity() >= 10);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65341,"byte_end":65373,"line_start":179,"line_end":179,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65378,"byte_end":65385,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65390,"byte_end":65399,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66195,"byte_end":66208,"line_start":204,"line_end":204,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<AsciiString>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more bytes to be inserted in the\n given `AsciiString`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more bytes to be inserted in the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65499,"byte_end":65590,"line_start":186,"line_end":186,"column_start":5,"column_end":96}},{"value":"/ given `AsciiString`. Does nothing if the capacity is already sufficient.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65595,"byte_end":65671,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65676,"byte_end":65679,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give the collection more space than it requests. Therefore","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65684,"byte_end":65774,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/ capacity can not be relied upon to be precisely minimal. Prefer `reserve` if future","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65779,"byte_end":65866,"line_start":190,"line_end":190,"column_start":5,"column_end":92}},{"value":"/ insertions are expected.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65871,"byte_end":65899,"line_start":191,"line_end":191,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65904,"byte_end":65907,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65912,"byte_end":65924,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65929,"byte_end":65978,"line_start":194,"line_end":194,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65983,"byte_end":65986,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":65991,"byte_end":66005,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66010,"byte_end":66017,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66022,"byte_end":66051,"line_start":198,"line_end":198,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::new();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66056,"byte_end":66091,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ s.reserve_exact(10);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66096,"byte_end":66120,"line_start":200,"line_end":200,"column_start":5,"column_end":29}},{"value":"/ assert!(s.capacity() >= 10);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66125,"byte_end":66157,"line_start":201,"line_end":201,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66162,"byte_end":66169,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66174,"byte_end":66183,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66696,"byte_end":66709,"line_start":221,"line_end":221,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<AsciiString>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of this ASCII string buffer to match it's length.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of this ASCII string buffer to match it's length.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66295,"byte_end":66369,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66374,"byte_end":66377,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66382,"byte_end":66396,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66401,"byte_end":66408,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66413,"byte_end":66442,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66447,"byte_end":66473,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/ let mut s = AsciiString::from_str(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66478,"byte_end":66532,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/ s.reserve(100);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66537,"byte_end":66556,"line_start":215,"line_end":215,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66561,"byte_end":66594,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66599,"byte_end":66621,"line_start":217,"line_end":217,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(s.capacity(), 3);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66626,"byte_end":66658,"line_start":218,"line_end":218,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66663,"byte_end":66670,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66675,"byte_end":66684,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67193,"byte_end":67197,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"push","qualname":"<AsciiString>::push","value":"pub fn push(&mut Self, AsciiChar)","parent":null,"children":[],"decl_id":null,"docs":" Adds the given ASCII character to the end of the ASCII string.","sig":null,"attributes":[{"value":"/ Adds the given ASCII character to the end of the ASCII string.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66767,"byte_end":66833,"line_start":225,"line_end":225,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66838,"byte_end":66841,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66846,"byte_end":66860,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66865,"byte_end":66872,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{ AsciiChar, AsciiString};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66877,"byte_end":66920,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/ let mut s = AsciiString::from_ascii(\"abc\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66925,"byte_end":66981,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ s.push(AsciiChar::from('1').unwrap());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":66986,"byte_end":67028,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/ s.push(AsciiChar::from('2').unwrap());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67033,"byte_end":67075,"line_start":232,"line_end":232,"column_start":5,"column_end":47}},{"value":"/ s.push(AsciiChar::from('3').unwrap());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67080,"byte_end":67122,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(s, \"abc123\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67127,"byte_end":67155,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67160,"byte_end":67167,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67172,"byte_end":67181,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67612,"byte_end":67620,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"truncate","qualname":"<AsciiString>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens a ASCII string to the specified length.","sig":null,"attributes":[{"value":"/ Shortens a ASCII string to the specified length.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67263,"byte_end":67315,"line_start":241,"line_end":241,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67320,"byte_end":67323,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67328,"byte_end":67340,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/ Panics if `new_len` > current length.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67345,"byte_end":67386,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67391,"byte_end":67394,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67399,"byte_end":67413,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67418,"byte_end":67425,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67430,"byte_end":67459,"line_start":248,"line_end":248,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::from_ascii(\"hello\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67464,"byte_end":67522,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ s.truncate(2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67527,"byte_end":67545,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(s, \"he\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67550,"byte_end":67574,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67579,"byte_end":67586,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67591,"byte_end":67600,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68216,"byte_end":68219,"line_start":271,"line_end":271,"column_start":12,"column_end":15},"name":"pop","qualname":"<AsciiString>::pop","value":"pub fn pop(&mut Self) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last character from the ASCII string buffer and returns it.\n Returns `None` if this string buffer is empty.","sig":null,"attributes":[{"value":"/ Removes the last character from the ASCII string buffer and returns it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67696,"byte_end":67771,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ Returns `None` if this string buffer is empty.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67776,"byte_end":67826,"line_start":259,"line_end":259,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67831,"byte_end":67834,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67839,"byte_end":67853,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67858,"byte_end":67865,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67870,"byte_end":67899,"line_start":263,"line_end":263,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67904,"byte_end":67960,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.pop().map(|c| c.as_char()), Some('o'));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":67965,"byte_end":68021,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.pop().map(|c| c.as_char()), Some('o'));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68026,"byte_end":68082,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.pop().map(|c| c.as_char()), Some('f'));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68087,"byte_end":68143,"line_start":267,"line_end":267,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.pop(), None);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68148,"byte_end":68178,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68183,"byte_end":68190,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68195,"byte_end":68204,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68882,"byte_end":68888,"line_start":292,"line_end":292,"column_start":12,"column_end":18},"name":"remove","qualname":"<AsciiString>::remove","value":"pub fn remove(&mut Self, usize) -> AsciiChar","parent":null,"children":[],"decl_id":null,"docs":" Removes the ASCII character at position `idx` from the buffer and returns it.","sig":null,"attributes":[{"value":"/ Removes the ASCII character at position `idx` from the buffer and returns it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68288,"byte_end":68369,"line_start":275,"line_end":275,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68374,"byte_end":68377,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68382,"byte_end":68395,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/ This is an O(n) operation as it requires copying every element in the buffer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68400,"byte_end":68481,"line_start":278,"line_end":278,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68486,"byte_end":68489,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68494,"byte_end":68506,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/ If `idx` is out of bounds this function will panic.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68511,"byte_end":68566,"line_start":281,"line_end":281,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68571,"byte_end":68574,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68579,"byte_end":68593,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68598,"byte_end":68605,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68610,"byte_end":68639,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68644,"byte_end":68700,"line_start":286,"line_end":286,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(s.remove(0).as_char(), 'f');","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68705,"byte_end":68748,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(s.remove(1).as_char(), 'o');","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68753,"byte_end":68796,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(s.remove(0).as_char(), 'o');","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68801,"byte_end":68844,"line_start":289,"line_end":289,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68849,"byte_end":68856,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68861,"byte_end":68870,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69479,"byte_end":69485,"line_start":312,"line_end":312,"column_start":12,"column_end":18},"name":"insert","qualname":"<AsciiString>::insert","value":"pub fn insert(&mut Self, usize, AsciiChar)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ASCII character into the buffer at position `idx`.","sig":null,"attributes":[{"value":"/ Inserts an ASCII character into the buffer at position `idx`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":68967,"byte_end":69032,"line_start":296,"line_end":296,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69037,"byte_end":69040,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69045,"byte_end":69058,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/ This is an O(n) operation as it requires copying every element in the buffer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69063,"byte_end":69144,"line_start":299,"line_end":299,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69149,"byte_end":69152,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69157,"byte_end":69169,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/ If `idx` is out of bounds this function will panic.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69174,"byte_end":69229,"line_start":302,"line_end":302,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69234,"byte_end":69237,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69242,"byte_end":69256,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69261,"byte_end":69268,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{AsciiString,AsciiChar};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69273,"byte_end":69314,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/ let mut s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69319,"byte_end":69375,"line_start":307,"line_end":307,"column_start":5,"column_end":61}},{"value":"/ s.insert(2, AsciiChar::b);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69380,"byte_end":69410,"line_start":308,"line_end":308,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(s, \"fobo\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69415,"byte_end":69441,"line_start":309,"line_end":309,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69446,"byte_end":69453,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69458,"byte_end":69467,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69823,"byte_end":69826,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"len","qualname":"<AsciiString>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in this ASCII string.","sig":null,"attributes":[{"value":"/ Returns the number of bytes in this ASCII string.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69570,"byte_end":69623,"line_start":316,"line_end":316,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69628,"byte_end":69631,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69636,"byte_end":69650,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69655,"byte_end":69662,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69667,"byte_end":69696,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ let s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69701,"byte_end":69753,"line_start":321,"line_end":321,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(s.len(), 3);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69758,"byte_end":69785,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69790,"byte_end":69797,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69802,"byte_end":69811,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70210,"byte_end":70218,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<AsciiString>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the ASCII string contains zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the ASCII string contains zero bytes.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69879,"byte_end":69936,"line_start":329,"line_end":329,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69941,"byte_end":69944,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69949,"byte_end":69963,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69968,"byte_end":69975,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # use ascii::{AsciiChar, AsciiString};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":69980,"byte_end":70022,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/ let mut s = AsciiString::new();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70027,"byte_end":70062,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70067,"byte_end":70093,"line_start":335,"line_end":335,"column_start":5,"column_end":31}},{"value":"/ s.push(AsciiChar::from('a').unwrap());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70098,"byte_end":70140,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/ assert!(!s.is_empty());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70145,"byte_end":70172,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70177,"byte_end":70184,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70189,"byte_end":70198,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70567,"byte_end":70572,"line_start":354,"line_end":354,"column_start":12,"column_end":17},"name":"clear","qualname":"<AsciiString>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Truncates the ASCII string, setting length (but not capacity) to zero.","sig":null,"attributes":[{"value":"/ Truncates the ASCII string, setting length (but not capacity) to zero.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70271,"byte_end":70345,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70350,"byte_end":70353,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70358,"byte_end":70372,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70377,"byte_end":70384,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # use ascii::AsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70389,"byte_end":70418,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut s = AsciiString::from_ascii(\"foo\").unwrap();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70423,"byte_end":70479,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ s.clear();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70484,"byte_end":70498,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70503,"byte_end":70529,"line_start":351,"line_end":351,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70534,"byte_end":70541,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70546,"byte_end":70555,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78671,"byte_end":78685,"line_start":688,"line_end":688,"column_start":12,"column_end":26},"name":"FromAsciiError","qualname":"::ascii_string::FromAsciiError","value":"FromAsciiError {  }","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" A possible error value when converting an `AsciiString` from a byte vector or string.\n It wraps an `AsAsciiStrError` which you can get through the `ascii_error()` method.","sig":null,"attributes":[{"value":"/ A possible error value when converting an `AsciiString` from a byte vector or string.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77973,"byte_end":78062,"line_start":673,"line_end":673,"column_start":1,"column_end":90}},{"value":"/ It wraps an `AsAsciiStrError` which you can get through the `ascii_error()` method.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78063,"byte_end":78150,"line_start":674,"line_end":674,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78151,"byte_end":78154,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ This is the error type for `AsciiString::from_ascii()` and","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78155,"byte_end":78217,"line_start":676,"line_end":676,"column_start":1,"column_end":63}},{"value":"/ `IntoAsciiString::into_ascii_string()`. They will never clone or touch the content of the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78218,"byte_end":78311,"line_start":677,"line_end":677,"column_start":1,"column_end":94}},{"value":"/ original type; It can be extracted by the `into_source` method.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78312,"byte_end":78379,"line_start":678,"line_end":678,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78380,"byte_end":78383,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ #Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78384,"byte_end":78397,"line_start":680,"line_end":680,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78398,"byte_end":78405,"line_start":681,"line_end":681,"column_start":1,"column_end":8}},{"value":"/ # use ascii::IntoAsciiString;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78406,"byte_end":78439,"line_start":682,"line_end":682,"column_start":1,"column_end":34}},{"value":"/ let err = \"bø!\".to_string().into_ascii_string().unwrap_err();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78440,"byte_end":78506,"line_start":683,"line_end":683,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(err.ascii_error().valid_up_to(), 1);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78507,"byte_end":78558,"line_start":684,"line_end":684,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(err.into_source(), \"bø!\".to_string());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78559,"byte_end":78613,"line_start":685,"line_end":685,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78614,"byte_end":78621,"line_start":686,"line_end":686,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78855,"byte_end":78866,"line_start":695,"line_end":695,"column_start":12,"column_end":23},"name":"ascii_error","qualname":"<FromAsciiError<O>>::ascii_error","value":"pub fn ascii_error(&Self) -> AsAsciiStrError","parent":null,"children":[],"decl_id":null,"docs":" Get the position of the first non-ASCII byte or character.\n","sig":null,"attributes":[{"value":"/ Get the position of the first non-ASCII byte or character.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78767,"byte_end":78829,"line_start":693,"line_end":693,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78834,"byte_end":78843,"line_start":694,"line_end":694,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78993,"byte_end":79004,"line_start":700,"line_end":700,"column_start":12,"column_end":23},"name":"into_source","qualname":"<FromAsciiError<O>>::into_source","value":"pub fn into_source(Self) -> O","parent":null,"children":[],"decl_id":null,"docs":" Get back the original, unmodified type.\n","sig":null,"attributes":[{"value":"/ Get back the original, unmodified type.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78924,"byte_end":78967,"line_start":698,"line_end":698,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78972,"byte_end":78981,"line_start":699,"line_end":699,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":518},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79701,"byte_end":79716,"line_start":729,"line_end":729,"column_start":11,"column_end":26},"name":"IntoAsciiString","qualname":"::ascii_string::IntoAsciiString","value":"IntoAsciiString: Sized","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" Convert vectors into `AsciiString`.\n","sig":null,"attributes":[{"value":"/ Convert vectors into `AsciiString`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79651,"byte_end":79690,"line_start":728,"line_end":728,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79816,"byte_end":79843,"line_start":731,"line_end":731,"column_start":15,"column_end":42},"name":"into_ascii_string_unchecked","qualname":"::ascii_string::IntoAsciiString::into_ascii_string_unchecked","value":"pub unsafe fn into_ascii_string_unchecked(Self) -> AsciiString","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":" Convert to `AsciiString` without checking for non-ASCII characters.\n","sig":null,"attributes":[{"value":"/ Convert to `AsciiString` without checking for non-ASCII characters.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79730,"byte_end":79801,"line_start":730,"line_end":730,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79907,"byte_end":79924,"line_start":733,"line_end":733,"column_start":8,"column_end":25},"name":"into_ascii_string","qualname":"::ascii_string::IntoAsciiString::into_ascii_string","value":"pub fn into_ascii_string(Self) -> Result<AsciiString, FromAsciiError<Self>>","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":" Convert to `AsciiString`.\n","sig":null,"attributes":[{"value":"/ Convert to `AsciiString`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79870,"byte_end":79899,"line_start":732,"line_end":732,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88576,"byte_end":88588,"line_start":21,"line_end":21,"column_start":8,"column_end":20},"name":"caret_encode","qualname":"::free_functions::caret_encode","value":"pub fn caret_encode<C: Copy + Into<u8>>(C) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Terminals use [caret notation](https://en.wikipedia.org/wiki/Caret_notation)\n to display some typed control codes, such as ^D for EOT and ^Z for SUB.","sig":null,"attributes":[{"value":"/ Terminals use [caret notation](https://en.wikipedia.org/wiki/Caret_notation)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":87988,"byte_end":88068,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ to display some typed control codes, such as ^D for EOT and ^Z for SUB.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88069,"byte_end":88144,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88145,"byte_end":88148,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function returns the caret notation letter for control codes,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88149,"byte_end":88219,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ or `None` for printable characters.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88220,"byte_end":88259,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88260,"byte_end":88263,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88264,"byte_end":88278,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88279,"byte_end":88286,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # use ascii::{AsciiChar, caret_encode};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88287,"byte_end":88330,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(caret_encode(b'\\0'), Some(AsciiChar::At));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88331,"byte_end":88388,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(caret_encode(AsciiChar::DEL), Some(AsciiChar::Question));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88389,"byte_end":88461,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(caret_encode(b'E'), None);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88462,"byte_end":88503,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(caret_encode(b'\\n'), Some(AsciiChar::J));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88504,"byte_end":88560,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88561,"byte_end":88568,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":561},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89657,"byte_end":89669,"line_start":56,"line_end":56,"column_start":8,"column_end":20},"name":"caret_decode","qualname":"::free_functions::caret_decode","value":"pub fn caret_decode<C: Copy + Into<u8>>(C) -> Option<AsciiChar>","parent":null,"children":[],"decl_id":null,"docs":" Returns the control code represented by a [caret notation](https://en.wikipedia.org/wiki/Caret_notation)\n letter, or `None` if the letter is not used in caret notation.","sig":null,"attributes":[{"value":"/ Returns the control code represented by a [caret notation](https://en.wikipedia.org/wiki/Caret_notation)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88880,"byte_end":88988,"line_start":33,"line_end":33,"column_start":1,"column_end":109}},{"value":"/ letter, or `None` if the letter is not used in caret notation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":88989,"byte_end":89055,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89056,"byte_end":89059,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This function is the inverse of `caret_encode()`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89060,"byte_end":89113,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89114,"byte_end":89117,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89118,"byte_end":89132,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89133,"byte_end":89136,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89137,"byte_end":89153,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89154,"byte_end":89157,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89158,"byte_end":89165,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # use ascii::{AsciiChar, caret_decode};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89166,"byte_end":89209,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(caret_decode(b'?'), Some(AsciiChar::DEL));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89210,"byte_end":89267,"line_start":44,"line_end":44,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(caret_decode(AsciiChar::D), Some(AsciiChar::EOT));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89268,"byte_end":89333,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(caret_decode(b'\\0'), None);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89334,"byte_end":89376,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89377,"byte_end":89384,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89385,"byte_end":89388,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Symmetry:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89389,"byte_end":89402,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89403,"byte_end":89406,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89407,"byte_end":89414,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use ascii::{AsciiChar, caret_encode, caret_decode};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89415,"byte_end":89472,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(caret_encode(AsciiChar::US).and_then(caret_decode), Some(AsciiChar::US));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89473,"byte_end":89561,"line_start":53,"line_end":53,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(caret_decode(b'@').and_then(caret_encode), Some(AsciiChar::At));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89562,"byte_end":89641,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/free_functions.rs","byte_start":89642,"byte_end":89649,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8108,"byte_end":8117,"line_start":291,"line_end":291,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15723,"byte_end":15732,"line_start":523,"line_end":523,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15867,"byte_end":15876,"line_start":530,"line_end":530,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":16033,"byte_end":16042,"line_start":538,"line_end":538,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":16906,"byte_end":16915,"line_start":579,"line_end":579,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18429,"byte_end":18445,"line_start":636,"line_end":636,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18583,"byte_end":18599,"line_start":642,"line_end":642,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18754,"byte_end":18770,"line_start":649,"line_end":649,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":19213,"byte_end":19222,"line_start":664,"line_end":664,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26822,"byte_end":26830,"line_start":32,"line_end":32,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35313,"byte_end":35321,"line_start":308,"line_end":308,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35470,"byte_end":35478,"line_start":317,"line_end":317,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35579,"byte_end":35587,"line_start":323,"line_end":323,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35693,"byte_end":35701,"line_start":329,"line_end":329,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35813,"byte_end":35821,"line_start":335,"line_end":335,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":36551,"byte_end":36554,"line_start":363,"line_end":363,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":37971,"byte_end":37979,"line_start":424,"line_end":424,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":38128,"byte_end":38136,"line_start":431,"line_end":431,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":38882,"byte_end":38890,"line_start":463,"line_end":463,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":39048,"byte_end":39056,"line_start":472,"line_end":472,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":39217,"byte_end":39225,"line_start":480,"line_end":480,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":41088,"byte_end":41093,"line_start":553,"line_end":553,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":41596,"byte_end":41601,"line_start":571,"line_end":571,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":42210,"byte_end":42215,"line_start":593,"line_end":593,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":42936,"byte_end":42941,"line_start":617,"line_end":617,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43873,"byte_end":43888,"line_start":647,"line_end":647,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44353,"byte_end":44368,"line_start":662,"line_end":662,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44546,"byte_end":44561,"line_start":668,"line_end":668,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":46484,"byte_end":46492,"line_start":728,"line_end":728,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":46716,"byte_end":46724,"line_start":738,"line_end":738,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":49224,"byte_end":49228,"line_start":822,"line_end":822,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60303,"byte_end":60314,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70635,"byte_end":70646,"line_start":359,"line_end":359,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70791,"byte_end":70802,"line_start":368,"line_end":368,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70940,"byte_end":70951,"line_start":375,"line_end":375,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":71865,"byte_end":71876,"line_start":413,"line_end":413,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":71982,"byte_end":71993,"line_start":420,"line_end":420,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":72115,"byte_end":72126,"line_start":427,"line_end":427,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":72251,"byte_end":72262,"line_start":434,"line_end":434,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":72732,"byte_end":72743,"line_start":451,"line_end":451,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":72871,"byte_end":72882,"line_start":458,"line_end":458,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73023,"byte_end":73034,"line_start":465,"line_end":465,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73186,"byte_end":73197,"line_start":472,"line_end":472,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73313,"byte_end":73316,"line_start":478,"line_end":478,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73465,"byte_end":73468,"line_start":484,"line_end":484,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73594,"byte_end":73605,"line_start":490,"line_end":490,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73710,"byte_end":73721,"line_start":497,"line_end":497,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73825,"byte_end":73836,"line_start":504,"line_end":504,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73938,"byte_end":73949,"line_start":511,"line_end":511,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74053,"byte_end":74064,"line_start":518,"line_end":518,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74181,"byte_end":74192,"line_start":525,"line_end":525,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74304,"byte_end":74315,"line_start":532,"line_end":532,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74505,"byte_end":74516,"line_start":540,"line_end":540,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74659,"byte_end":74670,"line_start":547,"line_end":547,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74962,"byte_end":74973,"line_start":556,"line_end":556,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":75363,"byte_end":75374,"line_start":570,"line_end":570,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":75584,"byte_end":75595,"line_start":578,"line_end":578,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":75813,"byte_end":75824,"line_start":586,"line_end":586,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":76029,"byte_end":76040,"line_start":594,"line_end":594,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":76360,"byte_end":76371,"line_start":605,"line_end":605,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":76539,"byte_end":76550,"line_start":611,"line_end":611,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":76879,"byte_end":76890,"line_start":622,"line_end":622,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77218,"byte_end":77229,"line_start":633,"line_end":633,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77423,"byte_end":77434,"line_start":643,"line_end":643,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77560,"byte_end":77571,"line_start":650,"line_end":650,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77794,"byte_end":77805,"line_start":662,"line_end":662,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78743,"byte_end":78757,"line_start":692,"line_end":692,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79068,"byte_end":79082,"line_start":704,"line_end":704,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79240,"byte_end":79254,"line_start":710,"line_end":710,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79412,"byte_end":79426,"line_start":716,"line_end":716,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":80005,"byte_end":80008,"line_start":736,"line_end":736,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":82028,"byte_end":82035,"line_start":806,"line_end":806,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":83777,"byte_end":83780,"line_start":857,"line_end":857,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":8108,"byte_end":8117,"line_start":291,"line_end":291,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15723,"byte_end":15732,"line_start":523,"line_end":523,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":15867,"byte_end":15876,"line_start":530,"line_end":530,"column_start":21,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":16033,"byte_end":16042,"line_start":538,"line_end":538,"column_start":19,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":858}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":16906,"byte_end":16915,"line_start":579,"line_end":579,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18429,"byte_end":18445,"line_start":636,"line_end":636,"column_start":21,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18583,"byte_end":18599,"line_start":642,"line_end":642,"column_start":23,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":18754,"byte_end":18770,"line_start":649,"line_end":649,"column_start":16,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1033},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_char.rs","byte_start":19213,"byte_end":19222,"line_start":664,"line_end":664,"column_start":22,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":612},"to":{"krate":0,"index":71}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":26822,"byte_end":26830,"line_start":32,"line_end":32,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35313,"byte_end":35321,"line_start":308,"line_end":308,"column_start":18,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1046},"to":{"krate":5,"index":654}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35470,"byte_end":35478,"line_start":317,"line_end":317,"column_start":22,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35579,"byte_end":35587,"line_start":323,"line_end":323,"column_start":21,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35693,"byte_end":35701,"line_start":329,"line_end":329,"column_start":29,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":35813,"byte_end":35821,"line_start":335,"line_end":335,"column_start":29,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":36551,"byte_end":36554,"line_start":363,"line_end":363,"column_start":33,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":313},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":37971,"byte_end":37979,"line_start":424,"line_end":424,"column_start":23,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":38128,"byte_end":38136,"line_start":431,"line_end":431,"column_start":21,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":38882,"byte_end":38890,"line_start":463,"line_end":463,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":3312}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":39048,"byte_end":39056,"line_start":472,"line_end":472,"column_start":26,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":3316}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":39217,"byte_end":39225,"line_start":480,"line_end":480,"column_start":19,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1046},"to":{"krate":1,"index":858}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":41088,"byte_end":41093,"line_start":553,"line_end":553,"column_start":23,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":41596,"byte_end":41601,"line_start":571,"line_end":571,"column_start":34,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":7510}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":42210,"byte_end":42215,"line_start":593,"line_end":593,"column_start":23,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1111},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":42936,"byte_end":42941,"line_start":617,"line_end":617,"column_start":34,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1111},"to":{"krate":2,"index":7510}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":43873,"byte_end":43888,"line_start":647,"line_end":647,"column_start":6,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44353,"byte_end":44368,"line_start":662,"line_end":662,"column_start":23,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":44546,"byte_end":44561,"line_start":668,"line_end":668,"column_start":16,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1120},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":46484,"byte_end":46492,"line_start":728,"line_end":728,"column_start":21,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":266}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":46716,"byte_end":46724,"line_start":738,"line_end":738,"column_start":24,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_str.rs","byte_start":49224,"byte_end":49228,"line_start":822,"line_end":822,"column_start":21,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":1,"index":10341},"to":{"krate":0,"index":266}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":60303,"byte_end":60314,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70635,"byte_end":70646,"line_start":359,"line_end":359,"column_start":16,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70791,"byte_end":70802,"line_start":368,"line_end":368,"column_start":19,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":70940,"byte_end":70951,"line_start":375,"line_end":375,"column_start":25,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":71865,"byte_end":71876,"line_start":413,"line_end":413,"column_start":27,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":71982,"byte_end":71993,"line_start":420,"line_end":420,"column_start":30,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":72115,"byte_end":72126,"line_start":427,"line_end":427,"column_start":31,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":72251,"byte_end":72262,"line_start":434,"line_end":434,"column_start":24,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":72732,"byte_end":72743,"line_start":451,"line_end":451,"column_start":33,"column_end":44},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":72871,"byte_end":72882,"line_start":458,"line_end":458,"column_start":36,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73023,"byte_end":73034,"line_start":465,"line_end":465,"column_start":23,"column_end":34},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73186,"byte_end":73197,"line_start":472,"line_end":472,"column_start":37,"column_end":48},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73313,"byte_end":73316,"line_start":478,"line_end":478,"column_start":28,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":5,"index":663},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73465,"byte_end":73468,"line_start":484,"line_end":484,"column_start":33,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":663},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73594,"byte_end":73605,"line_start":490,"line_end":490,"column_start":26,"column_end":37},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73710,"byte_end":73721,"line_start":497,"line_end":497,"column_start":29,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73825,"byte_end":73836,"line_start":504,"line_end":504,"column_start":22,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":73938,"byte_end":73949,"line_start":511,"line_end":511,"column_start":21,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74053,"byte_end":74064,"line_start":518,"line_end":518,"column_start":26,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74181,"byte_end":74192,"line_start":525,"line_end":525,"column_start":29,"column_end":40},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74304,"byte_end":74315,"line_start":532,"line_end":532,"column_start":18,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74505,"byte_end":74516,"line_start":540,"line_end":540,"column_start":23,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74659,"byte_end":74670,"line_start":547,"line_end":547,"column_start":21,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":74962,"byte_end":74973,"line_start":556,"line_end":556,"column_start":21,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":75363,"byte_end":75374,"line_start":570,"line_end":570,"column_start":34,"column_end":45},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":7462}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":75584,"byte_end":75595,"line_start":578,"line_end":578,"column_start":41,"column_end":52},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":7462}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":75813,"byte_end":75824,"line_start":586,"line_end":586,"column_start":46,"column_end":57},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":7462}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":76029,"byte_end":76040,"line_start":594,"line_end":594,"column_start":28,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":7475}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":76360,"byte_end":76371,"line_start":605,"line_end":605,"column_start":36,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":7475}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":76539,"byte_end":76550,"line_start":611,"line_end":611,"column_start":35,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":7475}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":76879,"byte_end":76890,"line_start":622,"line_end":622,"column_start":40,"column_end":51},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":7475}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77218,"byte_end":77229,"line_start":633,"line_end":633,"column_start":32,"column_end":43},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77423,"byte_end":77434,"line_start":643,"line_end":643,"column_start":38,"column_end":49},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77560,"byte_end":77571,"line_start":650,"line_end":650,"column_start":22,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":3312}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":77794,"byte_end":77805,"line_start":662,"line_end":662,"column_start":25,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1135},"to":{"krate":2,"index":3316}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":78743,"byte_end":78757,"line_start":692,"line_end":692,"column_start":9,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79068,"byte_end":79082,"line_start":704,"line_end":704,"column_start":24,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79240,"byte_end":79254,"line_start":710,"line_end":710,"column_start":26,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79412,"byte_end":79426,"line_start":716,"line_end":716,"column_start":24,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":79718,"byte_end":79723,"line_start":729,"line_end":729,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":518}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":80005,"byte_end":80008,"line_start":736,"line_end":736,"column_start":26,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":518}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":82028,"byte_end":82035,"line_start":806,"line_end":806,"column_start":26,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":1,"index":10323},"to":{"krate":0,"index":518}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/ascii-0.9.3/src/ascii_string.rs","byte_start":83777,"byte_end":83780,"line_start":857,"line_end":857,"column_start":41,"column_end":44},"kind":{"Impl":{"id":95}},"from":{"krate":5,"index":663},"to":{"krate":0,"index":518}}]}