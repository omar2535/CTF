{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2","program":"/home/omar2535/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","libsecp256k1_core","--edition=2018","/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=1538a40d8ad6f81c","-C","extra-filename=-1538a40d8ad6f81c","--out-dir","/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps","-L","dependency=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps","--extern","crunchy=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libcrunchy-3813977b7c313ce7.rmeta","--extern","digest=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libdigest-8a7e21b8ab925d62.rmeta","--extern","subtle=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libsubtle-070a06fc9a4b0f83.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/omar2535/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/liblibsecp256k1_core-1538a40d8ad6f81c.rmeta"},"prelude":{"crate_id":{"name":"libsecp256k1_core","disambiguator":[13730416284975261889,0]},"crate_root":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src","external_crates":[{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdh.rs","num":20,"id":{"name":"digest","disambiguator":[6445838421204287620,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdh.rs","num":21,"id":{"name":"generic_array","disambiguator":[514078682517342964,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdh.rs","num":22,"id":{"name":"typenum","disambiguator":[4590648545569776304,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","num":23,"id":{"name":"subtle","disambiguator":[14186164471299540026,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","num":24,"id":{"name":"crunchy","disambiguator":[18257303607405299812,0]}}],"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":0,"byte_end":1874,"line_start":1,"line_end":73,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":675,"byte_end":680,"line_start":36,"line_end":36,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":596},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":763,"byte_end":768,"line_start":41,"line_end":41,"column_start":17,"column_end":22},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":607},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":770,"byte_end":782,"line_start":41,"line_end":41,"column_start":24,"column_end":36},"alias_span":null,"name":"FieldStorage","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":770,"byte_end":782,"line_start":41,"line_end":41,"column_start":24,"column_end":36},"alias_span":null,"name":"FieldStorage","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":625},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":801,"byte_end":807,"line_start":42,"line_end":42,"column_start":17,"column_end":23},"alias_span":null,"name":"Affine","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":651},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":809,"byte_end":822,"line_start":42,"line_end":42,"column_start":25,"column_end":38},"alias_span":null,"name":"AffineStorage","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":824,"byte_end":832,"line_start":42,"line_end":42,"column_start":40,"column_end":48},"alias_span":null,"name":"Jacobian","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":834,"byte_end":842,"line_start":42,"line_end":42,"column_start":50,"column_end":58},"alias_span":null,"name":"AFFINE_G","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":844,"byte_end":851,"line_start":42,"line_end":42,"column_start":60,"column_end":67},"alias_span":null,"name":"CURVE_B","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":870,"byte_end":876,"line_start":43,"line_end":43,"column_start":17,"column_end":23},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":870,"byte_end":876,"line_start":43,"line_end":43,"column_start":17,"column_end":23},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":914,"byte_end":927,"line_start":46,"line_end":46,"column_start":29,"column_end":42},"alias_span":null,"name":"ECMultContext","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":929,"byte_end":945,"line_start":46,"line_end":46,"column_start":44,"column_end":60},"alias_span":null,"name":"ECMultGenContext","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":368},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1625,"byte_end":1644,"line_start":67,"line_end":67,"column_start":13,"column_end":32},"alias_span":null,"name":"odd_multiples_table","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1646,"byte_end":1665,"line_start":67,"line_end":67,"column_start":34,"column_end":53},"alias_span":null,"name":"ECMULT_TABLE_SIZE_A","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1667,"byte_end":1686,"line_start":67,"line_end":67,"column_start":55,"column_end":74},"alias_span":null,"name":"ECMULT_TABLE_SIZE_G","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1688,"byte_end":1696,"line_start":67,"line_end":67,"column_start":76,"column_end":84},"alias_span":null,"name":"WINDOW_A","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1698,"byte_end":1706,"line_start":67,"line_end":67,"column_start":86,"column_end":94},"alias_span":null,"name":"WINDOW_G","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1735,"byte_end":1756,"line_start":69,"line_end":69,"column_start":17,"column_end":38},"alias_span":null,"name":"globalz_set_table_gej","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1758,"byte_end":1775,"line_start":69,"line_end":69,"column_start":40,"column_end":57},"alias_span":null,"name":"set_table_gej_var","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1777,"byte_end":1792,"line_start":69,"line_end":69,"column_start":59,"column_end":74},"alias_span":null,"name":"AFFINE_INFINITY","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1794,"byte_end":1811,"line_start":69,"line_end":69,"column_start":76,"column_end":93},"alias_span":null,"name":"JACOBIAN_INFINITY","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1847,"byte_end":1854,"line_start":72,"line_end":72,"column_start":26,"column_end":33},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1856,"byte_end":1870,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"alias_span":null,"name":"SignatureArray","value":"","parent":{"krate":0,"index":546}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":0,"byte_end":1874,"line_start":1,"line_end":73,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":111},{"krate":0,"index":176},{"krate":0,"index":230},{"krate":0,"index":255},{"krate":0,"index":287},{"krate":0,"index":389},{"krate":0,"index":393},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":546}],"decl_id":null,"docs":" Core libraries for libsecp256k1.\n","sig":null,"attributes":[{"value":"/ Core libraries for libsecp256k1.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":0,"byte_end":36,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"allow(clippy :: cast_ptr_alignment, clippy :: identity_op, clippy ::\n        many_single_char_names, clippy :: needless_range_loop, clippy ::\n        suspicious_op_assign_impl, clippy :: too_many_arguments, clippy ::\n        type_complexity)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":38,"byte_end":275,"line_start":3,"line_end":11,"column_start":1,"column_end":3}},{"value":"deny(unused_import_braces, unused_imports, unused_comparisons,\n       unused_must_use, unused_variables, non_shorthand_field_patterns,\n       unreachable_code, unused_parens)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":276,"byte_end":474,"line_start":12,"line_end":21,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":596},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":2139,"byte_end":2144,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600}],"decl_id":null,"docs":" Field element for secp256k1.\n","sig":null,"attributes":[{"value":"/ Field element for secp256k1.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":2095,"byte_end":2127,"line_start":13,"line_end":13,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":2417,"byte_end":2424,"line_start":26,"line_end":26,"column_start":18,"column_end":25},"name":"new_raw","qualname":"<Field>::new_raw","value":"pub const fn new_raw(u32, u32, u32, u32, u32, u32, u32, u32, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":2775,"byte_end":2778,"line_start":45,"line_end":45,"column_start":18,"column_end":21},"name":"new","qualname":"<Field>::new","value":"pub const fn new(u32, u32, u32, u32, u32, u32, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":3520,"byte_end":3528,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Field>::from_int","value":"pub fn from_int(u32) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":4846,"byte_end":4855,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Field>::normalize","value":"pub fn normalize(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalize a field element.\n","sig":null,"attributes":[{"value":"/ Normalize a field element.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":4804,"byte_end":4834,"line_start":111,"line_end":111,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":7037,"byte_end":7051,"line_start":200,"line_end":200,"column_start":12,"column_end":26},"name":"normalize_weak","qualname":"<Field>::normalize_weak","value":"pub fn normalize_weak(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Weakly normalize a field element: reduce it magnitude to 1,\n but don't fully normalize.\n","sig":null,"attributes":[{"value":"/ Weakly normalize a field element: reduce it magnitude to 1,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":6927,"byte_end":6990,"line_start":198,"line_end":198,"column_start":5,"column_end":68}},{"value":"/ but don't fully normalize.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":6995,"byte_end":7025,"line_start":199,"line_end":199,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":8177,"byte_end":8190,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"normalize_var","qualname":"<Field>::normalize_var","value":"pub fn normalize_var(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalize a field element, without constant-time guarantee.\n","sig":null,"attributes":[{"value":"/ Normalize a field element, without constant-time guarantee.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":8102,"byte_end":8165,"line_start":243,"line_end":243,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":10596,"byte_end":10614,"line_start":336,"line_end":336,"column_start":12,"column_end":30},"name":"normalizes_to_zero","qualname":"<Field>::normalizes_to_zero","value":"pub fn normalizes_to_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element represents zero i.e. would\n normalize to a zero value. The field implementation may\n optionally normalize the input, but this should not be relied\n upon.\n","sig":null,"attributes":[{"value":"/ Verify whether a field element represents zero i.e. would","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":10375,"byte_end":10436,"line_start":332,"line_end":332,"column_start":5,"column_end":66}},{"value":"/ normalize to a zero value. The field implementation may","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":10441,"byte_end":10500,"line_start":333,"line_end":333,"column_start":5,"column_end":64}},{"value":"/ optionally normalize the input, but this should not be relied","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":10505,"byte_end":10570,"line_start":334,"line_end":334,"column_start":5,"column_end":70}},{"value":"/ upon.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":10575,"byte_end":10584,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":12236,"byte_end":12258,"line_start":404,"line_end":404,"column_start":12,"column_end":34},"name":"normalizes_to_zero_var","qualname":"<Field>::normalizes_to_zero_var","value":"pub fn normalizes_to_zero_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element represents zero i.e. would\n normalize to a zero value. The field implementation may\n optionally normalize the input, but this should not be relied\n upon.\n","sig":null,"attributes":[{"value":"/ Verify whether a field element represents zero i.e. would","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":12015,"byte_end":12076,"line_start":400,"line_end":400,"column_start":5,"column_end":66}},{"value":"/ normalize to a zero value. The field implementation may","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":12081,"byte_end":12140,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ optionally normalize the input, but this should not be relied","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":12145,"byte_end":12210,"line_start":402,"line_end":402,"column_start":5,"column_end":70}},{"value":"/ upon.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":12215,"byte_end":12224,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14020,"byte_end":14027,"line_start":487,"line_end":487,"column_start":12,"column_end":19},"name":"set_int","qualname":"<Field>::set_int","value":"pub fn set_int(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to a small integer. Resulting field\n element is normalized.\n","sig":null,"attributes":[{"value":"/ Set a field element equal to a small integer. Resulting field","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":13912,"byte_end":13977,"line_start":485,"line_end":485,"column_start":5,"column_end":70}},{"value":"/ element is normalized.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":13982,"byte_end":14008,"line_start":486,"line_end":486,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14307,"byte_end":14314,"line_start":496,"line_end":496,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Field>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element is zero. Requires the input to\n be normalized.\n","sig":null,"attributes":[{"value":"/ Verify whether a field element is zero. Requires the input to","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14207,"byte_end":14272,"line_start":494,"line_end":494,"column_start":5,"column_end":70}},{"value":"/ be normalized.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14277,"byte_end":14295,"line_start":495,"line_end":495,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14774,"byte_end":14780,"line_start":514,"line_end":514,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<Field>::is_odd","value":"pub fn is_odd(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check the \"oddness\" of a field element. Requires the input to\n be normalized.\n","sig":null,"attributes":[{"value":"/ Check the \"oddness\" of a field element. Requires the input to","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14674,"byte_end":14739,"line_start":512,"line_end":512,"column_start":5,"column_end":70}},{"value":"/ be normalized.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14744,"byte_end":14762,"line_start":513,"line_end":513,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14990,"byte_end":14995,"line_start":521,"line_end":521,"column_start":12,"column_end":17},"name":"clear","qualname":"<Field>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element equal to zero, initializing all fields.\n","sig":null,"attributes":[{"value":"/ Sets a field element equal to zero, initializing all fields.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":14914,"byte_end":14978,"line_start":520,"line_end":520,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":15281,"byte_end":15288,"line_start":530,"line_end":530,"column_start":12,"column_end":19},"name":"set_b32","qualname":"<Field>::set_b32","value":"pub fn set_b32(&mut Self, &[u8; ]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to 32-byte big endian value. If\n successful, the resulting field element is normalized.\n","sig":null,"attributes":[{"value":"/ Set a field element equal to 32-byte big endian value. If","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":15129,"byte_end":15190,"line_start":527,"line_end":527,"column_start":5,"column_end":66}},{"value":"/ successful, the resulting field element is normalized.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":15195,"byte_end":15253,"line_start":528,"line_end":528,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":15258,"byte_end":15269,"line_start":529,"line_end":529,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":17293,"byte_end":17301,"line_start":584,"line_end":584,"column_start":12,"column_end":20},"name":"fill_b32","qualname":"<Field>::fill_b32","value":"pub fn fill_b32(&Self, &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":19291,"byte_end":19294,"line_start":624,"line_end":624,"column_start":12,"column_end":15},"name":"b32","qualname":"<Field>::b32","value":"pub fn b32(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert a field element to a 32-byte big endian\n value. Requires the input to be normalized.\n","sig":null,"attributes":[{"value":"/ Convert a field element to a 32-byte big endian","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":19176,"byte_end":19227,"line_start":622,"line_end":622,"column_start":5,"column_end":56}},{"value":"/ value. Requires the input to be normalized.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":19232,"byte_end":19279,"line_start":623,"line_end":623,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":19590,"byte_end":19602,"line_start":633,"line_end":633,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Field>::neg_in_place","value":"pub fn neg_in_place(&mut Self, &Field, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to the additive inverse of\n another. Takes a maximum magnitude of the input as an\n argument. The magnitude of the output is one higher.\n","sig":null,"attributes":[{"value":"/ Set a field element equal to the additive inverse of","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":19399,"byte_end":19455,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/ another. Takes a maximum magnitude of the input as an","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":19460,"byte_end":19517,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/ argument. The magnitude of the output is one higher.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":19522,"byte_end":19578,"line_start":632,"line_end":632,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":20557,"byte_end":20560,"line_start":655,"line_end":655,"column_start":12,"column_end":15},"name":"neg","qualname":"<Field>::neg","value":"pub fn neg(&Self, u32) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Compute the additive inverse of this element. Takes the maximum\n expected magnitude of this element as an argument.\n","sig":null,"attributes":[{"value":"/ Compute the additive inverse of this element. Takes the maximum","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":20419,"byte_end":20486,"line_start":653,"line_end":653,"column_start":5,"column_end":72}},{"value":"/ expected magnitude of this element as an argument.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":20491,"byte_end":20545,"line_start":654,"line_end":654,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":20823,"byte_end":20830,"line_start":663,"line_end":663,"column_start":12,"column_end":19},"name":"mul_int","qualname":"<Field>::mul_int","value":"pub fn mul_int(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the passed field element with a small integer\n constant. Multiplies the magnitude by that small integer.\n","sig":null,"attributes":[{"value":"/ Multiplies the passed field element with a small integer","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":20685,"byte_end":20745,"line_start":661,"line_end":661,"column_start":5,"column_end":65}},{"value":"/ constant. Multiplies the magnitude by that small integer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":20750,"byte_end":20811,"line_start":662,"line_end":662,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":21294,"byte_end":21301,"line_start":682,"line_end":682,"column_start":12,"column_end":19},"name":"cmp_var","qualname":"<Field>::cmp_var","value":"pub fn cmp_var(&Self, &Field) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare two field elements. Requires both inputs to be\n normalized.\n","sig":null,"attributes":[{"value":"/ Compare two field elements. Requires both inputs to be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":21204,"byte_end":21262,"line_start":680,"line_end":680,"column_start":5,"column_end":63}},{"value":"/ normalized.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":21267,"byte_end":21282,"line_start":681,"line_end":681,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":21820,"byte_end":21826,"line_start":700,"line_end":700,"column_start":12,"column_end":18},"name":"eq_var","qualname":"<Field>::eq_var","value":"pub fn eq_var(&Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":58715,"byte_end":58727,"line_start":1431,"line_end":1431,"column_start":12,"column_end":24},"name":"mul_in_place","qualname":"<Field>::mul_in_place","value":"pub fn mul_in_place(&mut Self, &Field, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the product of two others. Requires\n the inputs' magnitudes to be at most 8. The output magnitude\n is 1 (but not guaranteed to be normalized).\n","sig":null,"attributes":[{"value":"/ Sets a field element to be the product of two others. Requires","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":58516,"byte_end":58582,"line_start":1428,"line_end":1428,"column_start":5,"column_end":71}},{"value":"/ the inputs' magnitudes to be at most 8. The output magnitude","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":58587,"byte_end":58651,"line_start":1429,"line_end":1429,"column_start":5,"column_end":69}},{"value":"/ is 1 (but not guaranteed to be normalized).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":58656,"byte_end":58703,"line_start":1430,"line_end":1430,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59249,"byte_end":59261,"line_start":1445,"line_end":1445,"column_start":12,"column_end":24},"name":"sqr_in_place","qualname":"<Field>::sqr_in_place","value":"pub fn sqr_in_place(&mut Self, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the square of another. Requires the\n input's magnitude to be at most 8. The output magnitude is 1\n (but not guaranteed to be normalized).\n","sig":null,"attributes":[{"value":"/ Sets a field element to be the square of another. Requires the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59055,"byte_end":59121,"line_start":1442,"line_end":1442,"column_start":5,"column_end":71}},{"value":"/ input's magnitude to be at most 8. The output magnitude is 1","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59126,"byte_end":59190,"line_start":1443,"line_end":1443,"column_start":5,"column_end":69}},{"value":"/ (but not guaranteed to be normalized).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59195,"byte_end":59237,"line_start":1444,"line_end":1444,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59503,"byte_end":59506,"line_start":1454,"line_end":1454,"column_start":12,"column_end":15},"name":"sqr","qualname":"<Field>::sqr","value":"pub fn sqr(&Self) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59981,"byte_end":59985,"line_start":1466,"line_end":1466,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Field>::sqrt","value":"pub fn sqrt(&Self) -> (Field, bool)","parent":null,"children":[],"decl_id":null,"docs":" If a has a square root, it is computed in r and 1 is\n returned. If a does not have a square root, the root of its\n negation is computed and 0 is returned. The input's magnitude\n can be at most 8. The output magnitude is 1 (but not\n guaranteed to be normalized). The result in r will always be a\n square itself.\n","sig":null,"attributes":[{"value":"/ If a has a square root, it is computed in r and 1 is","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59620,"byte_end":59676,"line_start":1460,"line_end":1460,"column_start":5,"column_end":61}},{"value":"/ returned. If a does not have a square root, the root of its","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59681,"byte_end":59744,"line_start":1461,"line_end":1461,"column_start":5,"column_end":68}},{"value":"/ negation is computed and 0 is returned. The input's magnitude","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59749,"byte_end":59814,"line_start":1462,"line_end":1462,"column_start":5,"column_end":70}},{"value":"/ can be at most 8. The output magnitude is 1 (but not","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59819,"byte_end":59875,"line_start":1463,"line_end":1463,"column_start":5,"column_end":61}},{"value":"/ guaranteed to be normalized). The result in r will always be a","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59880,"byte_end":59946,"line_start":1464,"line_end":1464,"column_start":5,"column_end":71}},{"value":"/ square itself.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":59951,"byte_end":59969,"line_start":1465,"line_end":1465,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":61632,"byte_end":61635,"line_start":1546,"line_end":1546,"column_start":12,"column_end":15},"name":"inv","qualname":"<Field>::inv","value":"pub fn inv(&Self) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the (modular) inverse of\n another. Requires the input's magnitude to be at most 8. The\n output magnitude is 1 (but not guaranteed to be normalized).\n","sig":null,"attributes":[{"value":"/ Sets a field element to be the (modular) inverse of","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":61427,"byte_end":61482,"line_start":1543,"line_end":1543,"column_start":5,"column_end":60}},{"value":"/ another. Requires the input's magnitude to be at most 8. The","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":61487,"byte_end":61551,"line_start":1544,"line_end":1544,"column_start":5,"column_end":69}},{"value":"/ output magnitude is 1 (but not guaranteed to be normalized).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":61556,"byte_end":61620,"line_start":1545,"line_end":1545,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":63237,"byte_end":63244,"line_start":1628,"line_end":1628,"column_start":12,"column_end":19},"name":"inv_var","qualname":"<Field>::inv_var","value":"pub fn inv_var(&Self) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Potentially faster version of secp256k1_fe_inv, without\n constant-time guarantee.\n","sig":null,"attributes":[{"value":"/ Potentially faster version of secp256k1_fe_inv, without","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":63133,"byte_end":63192,"line_start":1626,"line_end":1626,"column_start":5,"column_end":64}},{"value":"/ constant-time guarantee.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":63197,"byte_end":63225,"line_start":1627,"line_end":1627,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":63363,"byte_end":63374,"line_start":1633,"line_end":1633,"column_start":12,"column_end":23},"name":"is_quad_var","qualname":"<Field>::is_quad_var","value":"pub fn is_quad_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a field element is a quadratic residue.\n","sig":null,"attributes":[{"value":"/ Checks whether a field element is a quadratic residue.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":63293,"byte_end":63351,"line_start":1632,"line_end":1632,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":63546,"byte_end":63550,"line_start":1640,"line_end":1640,"column_start":12,"column_end":16},"name":"cmov","qualname":"<Field>::cmov","value":"pub fn cmov(&mut Self, &Field, bool)","parent":null,"children":[],"decl_id":null,"docs":" If flag is true, set *r equal to *a; otherwise leave\n it. Constant-time.\n","sig":null,"attributes":[{"value":"/ If flag is true, set *r equal to *a; otherwise leave","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":63451,"byte_end":63507,"line_start":1638,"line_end":1638,"column_start":5,"column_end":61}},{"value":"/ it. Constant-time.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":63512,"byte_end":63534,"line_start":1639,"line_end":1639,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66934,"byte_end":66946,"line_start":1773,"line_end":1773,"column_start":12,"column_end":24},"name":"FieldStorage","qualname":"::field::FieldStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact field element storage.\n","sig":null,"attributes":[{"value":"/ Compact field element storage.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66888,"byte_end":66922,"line_start":1772,"line_end":1772,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":609},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66947,"byte_end":66959,"line_start":1773,"line_end":1773,"column_start":25,"column_end":37},"name":"0","qualname":"::field::FieldStorage::0","value":"[u32; 8]","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":67105,"byte_end":67108,"line_start":1782,"line_end":1782,"column_start":18,"column_end":21},"name":"new","qualname":"<FieldStorage>::new","value":"pub const fn new(u32, u32, u32, u32, u32, u32, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":67327,"byte_end":67331,"line_start":1795,"line_end":1795,"column_start":12,"column_end":16},"name":"cmov","qualname":"<FieldStorage>::cmov","value":"pub fn cmov(&mut Self, &FieldStorage, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69392,"byte_end":69398,"line_start":5,"line_end":5,"column_start":12,"column_end":18},"name":"Affine","qualname":"::group::Affine","value":"Affine { x, y, infinity }","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"decl_id":null,"docs":" A group element of the secp256k1 curve, in affine coordinates.\n","sig":null,"attributes":[{"value":"/ A group element of the secp256k1 curve, in affine coordinates.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69314,"byte_end":69380,"line_start":4,"line_end":4,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":626},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69409,"byte_end":69410,"line_start":6,"line_end":6,"column_start":9,"column_end":10},"name":"x","qualname":"::group::Affine::x","value":"field::Field","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":627},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69427,"byte_end":69428,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::group::Affine::y","value":"field::Field","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":628},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69445,"byte_end":69453,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"name":"infinity","qualname":"::group::Affine::infinity","value":"bool","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":641},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69574,"byte_end":69582,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Jacobian","qualname":"::group::Jacobian","value":"Jacobian { x, y, z, infinity }","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" A group element of the secp256k1 curve, in jacobian coordinates.\n","sig":null,"attributes":[{"value":"/ A group element of the secp256k1 curve, in jacobian coordinates.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69494,"byte_end":69562,"line_start":12,"line_end":12,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":642},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69593,"byte_end":69594,"line_start":14,"line_end":14,"column_start":9,"column_end":10},"name":"x","qualname":"::group::Jacobian::x","value":"field::Field","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":643},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69611,"byte_end":69612,"line_start":15,"line_end":15,"column_start":9,"column_end":10},"name":"y","qualname":"::group::Jacobian::y","value":"field::Field","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":644},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69629,"byte_end":69630,"line_start":16,"line_end":16,"column_start":9,"column_end":10},"name":"z","qualname":"::group::Jacobian::z","value":"field::Field","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":645},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69647,"byte_end":69655,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"name":"infinity","qualname":"::group::Jacobian::infinity","value":"bool","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":651},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69775,"byte_end":69788,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"AffineStorage","qualname":"::group::AffineStorage","value":"AffineStorage { x, y }","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"decl_id":null,"docs":" Affine coordinate group element compact storage.\n","sig":null,"attributes":[{"value":"/ Affine coordinate group element compact storage.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69711,"byte_end":69763,"line_start":21,"line_end":21,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":652},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69799,"byte_end":69800,"line_start":23,"line_end":23,"column_start":9,"column_end":10},"name":"x","qualname":"::group::AffineStorage::x","value":"field::FieldStorage","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":653},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69824,"byte_end":69825,"line_start":24,"line_end":24,"column_start":9,"column_end":10},"name":"y","qualname":"::group::AffineStorage::y","value":"field::FieldStorage","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":125},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":70458,"byte_end":70473,"line_start":57,"line_end":57,"column_start":12,"column_end":27},"name":"AFFINE_INFINITY","qualname":"::group::AFFINE_INFINITY","value":"Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":126},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":70614,"byte_end":70631,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"JACOBIAN_INFINITY","qualname":"::group::JACOBIAN_INFINITY","value":"Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":127},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":70819,"byte_end":70827,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"AFFINE_G","qualname":"::group::AFFINE_G","value":"Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71135,"byte_end":71142,"line_start":81,"line_end":81,"column_start":11,"column_end":18},"name":"CURVE_B","qualname":"::group::CURVE_B","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71214,"byte_end":71217,"line_start":85,"line_end":85,"column_start":18,"column_end":21},"name":"new","qualname":"<Affine>::new","value":"pub const fn new(Field, Field) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new affine.\n","sig":null,"attributes":[{"value":"/ Create a new affine.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71172,"byte_end":71196,"line_start":84,"line_end":84,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71437,"byte_end":71443,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"set_xy","qualname":"<Affine>::set_xy","value":"pub fn set_xy(&mut Self, &Field, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Set a group element equal to the point with given X and Y\n coordinates.\n","sig":null,"attributes":[{"value":"/ Set a group element equal to the point with given X and Y","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71343,"byte_end":71404,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/ coordinates.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71409,"byte_end":71425,"line_start":94,"line_end":94,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71813,"byte_end":71822,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"set_xquad","qualname":"<Affine>::set_xquad","value":"pub fn set_xquad(&mut Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (affine) equal to the point with the given\n X coordinate and a Y coordinate that is a quadratic residue\n modulo p. The return value is true iff a coordinate with the\n given X coordinate exists.\n","sig":null,"attributes":[{"value":"/ Set a group element (affine) equal to the point with the given","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71563,"byte_end":71629,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"/ X coordinate and a Y coordinate that is a quadratic residue","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71634,"byte_end":71697,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/ modulo p. The return value is true iff a coordinate with the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71702,"byte_end":71766,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ given X coordinate exists.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71771,"byte_end":71801,"line_start":104,"line_end":104,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":72303,"byte_end":72313,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"set_xo_var","qualname":"<Affine>::set_xo_var","value":"pub fn set_xo_var(&mut Self, &Field, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (affine) equal to the point with the given\n X coordinate, and given oddness for Y. Return value indicates\n whether the result is valid.\n","sig":null,"attributes":[{"value":"/ Set a group element (affine) equal to the point with the given","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":72118,"byte_end":72184,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ X coordinate, and given oddness for Y. Return value indicates","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":72189,"byte_end":72254,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"/ whether the result is valid.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":72259,"byte_end":72291,"line_start":120,"line_end":120,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":72634,"byte_end":72645,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<Affine>::is_infinity","value":"pub fn is_infinity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is the point at infinity.\n","sig":null,"attributes":[{"value":"/ Check whether a group element is the point at infinity.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":72563,"byte_end":72622,"line_start":132,"line_end":132,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":72772,"byte_end":72784,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"is_valid_var","qualname":"<Affine>::is_valid_var","value":"pub fn is_valid_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is valid (i.e., on the curve).\n","sig":null,"attributes":[{"value":"/ Check whether a group element is valid (i.e., on the curve).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":72696,"byte_end":72760,"line_start":137,"line_end":137,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":73113,"byte_end":73125,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Affine>::neg_in_place","value":"pub fn neg_in_place(&mut Self, &Affine)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":73262,"byte_end":73265,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"neg","qualname":"<Affine>::neg","value":"pub fn neg(&Self) -> Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":73481,"byte_end":73488,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"set_gej","qualname":"<Affine>::set_gej","value":"pub fn set_gej(&mut Self, &Jacobian)","parent":null,"children":[],"decl_id":null,"docs":" Set a group element equal to another which is given in\n jacobian coordinates.\n","sig":null,"attributes":[{"value":"/ Set a group element equal to another which is given in","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":73381,"byte_end":73439,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/ jacobian coordinates.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":73444,"byte_end":73469,"line_start":165,"line_end":165,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":73780,"byte_end":73788,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"from_gej","qualname":"<Affine>::from_gej","value":"pub fn from_gej(&Jacobian) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":73903,"byte_end":73914,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"set_gej_var","qualname":"<Affine>::set_gej_var","value":"pub fn set_gej_var(&mut Self, &Jacobian)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":74271,"byte_end":74283,"line_start":201,"line_end":201,"column_start":12,"column_end":24},"name":"set_gej_zinv","qualname":"<Affine>::set_gej_zinv","value":"pub fn set_gej_zinv(&mut Self, &Jacobian, &Field)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":74561,"byte_end":74566,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"clear","qualname":"<Affine>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a secp256k1_ge to prevent leaking sensitive information.\n","sig":null,"attributes":[{"value":"/ Clear a secp256k1_ge to prevent leaking sensitive information.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":74483,"byte_end":74549,"line_start":209,"line_end":209,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":74675,"byte_end":74692,"line_start":217,"line_end":217,"column_start":8,"column_end":25},"name":"set_table_gej_var","qualname":"::group::set_table_gej_var","value":"pub fn set_table_gej_var(&mut [Affine], &[Jacobian], &[Field])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":75063,"byte_end":75084,"line_start":235,"line_end":235,"column_start":8,"column_end":29},"name":"globalz_set_table_gej","qualname":"::group::globalz_set_table_gej","value":"pub fn globalz_set_table_gej(&mut [Affine], &mut Field, &[Jacobian], &[Field])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":75669,"byte_end":75672,"line_start":260,"line_end":260,"column_start":18,"column_end":21},"name":"new","qualname":"<Jacobian>::new","value":"pub const fn new(Field, Field) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new jacobian.\n","sig":null,"attributes":[{"value":"/ Create a new jacobian.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":75625,"byte_end":75651,"line_start":259,"line_end":259,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":75927,"byte_end":75939,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"set_infinity","qualname":"<Jacobian>::set_infinity","value":"pub fn set_infinity(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (jacobian) equal to the point at infinity.\n","sig":null,"attributes":[{"value":"/ Set a group element (jacobian) equal to the point at infinity.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":75849,"byte_end":75915,"line_start":269,"line_end":269,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76175,"byte_end":76181,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"set_ge","qualname":"<Jacobian>::set_ge","value":"pub fn set_ge(&mut Self, &Affine)","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (jacobian) equal to another which is given\n in affine coordinates.\n","sig":null,"attributes":[{"value":"/ Set a group element (jacobian) equal to another which is given","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76066,"byte_end":76132,"line_start":277,"line_end":277,"column_start":5,"column_end":71}},{"value":"/ in affine coordinates.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76137,"byte_end":76163,"line_start":278,"line_end":278,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76332,"byte_end":76339,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"from_ge","qualname":"<Jacobian>::from_ge","value":"pub fn from_ge(&Affine) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76518,"byte_end":76526,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"eq_x_var","qualname":"<Jacobian>::eq_x_var","value":"pub fn eq_x_var(&Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare the X coordinate of a group element (jacobian).\n","sig":null,"attributes":[{"value":"/ Compare the X coordinate of a group element (jacobian).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76447,"byte_end":76506,"line_start":292,"line_end":292,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76831,"byte_end":76843,"line_start":304,"line_end":304,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Jacobian>::neg_in_place","value":"pub fn neg_in_place(&mut Self, &Jacobian)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the inverse of a (i.e., mirrored around the X\n axis).\n","sig":null,"attributes":[{"value":"/ Set r equal to the inverse of a (i.e., mirrored around the X","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76740,"byte_end":76804,"line_start":302,"line_end":302,"column_start":5,"column_end":69}},{"value":"/ axis).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":76809,"byte_end":76819,"line_start":303,"line_end":303,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77056,"byte_end":77059,"line_start":313,"line_end":313,"column_start":12,"column_end":15},"name":"neg","qualname":"<Jacobian>::neg","value":"pub fn neg(&Self) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77250,"byte_end":77261,"line_start":320,"line_end":320,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<Jacobian>::is_infinity","value":"pub fn is_infinity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is the point at infinity.\n","sig":null,"attributes":[{"value":"/ Check whether a group element is the point at infinity.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77179,"byte_end":77238,"line_start":319,"line_end":319,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77396,"byte_end":77410,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"has_quad_y_var","qualname":"<Jacobian>::has_quad_y_var","value":"pub fn has_quad_y_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element's y coordinate is a quadratic residue.\n","sig":null,"attributes":[{"value":"/ Check whether a group element's y coordinate is a quadratic residue.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77312,"byte_end":77384,"line_start":324,"line_end":324,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77740,"byte_end":77763,"line_start":337,"line_end":337,"column_start":12,"column_end":35},"name":"double_nonzero_in_place","qualname":"<Jacobian>::double_nonzero_in_place","value":"pub fn double_nonzero_in_place(&mut Self, &Jacobian, Option<&mut Field>)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the double of a. If rzr is not-NULL, r->z =\n a->z * *rzr (where infinity means an implicit z = 0). a may\n not be zero. Constant time.\n","sig":null,"attributes":[{"value":"/ Set r equal to the double of a. If rzr is not-NULL, r->z =","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77562,"byte_end":77624,"line_start":334,"line_end":334,"column_start":5,"column_end":67}},{"value":"/ a->z * *rzr (where infinity means an implicit z = 0). a may","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77629,"byte_end":77692,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"/ not be zero. Constant time.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77697,"byte_end":77728,"line_start":336,"line_end":336,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":78049,"byte_end":78068,"line_start":344,"line_end":344,"column_start":12,"column_end":31},"name":"double_var_in_place","qualname":"<Jacobian>::double_var_in_place","value":"pub fn double_var_in_place(&mut Self, &Jacobian, Option<&mut Field>)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the double of a. If rzr is not-NULL, r->z =\n a->z * *rzr (where infinity means an implicit z = 0).\n","sig":null,"attributes":[{"value":"/ Set r equal to the double of a. If rzr is not-NULL, r->z =","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77913,"byte_end":77975,"line_start":342,"line_end":342,"column_start":5,"column_end":67}},{"value":"/ a->z * *rzr (where infinity means an implicit z = 0).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":77980,"byte_end":78037,"line_start":343,"line_end":343,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":78957,"byte_end":78967,"line_start":381,"line_end":381,"column_start":12,"column_end":22},"name":"double_var","qualname":"<Jacobian>::double_var","value":"pub fn double_var(&Self, Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":79259,"byte_end":79275,"line_start":389,"line_end":389,"column_start":12,"column_end":28},"name":"add_var_in_place","qualname":"<Jacobian>::add_var_in_place","value":"pub fn add_var_in_place(&mut Self, &Jacobian, &Jacobian, Option<&mut Field>)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b. If rzr is non-NULL, r->z =\n a->z * *rzr (a cannot be infinity in that case).\n","sig":null,"attributes":[{"value":"/ Set r equal to the sum of a and b. If rzr is non-NULL, r->z =","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":79125,"byte_end":79190,"line_start":387,"line_end":387,"column_start":5,"column_end":70}},{"value":"/ a->z * *rzr (a cannot be infinity in that case).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":79195,"byte_end":79247,"line_start":388,"line_end":388,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":80803,"byte_end":80810,"line_start":449,"line_end":449,"column_start":12,"column_end":19},"name":"add_var","qualname":"<Jacobian>::add_var","value":"pub fn add_var(&Self, &Jacobian, Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":81094,"byte_end":81109,"line_start":457,"line_end":457,"column_start":12,"column_end":27},"name":"add_ge_in_place","qualname":"<Jacobian>::add_ge_in_place","value":"pub fn add_ge_in_place(&mut Self, &Jacobian, &Affine)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with b given in affine\n coordinates, and not infinity).\n","sig":null,"attributes":[{"value":"/ Set r equal to the sum of a and b (with b given in affine","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":80981,"byte_end":81042,"line_start":455,"line_end":455,"column_start":5,"column_end":66}},{"value":"/ coordinates, and not infinity).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":81047,"byte_end":81082,"line_start":456,"line_end":456,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":82850,"byte_end":82856,"line_start":524,"line_end":524,"column_start":12,"column_end":18},"name":"add_ge","qualname":"<Jacobian>::add_ge","value":"pub fn add_ge(&Self, &Affine) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":83358,"byte_end":83377,"line_start":536,"line_end":536,"column_start":12,"column_end":31},"name":"add_ge_var_in_place","qualname":"<Jacobian>::add_ge_var_in_place","value":"pub fn add_ge_var_in_place(&mut Self, &Jacobian, &Affine, Option<&mut Field>)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with b given in affine\n coordinates). This is more efficient than\n secp256k1_gej_add_var. It is identical to secp256k1_gej_add_ge\n but without constant-time guarantee, and b is allowed to be\n infinity. If rzr is non-NULL, r->z = a->z * *rzr (a cannot be\n infinity in that case).\n","sig":null,"attributes":[{"value":"/ Set r equal to the sum of a and b (with b given in affine","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":82994,"byte_end":83055,"line_start":530,"line_end":530,"column_start":5,"column_end":66}},{"value":"/ coordinates). This is more efficient than","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":83060,"byte_end":83105,"line_start":531,"line_end":531,"column_start":5,"column_end":50}},{"value":"/ secp256k1_gej_add_var. It is identical to secp256k1_gej_add_ge","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":83110,"byte_end":83176,"line_start":532,"line_end":532,"column_start":5,"column_end":71}},{"value":"/ but without constant-time guarantee, and b is allowed to be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":83181,"byte_end":83244,"line_start":533,"line_end":533,"column_start":5,"column_end":68}},{"value":"/ infinity. If rzr is non-NULL, r->z = a->z * *rzr (a cannot be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":83249,"byte_end":83314,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"/ infinity in that case).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":83319,"byte_end":83346,"line_start":535,"line_end":535,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":84891,"byte_end":84901,"line_start":595,"line_end":595,"column_start":12,"column_end":22},"name":"add_ge_var","qualname":"<Jacobian>::add_ge_var","value":"pub fn add_ge_var(&Self, &Affine, Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":85187,"byte_end":85208,"line_start":603,"line_end":603,"column_start":12,"column_end":33},"name":"add_zinv_var_in_place","qualname":"<Jacobian>::add_zinv_var_in_place","value":"pub fn add_zinv_var_in_place(&mut Self, &Jacobian, &Affine, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with the inverse of b's Z\n coordinate passed as bzinv).\n","sig":null,"attributes":[{"value":"/ Set r equal to the sum of a and b (with the inverse of b's Z","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":85074,"byte_end":85138,"line_start":601,"line_end":601,"column_start":5,"column_end":69}},{"value":"/ coordinate passed as bzinv).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":85143,"byte_end":85175,"line_start":602,"line_end":602,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":86670,"byte_end":86682,"line_start":659,"line_end":659,"column_start":12,"column_end":24},"name":"add_zinv_var","qualname":"<Jacobian>::add_zinv_var","value":"pub fn add_zinv_var(&mut Self, &Affine, &Field) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":86940,"byte_end":86945,"line_start":667,"line_end":667,"column_start":12,"column_end":17},"name":"clear","qualname":"<Jacobian>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a secp256k1_gej to prevent leaking sensitive\n information.\n","sig":null,"attributes":[{"value":"/ Clear a secp256k1_gej to prevent leaking sensitive","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":86853,"byte_end":86907,"line_start":665,"line_end":665,"column_start":5,"column_end":59}},{"value":"/ information.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":86912,"byte_end":86928,"line_start":666,"line_end":666,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87165,"byte_end":87172,"line_start":676,"line_end":676,"column_start":12,"column_end":19},"name":"rescale","qualname":"<Jacobian>::rescale","value":"pub fn rescale(&mut Self, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Rescale a jacobian point by b which must be\n non-zero. Constant-time.\n","sig":null,"attributes":[{"value":"/ Rescale a jacobian point by b which must be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87073,"byte_end":87120,"line_start":674,"line_end":674,"column_start":5,"column_end":52}},{"value":"/ non-zero. Constant-time.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87125,"byte_end":87153,"line_start":675,"line_end":675,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87810,"byte_end":87813,"line_start":703,"line_end":703,"column_start":18,"column_end":21},"name":"new","qualname":"<AffineStorage>::new","value":"pub const fn new(FieldStorage, FieldStorage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new affine storage.\n","sig":null,"attributes":[{"value":"/ Create a new affine storage.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87760,"byte_end":87792,"line_start":702,"line_end":702,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87986,"byte_end":87990,"line_start":709,"line_end":709,"column_start":12,"column_end":16},"name":"cmov","qualname":"<AffineStorage>::cmov","value":"pub fn cmov(&mut Self, &AffineStorage, bool)","parent":null,"children":[],"decl_id":null,"docs":" If flag is true, set *r equal to *a; otherwise leave\n it. Constant-time.\n","sig":null,"attributes":[{"value":"/ If flag is true, set *r equal to *a; otherwise leave","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87891,"byte_end":87947,"line_start":707,"line_end":707,"column_start":5,"column_end":61}},{"value":"/ it. Constant-time.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87952,"byte_end":87974,"line_start":708,"line_end":708,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88219,"byte_end":88233,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"SignatureArray","qualname":"::der::SignatureArray","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88295,"byte_end":88298,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<SignatureArray>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88389,"byte_end":88392,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"len","qualname":"<SignatureArray>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88444,"byte_end":88452,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SignatureArray>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88736,"byte_end":88743,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::der::Decoder","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88801,"byte_end":88804,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88872,"byte_end":88885,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"remaining_len","qualname":"<Decoder>::remaining_len","value":"pub fn remaining_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88952,"byte_end":88956,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"read","qualname":"<Decoder>::read","value":"pub fn read(&mut Self) -> Result<u8, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":89192,"byte_end":89196,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"peek","qualname":"<Decoder>::peek","value":"pub fn peek(&Self, usize) -> Result<u8, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":89439,"byte_end":89449,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"peek_slice","qualname":"<Decoder>::peek_slice","value":"pub fn peek_slice(&Self, usize) -> Result<&[u8], Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":89733,"byte_end":89737,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"skip","qualname":"<Decoder>::skip","value":"pub fn skip(&mut Self, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":89997,"byte_end":90022,"line_start":84,"line_end":84,"column_start":12,"column_end":37},"name":"read_constructed_sequence","qualname":"<Decoder>::read_constructed_sequence","value":"pub fn read_constructed_sequence(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":90215,"byte_end":90223,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"read_len","qualname":"<Decoder>::read_len","value":"pub fn read_len(&mut Self) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":91448,"byte_end":91460,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"read_integer","qualname":"<Decoder>::read_integer","value":"pub fn read_integer(&mut Self) -> Result<Scalar, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":92726,"byte_end":92742,"line_start":190,"line_end":190,"column_start":12,"column_end":28},"name":"read_seq_len_lax","qualname":"<Decoder>::read_seq_len_lax","value":"pub fn read_seq_len_lax(&mut Self) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":93085,"byte_end":93097,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"read_len_lax","qualname":"<Decoder>::read_len_lax","value":"pub fn read_len_lax(&mut Self) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":93946,"byte_end":93962,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"read_integer_lax","qualname":"<Decoder>::read_integer_lax","value":"pub fn read_integer_lax(&mut Self) -> Result<Scalar, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdh.rs","byte_start":94968,"byte_end":94976,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"ecdh_raw","qualname":"<ECMultContext>::ecdh_raw","value":"pub fn ecdh_raw<D: Digest + Default>(&Self, &Affine, &Scalar)\n-> Option<GenericArray<u8, D::OutputSize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdsa.rs","byte_start":96061,"byte_end":96071,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"verify_raw","qualname":"<ECMultContext>::verify_raw","value":"pub fn verify_raw(&Self, &Scalar, &Scalar, &Affine, &Scalar) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdsa.rs","byte_start":97055,"byte_end":97066,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"recover_raw","qualname":"<ECMultContext>::recover_raw","value":"pub fn recover_raw(&Self, &Scalar, &Scalar, u8, &Scalar)\n-> Result<Affine, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdsa.rs","byte_start":98325,"byte_end":98333,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"sign_raw","qualname":"<ECMultGenContext>::sign_raw","value":"pub fn sign_raw(&Self, &Scalar, &Scalar, &Scalar)\n-> Result<(Scalar, Scalar, u8), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":334},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":99610,"byte_end":99618,"line_start":14,"line_end":14,"column_start":11,"column_end":19},"name":"WINDOW_A","qualname":"::ecmult::WINDOW_A","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":335},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":99641,"byte_end":99649,"line_start":15,"line_end":15,"column_start":11,"column_end":19},"name":"WINDOW_G","qualname":"::ecmult::WINDOW_G","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":336},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":99673,"byte_end":99692,"line_start":16,"line_end":16,"column_start":11,"column_end":30},"name":"ECMULT_TABLE_SIZE_A","qualname":"::ecmult::ECMULT_TABLE_SIZE_A","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":337},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":99733,"byte_end":99752,"line_start":17,"line_end":17,"column_start":11,"column_end":30},"name":"ECMULT_TABLE_SIZE_G","qualname":"::ecmult::ECMULT_TABLE_SIZE_G","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100535,"byte_end":100548,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"ECMultContext","qualname":"::ecmult::ECMultContext","value":"ECMultContext {  }","parent":null,"children":[{"krate":0,"index":341}],"decl_id":null,"docs":" Context for accelerating the computation of a*P + b*G.\n","sig":null,"attributes":[{"value":"/ Context for accelerating the computation of a*P + b*G.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100465,"byte_end":100523,"line_start":42,"line_end":42,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100925,"byte_end":100937,"line_start":54,"line_end":54,"column_start":25,"column_end":37},"name":"new_from_raw","qualname":"<ECMultContext>::new_from_raw","value":"pub const unsafe fn new_from_raw([AffineStorage; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ECMultContext` from raw values.","sig":null,"attributes":[{"value":"/ Create a new `ECMultContext` from raw values.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100628,"byte_end":100677,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100682,"byte_end":100685,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100690,"byte_end":100702,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/ The function is unsafe because incorrect value of `pre_g` can lead to","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100707,"byte_end":100780,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ crypto logic failure. You most likely do not want to use this function,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100785,"byte_end":100860,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ but `ECMultContext::new_boxed`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100865,"byte_end":100900,"line_start":53,"line_end":53,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":101081,"byte_end":101092,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"inspect_raw","qualname":"<ECMultContext>::inspect_raw","value":"pub fn inspect_raw(&Self) -> &[AffineStorage; ]","parent":null,"children":[],"decl_id":null,"docs":" Inspect raw values of `ECMultContext`.\n","sig":null,"attributes":[{"value":"/ Inspect raw values of `ECMultContext`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":101027,"byte_end":101069,"line_start":58,"line_end":58,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":101271,"byte_end":101280,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"new_boxed","qualname":"<ECMultContext>::new_boxed","value":"pub fn new_boxed() -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `ECMultContext` on the heap. Note that this function is expensive.\n","sig":null,"attributes":[{"value":"/ Generate a new `ECMultContext` on the heap. Note that this function is expensive.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":101174,"byte_end":101259,"line_start":63,"line_end":63,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":353},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104128,"byte_end":104144,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"ECMultGenContext","qualname":"::ecmult::ECMultGenContext","value":"ECMultGenContext {  }","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" Context for accelerating the computation of a*G.\n","sig":null,"attributes":[{"value":"/ Context for accelerating the computation of a*G.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104064,"byte_end":104116,"line_start":161,"line_end":161,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104560,"byte_end":104572,"line_start":175,"line_end":175,"column_start":25,"column_end":37},"name":"new_from_raw","qualname":"<ECMultGenContext>::new_from_raw","value":"pub const unsafe fn new_from_raw([[AffineStorage; ]; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ECMultGenContext` from raw values.","sig":null,"attributes":[{"value":"/ Create a new `ECMultGenContext` from raw values.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104257,"byte_end":104309,"line_start":169,"line_end":169,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104314,"byte_end":104317,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104322,"byte_end":104334,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/ The function is unsafe because incorrect value of `pre_g` can lead to","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104339,"byte_end":104412,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ crypto logic failure. You most likely do not want to use this function,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104417,"byte_end":104492,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ but `ECMultGenContext::new_boxed`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104497,"byte_end":104535,"line_start":174,"line_end":174,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104784,"byte_end":104795,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"inspect_raw","qualname":"<ECMultGenContext>::inspect_raw","value":"pub fn inspect_raw(&Self) -> &[[AffineStorage; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Inspect `ECMultGenContext` values.\n","sig":null,"attributes":[{"value":"/ Inspect `ECMultGenContext` values.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104734,"byte_end":104772,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104965,"byte_end":104974,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"new_boxed","qualname":"<ECMultGenContext>::new_boxed","value":"pub fn new_boxed() -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `ECMultGenContext` on the heap. Note that this function is expensive.\n","sig":null,"attributes":[{"value":"/ Generate a new `ECMultGenContext` on the heap. Note that this function is expensive.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104865,"byte_end":104953,"line_start":188,"line_end":188,"column_start":5,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":368},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":107403,"byte_end":107422,"line_start":261,"line_end":261,"column_start":8,"column_end":27},"name":"odd_multiples_table","qualname":"::ecmult::odd_multiples_table","value":"pub fn odd_multiples_table(&mut [Jacobian], &mut [Field], &Jacobian)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":113197,"byte_end":113203,"line_start":454,"line_end":454,"column_start":12,"column_end":18},"name":"ecmult","qualname":"<ECMultContext>::ecmult","value":"pub fn ecmult(&Self, &mut Jacobian, &Jacobian, &Scalar, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":114426,"byte_end":114438,"line_start":491,"line_end":491,"column_start":12,"column_end":24},"name":"ecmult_const","qualname":"<ECMultContext>::ecmult_const","value":"pub fn ecmult_const(&Self, &mut Jacobian, &Affine, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":116922,"byte_end":116932,"line_start":560,"line_end":560,"column_start":12,"column_end":22},"name":"ecmult_gen","qualname":"<ECMultGenContext>::ecmult_gen","value":"pub fn ecmult_gen(&Self, &mut Jacobian, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117626,"byte_end":117642,"line_start":3,"line_end":3,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::error::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":669},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117648,"byte_end":117664,"line_start":4,"line_end":4,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::error::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":671},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117670,"byte_end":117686,"line_start":5,"line_end":5,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::error::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117692,"byte_end":117709,"line_start":6,"line_end":6,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::error::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":675},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117715,"byte_end":117729,"line_start":7,"line_end":7,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::error::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":677},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117735,"byte_end":117753,"line_start":8,"line_end":8,"column_start":5,"column_end":23},"name":"InvalidInputLength","qualname":"::error::Error::InvalidInputLength","value":"Error::InvalidInputLength","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":679},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117759,"byte_end":117774,"line_start":9,"line_end":9,"column_start":5,"column_end":20},"name":"TweakOutOfRange","qualname":"::error::Error::TweakOutOfRange","value":"Error::TweakOutOfRange","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":666},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117614,"byte_end":117619,"line_start":2,"line_end":2,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    InvalidSignature,\n    InvalidPublicKey,\n    InvalidSecretKey,\n    InvalidRecoveryId,\n    InvalidMessage,\n    InvalidInputLength,\n    TweakOutOfRange,\n}","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119360,"byte_end":119366,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 256-bit scalar value.\n","sig":null,"attributes":[{"value":"/ A 256-bit scalar value.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119321,"byte_end":119348,"line_start":25,"line_end":25,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":694},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119367,"byte_end":119379,"line_start":26,"line_end":26,"column_start":19,"column_end":31},"name":"0","qualname":"::scalar::Scalar::0","value":"[u32; 8]","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119470,"byte_end":119475,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"clear","qualname":"<Scalar>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a scalar to prevent the leak of sensitive data.\n","sig":null,"attributes":[{"value":"/ Clear a scalar to prevent the leak of sensitive data.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119401,"byte_end":119458,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119642,"byte_end":119649,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"set_int","qualname":"<Scalar>::set_int","value":"pub fn set_int(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set a scalar to an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Set a scalar to an unsigned integer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119590,"byte_end":119630,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119782,"byte_end":119790,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Scalar>::from_int","value":"pub fn from_int(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a scalar from an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Create a scalar from an unsigned integer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119725,"byte_end":119770,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":120010,"byte_end":120014,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"bits","qualname":"<Scalar>::bits","value":"pub fn bits(&Self, usize, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Access bits from a scalar. All requested bits must belong to\n the same 32-bit limb.\n","sig":null,"attributes":[{"value":"/ Access bits from a scalar. All requested bits must belong to","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119904,"byte_end":119968,"line_start":48,"line_end":48,"column_start":5,"column_end":69}},{"value":"/ the same 32-bit limb.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119973,"byte_end":119998,"line_start":49,"line_end":49,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":120267,"byte_end":120275,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"bits_var","qualname":"<Scalar>::bits_var","value":"pub fn bits_var(&Self, usize, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Access bits from a scalar. Not constant time.\n","sig":null,"attributes":[{"value":"/ Access bits from a scalar. Not constant time.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":120206,"byte_end":120255,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":122948,"byte_end":122956,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"cadd_bit","qualname":"<Scalar>::cadd_bit","value":"pub fn cadd_bit(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Conditionally add a power of two to a scalar. The result is\n not allowed to overflow.\n","sig":null,"attributes":[{"value":"/ Conditionally add a power of two to a scalar. The result is","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":122840,"byte_end":122903,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/ not allowed to overflow.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":122908,"byte_end":122936,"line_start":126,"line_end":126,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":124548,"byte_end":124555,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"set_b32","qualname":"<Scalar>::set_b32","value":"pub fn set_b32(&mut Self, &[u8; ]) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Set a scalar from a big endian byte array, return whether it overflowed.\n","sig":null,"attributes":[{"value":"/ Set a scalar from a big endian byte array, return whether it overflowed.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":124444,"byte_end":124520,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":124525,"byte_end":124536,"line_start":159,"line_end":159,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":125973,"byte_end":125976,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"b32","qualname":"<Scalar>::b32","value":"pub fn b32(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert a scalar to a byte array.\n","sig":null,"attributes":[{"value":"/ Convert a scalar to a byte array.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":125924,"byte_end":125961,"line_start":200,"line_end":200,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":126136,"byte_end":126144,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"fill_b32","qualname":"<Scalar>::fill_b32","value":"pub fn fill_b32(&Self, &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Convert a scalar to a byte array.\n","sig":null,"attributes":[{"value":"/ Convert a scalar to a byte array.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":126087,"byte_end":126124,"line_start":207,"line_end":207,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":127546,"byte_end":127553,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar equals zero.\n","sig":null,"attributes":[{"value":"/ Check whether a scalar equals zero.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":127495,"byte_end":127534,"line_start":243,"line_end":243,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":127837,"byte_end":127843,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"is_one","qualname":"<Scalar>::is_one","value":"pub fn is_one(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar equals one.\n","sig":null,"attributes":[{"value":"/ Check whether a scalar equals one.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":127787,"byte_end":127825,"line_start":256,"line_end":256,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":128174,"byte_end":128181,"line_start":271,"line_end":271,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Scalar>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar is higher than the group order divided\n by 2.\n","sig":null,"attributes":[{"value":"/ Check whether a scalar is higher than the group order divided","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":128083,"byte_end":128148,"line_start":269,"line_end":269,"column_start":5,"column_end":70}},{"value":"/ by 2.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":128153,"byte_end":128162,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":129317,"byte_end":129332,"line_start":290,"line_end":290,"column_start":12,"column_end":27},"name":"cond_neg_assign","qualname":"<Scalar>::cond_neg_assign","value":"pub fn cond_neg_assign(&mut Self, Choice)","parent":null,"children":[],"decl_id":null,"docs":" Conditionally negate a number, in constant time.\n","sig":null,"attributes":[{"value":"/ Conditionally negate a number, in constant time.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":129253,"byte_end":129305,"line_start":289,"line_end":289,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":143708,"byte_end":143720,"line_start":732,"line_end":732,"column_start":12,"column_end":24},"name":"mul_in_place","qualname":"<Scalar>::mul_in_place","value":"pub fn mul_in_place(&mut Self, &Scalar, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":143992,"byte_end":143999,"line_start":740,"line_end":740,"column_start":12,"column_end":19},"name":"shr_int","qualname":"<Scalar>::shr_int","value":"pub fn shr_int(&mut Self, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Shift a scalar right by some amount strictly between 0 and 16,\n returning the low bits that were shifted off.\n","sig":null,"attributes":[{"value":"/ Shift a scalar right by some amount strictly between 0 and 16,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":143860,"byte_end":143926,"line_start":738,"line_end":738,"column_start":5,"column_end":71}},{"value":"/ returning the low bits that were shifted off.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":143931,"byte_end":143980,"line_start":739,"line_end":739,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":144658,"byte_end":144670,"line_start":756,"line_end":756,"column_start":12,"column_end":24},"name":"sqr_in_place","qualname":"<Scalar>::sqr_in_place","value":"pub fn sqr_in_place(&mut Self, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":144802,"byte_end":144805,"line_start":762,"line_end":762,"column_start":12,"column_end":15},"name":"sqr","qualname":"<Scalar>::sqr","value":"pub fn sqr(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":144928,"byte_end":144940,"line_start":768,"line_end":768,"column_start":12,"column_end":24},"name":"inv_in_place","qualname":"<Scalar>::inv_in_place","value":"pub fn inv_in_place(&mut Self, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":147808,"byte_end":147811,"line_start":914,"line_end":914,"column_start":12,"column_end":15},"name":"inv","qualname":"<Scalar>::inv","value":"pub fn inv(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":147934,"byte_end":147941,"line_start":920,"line_end":920,"column_start":12,"column_end":19},"name":"inv_var","qualname":"<Scalar>::inv_var","value":"pub fn inv_var(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":147998,"byte_end":148005,"line_start":924,"line_end":924,"column_start":12,"column_end":19},"name":"is_even","qualname":"<Scalar>::is_even","value":"pub fn is_even(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":718,"byte_end":723,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"curve","qualname":"::curve","value":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":543}],"decl_id":null,"docs":" Curve related structs.\n","sig":null,"attributes":[{"value":"/ Curve related structs.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":683,"byte_end":709,"line_start":38,"line_end":38,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":546},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1019,"byte_end":1023,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"name":"util","qualname":"::util","value":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":593}],"decl_id":null,"docs":" Utilities to manipulate the secp256k1 curve parameters.\n","sig":null,"attributes":[{"value":"/ Utilities to manipulate the secp256k1 curve parameters.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":951,"byte_end":1010,"line_start":49,"line_end":49,"column_start":1,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":547},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1040,"byte_end":1055,"line_start":51,"line_end":51,"column_start":15,"column_end":30},"name":"TAG_PUBKEY_EVEN","qualname":"::util::TAG_PUBKEY_EVEN","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":548},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1082,"byte_end":1096,"line_start":52,"line_end":52,"column_start":15,"column_end":29},"name":"TAG_PUBKEY_ODD","qualname":"::util::TAG_PUBKEY_ODD","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":549},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1123,"byte_end":1138,"line_start":53,"line_end":53,"column_start":15,"column_end":30},"name":"TAG_PUBKEY_FULL","qualname":"::util::TAG_PUBKEY_FULL","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":550},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1165,"byte_end":1187,"line_start":54,"line_end":54,"column_start":15,"column_end":37},"name":"TAG_PUBKEY_HYBRID_EVEN","qualname":"::util::TAG_PUBKEY_HYBRID_EVEN","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":551},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1214,"byte_end":1235,"line_start":55,"line_end":55,"column_start":15,"column_end":36},"name":"TAG_PUBKEY_HYBRID_ODD","qualname":"::util::TAG_PUBKEY_HYBRID_ODD","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":552},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1263,"byte_end":1275,"line_start":57,"line_end":57,"column_start":15,"column_end":27},"name":"MESSAGE_SIZE","qualname":"::util::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":553},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1303,"byte_end":1318,"line_start":58,"line_end":58,"column_start":15,"column_end":30},"name":"SECRET_KEY_SIZE","qualname":"::util::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":554},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1346,"byte_end":1365,"line_start":59,"line_end":59,"column_start":15,"column_end":34},"name":"RAW_PUBLIC_KEY_SIZE","qualname":"::util::RAW_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":555},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1393,"byte_end":1413,"line_start":60,"line_end":60,"column_start":15,"column_end":35},"name":"FULL_PUBLIC_KEY_SIZE","qualname":"::util::FULL_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":556},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1441,"byte_end":1467,"line_start":61,"line_end":61,"column_start":15,"column_end":41},"name":"COMPRESSED_PUBLIC_KEY_SIZE","qualname":"::util::COMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":557},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1495,"byte_end":1509,"line_start":62,"line_end":62,"column_start":15,"column_end":29},"name":"SIGNATURE_SIZE","qualname":"::util::SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":558},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/lib.rs","byte_start":1537,"byte_end":1559,"line_start":63,"line_end":63,"column_start":15,"column_end":37},"name":"DER_MAX_SIGNATURE_SIZE","qualname":"::util::DER_MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":2392,"byte_end":2397,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":64486,"byte_end":64491,"line_start":1664,"line_end":1664,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":64659,"byte_end":64664,"line_start":1674,"line_end":1674,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":65045,"byte_end":65050,"line_start":1692,"line_end":1692,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":65582,"byte_end":65587,"line_start":1711,"line_end":1711,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":65696,"byte_end":65701,"line_start":1717,"line_end":1717,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66122,"byte_end":66127,"line_start":1735,"line_end":1735,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66314,"byte_end":66319,"line_start":1743,"line_end":1743,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66427,"byte_end":66432,"line_start":1749,"line_end":1749,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66598,"byte_end":66603,"line_start":1757,"line_end":1757,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66621,"byte_end":66626,"line_start":1759,"line_end":1759,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66733,"byte_end":66738,"line_start":1765,"line_end":1765,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66980,"byte_end":66992,"line_start":1775,"line_end":1775,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":67073,"byte_end":67085,"line_start":1781,"line_end":1781,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":67920,"byte_end":67925,"line_start":1807,"line_end":1807,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":68653,"byte_end":68658,"line_start":1829,"line_end":1829,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69861,"byte_end":69867,"line_start":27,"line_end":27,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":70047,"byte_end":70055,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":70272,"byte_end":70285,"line_start":48,"line_end":48,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71159,"byte_end":71165,"line_start":83,"line_end":83,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":75610,"byte_end":75618,"line_start":258,"line_end":258,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87386,"byte_end":87392,"line_start":686,"line_end":686,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87519,"byte_end":87525,"line_start":692,"line_end":692,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87740,"byte_end":87753,"line_start":701,"line_end":701,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88267,"byte_end":88281,"line_start":10,"line_end":10,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88524,"byte_end":88538,"line_start":24,"line_end":24,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88629,"byte_end":88643,"line_start":30,"line_end":30,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88776,"byte_end":88783,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdh.rs","byte_start":94941,"byte_end":94954,"line_start":8,"line_end":8,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdsa.rs","byte_start":96034,"byte_end":96047,"line_start":15,"line_end":15,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdsa.rs","byte_start":98295,"byte_end":98311,"line_start":106,"line_end":106,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100608,"byte_end":100621,"line_start":47,"line_end":47,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104234,"byte_end":104250,"line_start":168,"line_end":168,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":113170,"byte_end":113183,"line_start":453,"line_end":453,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":116892,"byte_end":116908,"line_start":559,"line_end":559,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117830,"byte_end":117835,"line_start":13,"line_end":13,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117868,"byte_end":117873,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119388,"byte_end":119394,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":133440,"byte_end":133446,"line_start":416,"line_end":416,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":148076,"byte_end":148082,"line_start":929,"line_end":929,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":148170,"byte_end":148176,"line_start":935,"line_end":935,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":148544,"byte_end":148550,"line_start":952,"line_end":952,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":148980,"byte_end":148986,"line_start":969,"line_end":969,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":149097,"byte_end":149103,"line_start":975,"line_end":975,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":149535,"byte_end":149541,"line_start":993,"line_end":993,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":149731,"byte_end":149737,"line_start":1001,"line_end":1001,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":149840,"byte_end":149846,"line_start":1007,"line_end":1007,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":150135,"byte_end":150141,"line_start":1023,"line_end":1023,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":2392,"byte_end":2397,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":64486,"byte_end":64491,"line_start":1664,"line_end":1664,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":64659,"byte_end":64664,"line_start":1674,"line_end":1674,"column_start":21,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":65045,"byte_end":65050,"line_start":1692,"line_end":1692,"column_start":35,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":65582,"byte_end":65587,"line_start":1711,"line_end":1711,"column_start":27,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":65696,"byte_end":65701,"line_start":1717,"line_end":1717,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66122,"byte_end":66127,"line_start":1735,"line_end":1735,"column_start":35,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66314,"byte_end":66319,"line_start":1743,"line_end":1743,"column_start":27,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66427,"byte_end":66432,"line_start":1749,"line_end":1749,"column_start":20,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66598,"byte_end":66603,"line_start":1757,"line_end":1757,"column_start":13,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66621,"byte_end":66626,"line_start":1759,"line_end":1759,"column_start":14,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2703}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66733,"byte_end":66738,"line_start":1765,"line_end":1765,"column_start":21,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":66980,"byte_end":66992,"line_start":1775,"line_end":1775,"column_start":18,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":67073,"byte_end":67085,"line_start":1781,"line_end":1781,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":67920,"byte_end":67925,"line_start":1807,"line_end":1807,"column_start":29,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/field.rs","byte_start":68653,"byte_end":68658,"line_start":1829,"line_end":1829,"column_start":29,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":69861,"byte_end":69867,"line_start":27,"line_end":27,"column_start":18,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":70047,"byte_end":70055,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":70272,"byte_end":70285,"line_start":48,"line_end":48,"column_start":18,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":651},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":71159,"byte_end":71165,"line_start":83,"line_end":83,"column_start":6,"column_end":12},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":75610,"byte_end":75618,"line_start":258,"line_end":258,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87386,"byte_end":87392,"line_start":686,"line_end":686,"column_start":30,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87519,"byte_end":87525,"line_start":692,"line_end":692,"column_start":30,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/group.rs","byte_start":87740,"byte_end":87753,"line_start":701,"line_end":701,"column_start":6,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88267,"byte_end":88281,"line_start":10,"line_end":10,"column_start":6,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88524,"byte_end":88538,"line_start":24,"line_end":24,"column_start":22,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88629,"byte_end":88643,"line_start":30,"line_end":30,"column_start":22,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/der.rs","byte_start":88776,"byte_end":88783,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdh.rs","byte_start":94941,"byte_end":94954,"line_start":8,"line_end":8,"column_start":6,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdsa.rs","byte_start":96034,"byte_end":96047,"line_start":15,"line_end":15,"column_start":6,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecdsa.rs","byte_start":98295,"byte_end":98311,"line_start":106,"line_end":106,"column_start":6,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":100608,"byte_end":100621,"line_start":47,"line_end":47,"column_start":6,"column_end":19},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":104234,"byte_end":104250,"line_start":168,"line_end":168,"column_start":6,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":113170,"byte_end":113183,"line_start":453,"line_end":453,"column_start":6,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/ecmult.rs","byte_start":116892,"byte_end":116908,"line_start":559,"line_end":559,"column_start":6,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117830,"byte_end":117835,"line_start":13,"line_end":13,"column_start":28,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":666},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/error.rs","byte_start":117868,"byte_end":117873,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":119388,"byte_end":119394,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":133440,"byte_end":133446,"line_start":416,"line_end":416,"column_start":6,"column_end":12},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":148076,"byte_end":148082,"line_start":929,"line_end":929,"column_start":18,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":148170,"byte_end":148176,"line_start":935,"line_end":935,"column_start":22,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":148544,"byte_end":148550,"line_start":952,"line_end":952,"column_start":36,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":148980,"byte_end":148986,"line_start":969,"line_end":969,"column_start":28,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":149097,"byte_end":149103,"line_start":975,"line_end":975,"column_start":22,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":149535,"byte_end":149541,"line_start":993,"line_end":993,"column_start":36,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":149731,"byte_end":149737,"line_start":1001,"line_end":1001,"column_start":28,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":149840,"byte_end":149846,"line_start":1007,"line_end":1007,"column_start":14,"column_end":20},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-core-0.2.2/src/scalar.rs","byte_start":150135,"byte_end":150141,"line_start":1023,"line_end":1023,"column_start":30,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":9407}}]}