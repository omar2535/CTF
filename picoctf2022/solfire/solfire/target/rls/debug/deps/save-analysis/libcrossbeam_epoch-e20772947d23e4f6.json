{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6","program":"/home/omar2535/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=e20772947d23e4f6","-C","extra-filename=-e20772947d23e4f6","--out-dir","/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps","-L","dependency=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps","--extern","cfg_if=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libcfg_if-5b9b3cb1bf3d00dc.rmeta","--extern","crossbeam_utils=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libcrossbeam_utils-198991c1c2d53090.rmeta","--extern","lazy_static=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/liblazy_static-727a0f1c258ce5c0.rmeta","--extern","memoffset=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libmemoffset-eb1b5ecba19da6a0.rmeta","--extern","scopeguard=/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libscopeguard-7b1ddd2bc808ce25.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/omar2535/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/omar2535/Desktop/programming/CTF/picoctf2022/solfire/solfire/target/rls/debug/deps/libcrossbeam_epoch-e20772947d23e4f6.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[4825196858346601908,0]},"crate_root":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src","external_crates":[{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[6897411809829568419,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":22,"id":{"name":"spin","disambiguator":[4359627840222908777,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","num":23,"id":{"name":"crossbeam_utils","disambiguator":[14188897518877866347,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","num":24,"id":{"name":"scopeguard","disambiguator":[6650698705809014761,0]}},{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","num":25,"id":{"name":"memoffset","disambiguator":[14781538495289577542,0]}}],"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6724,"byte_end":6733,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6735,"byte_end":6741,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6743,"byte_end":6763,"line_start":170,"line_end":170,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6777,"byte_end":6782,"line_start":171,"line_end":171,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6784,"byte_end":6791,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6793,"byte_end":6799,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6846,"byte_end":6855,"line_start":173,"line_end":173,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6857,"byte_end":6868,"line_start":173,"line_end":173,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6901,"byte_end":6912,"line_start":174,"line_end":174,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6914,"byte_end":6919,"line_start":174,"line_end":174,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6983,"byte_end":7001,"line_start":177,"line_end":177,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":7003,"byte_end":7024,"line_start":177,"line_end":177,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":7132,"byte_end":7149,"line_start":184,"line_end":184,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":7151,"byte_end":7160,"line_start":184,"line_end":184,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":7162,"byte_end":7165,"line_start":184,"line_end":184,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":357},{"krate":0,"index":400},{"krate":0,"index":437},{"krate":0,"index":456},{"krate":0,"index":508},{"krate":0,"index":653},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":874},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084502,"byte_end":13084520,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084331,"byte_end":13084390,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084434,"byte_end":13084492,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084638,"byte_end":13084658,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084566,"byte_end":13084626,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084788,"byte_end":13084795,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084707,"byte_end":13084779,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084881,"byte_end":13084884,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084817,"byte_end":13084872,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085995,"byte_end":13086016,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085199,"byte_end":13085251,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085252,"byte_end":13085255,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085256,"byte_end":13085347,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085348,"byte_end":13085440,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085441,"byte_end":13085444,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085445,"byte_end":13085510,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085511,"byte_end":13085514,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085515,"byte_end":13085609,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085610,"byte_end":13085636,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085637,"byte_end":13085729,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085730,"byte_end":13085758,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n             \"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13085802,"byte_end":13085984,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086082,"byte_end":13086089,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086023,"byte_end":13086074,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086307,"byte_end":13086314,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086115,"byte_end":13086163,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086168,"byte_end":13086171,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086176,"byte_end":13086269,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086274,"byte_end":13086299,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088664,"byte_end":13088673,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13087691,"byte_end":13087738,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13087739,"byte_end":13087742,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13087743,"byte_end":13087841,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13087842,"byte_end":13087937,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13087938,"byte_end":13088000,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088001,"byte_end":13088004,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088005,"byte_end":13088097,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088098,"byte_end":13088197,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088198,"byte_end":13088298,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088299,"byte_end":13088321,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088322,"byte_end":13088325,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088326,"byte_end":13088419,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088420,"byte_end":13088491,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088492,"byte_end":13088495,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088496,"byte_end":13088503,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088504,"byte_end":13088534,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088535,"byte_end":13088566,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088567,"byte_end":13088570,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088571,"byte_end":13088645,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088646,"byte_end":13088653,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088720,"byte_end":13088725,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088680,"byte_end":13088709,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088779,"byte_end":13088783,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088739,"byte_end":13088769,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088935,"byte_end":13088939,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088790,"byte_end":13088835,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088840,"byte_end":13088843,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088848,"byte_end":13088860,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088865,"byte_end":13088868,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088873,"byte_end":13088920,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089303,"byte_end":13089308,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13088973,"byte_end":13089008,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089013,"byte_end":13089016,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089021,"byte_end":13089033,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089038,"byte_end":13089041,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089046,"byte_end":13089122,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089127,"byte_end":13089195,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089200,"byte_end":13089288,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089707,"byte_end":13089716,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089343,"byte_end":13089386,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089391,"byte_end":13089394,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089399,"byte_end":13089411,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089416,"byte_end":13089419,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089424,"byte_end":13089500,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089505,"byte_end":13089573,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089578,"byte_end":13089668,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089673,"byte_end":13089692,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13090129,"byte_end":13090133,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089755,"byte_end":13089808,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089813,"byte_end":13089816,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089821,"byte_end":13089833,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089838,"byte_end":13089841,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089846,"byte_end":13089922,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13089927,"byte_end":13089995,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13090000,"byte_end":13090090,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13090095,"byte_end":13090114,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093242,"byte_end":13093248,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13092724,"byte_end":13092788,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13092789,"byte_end":13092792,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13092793,"byte_end":13092891,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13092892,"byte_end":13092989,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13092990,"byte_end":13093061,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093062,"byte_end":13093065,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093066,"byte_end":13093146,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093147,"byte_end":13093150,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093151,"byte_end":13093230,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093734,"byte_end":13093737,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093501,"byte_end":13093583,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093588,"byte_end":13093591,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093596,"byte_end":13093610,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093615,"byte_end":13093618,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093623,"byte_end":13093630,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093635,"byte_end":13093667,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093672,"byte_end":13093675,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093680,"byte_end":13093710,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093715,"byte_end":13093722,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094081,"byte_end":13094085,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093840,"byte_end":13093922,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093927,"byte_end":13093930,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093935,"byte_end":13093949,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093954,"byte_end":13093957,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093962,"byte_end":13093969,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093974,"byte_end":13094006,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094011,"byte_end":13094014,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094019,"byte_end":13094057,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094062,"byte_end":13094069,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094674,"byte_end":13094678,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094390,"byte_end":13094428,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094433,"byte_end":13094436,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094441,"byte_end":13094455,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094460,"byte_end":13094463,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094468,"byte_end":13094475,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094480,"byte_end":13094512,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094517,"byte_end":13094520,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094525,"byte_end":13094559,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094564,"byte_end":13094571,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094576,"byte_end":13094579,"line_start":345,"line_end":345,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095263,"byte_end":13095267,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094805,"byte_end":13094850,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094855,"byte_end":13094858,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094863,"byte_end":13094953,"line_start":356,"line_end":356,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094958,"byte_end":13094972,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094977,"byte_end":13094980,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13094985,"byte_end":13094999,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095004,"byte_end":13095007,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095012,"byte_end":13095019,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095024,"byte_end":13095073,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095078,"byte_end":13095122,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095127,"byte_end":13095130,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095135,"byte_end":13095165,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095170,"byte_end":13095200,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095205,"byte_end":13095239,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095244,"byte_end":13095251,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096274,"byte_end":13096286,"line_start":394,"line_end":394,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095397,"byte_end":13095476,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095481,"byte_end":13095484,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095489,"byte_end":13095562,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095567,"byte_end":13095643,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095648,"byte_end":13095719,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095724,"byte_end":13095798,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095803,"byte_end":13095826,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095831,"byte_end":13095834,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095839,"byte_end":13095914,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095919,"byte_end":13095993,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13095998,"byte_end":13096032,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096037,"byte_end":13096040,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096045,"byte_end":13096059,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096064,"byte_end":13096067,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096072,"byte_end":13096079,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096084,"byte_end":13096133,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096138,"byte_end":13096141,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096146,"byte_end":13096176,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096181,"byte_end":13096211,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096216,"byte_end":13096250,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096255,"byte_end":13096262,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096894,"byte_end":13096899,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096406,"byte_end":13096471,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096476,"byte_end":13096479,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096484,"byte_end":13096574,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096579,"byte_end":13096593,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096598,"byte_end":13096601,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096606,"byte_end":13096620,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096625,"byte_end":13096628,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096633,"byte_end":13096640,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096645,"byte_end":13096694,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096699,"byte_end":13096743,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096748,"byte_end":13096751,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096756,"byte_end":13096786,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096791,"byte_end":13096827,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096832,"byte_end":13096870,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13096875,"byte_end":13096882,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097549,"byte_end":13097553,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097006,"byte_end":13097094,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097099,"byte_end":13097112,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097117,"byte_end":13097120,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097125,"byte_end":13097215,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097220,"byte_end":13097234,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097239,"byte_end":13097242,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097247,"byte_end":13097261,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097266,"byte_end":13097269,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097274,"byte_end":13097281,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097286,"byte_end":13097343,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097348,"byte_end":13097392,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097397,"byte_end":13097400,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097405,"byte_end":13097435,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097440,"byte_end":13097470,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097475,"byte_end":13097525,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097530,"byte_end":13097537,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099389,"byte_end":13099405,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\n                        P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                           &'g Guard) -> Result<Shared, CompareExchangeError>\nwhere P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097724,"byte_end":13097820,"line_start":437,"line_end":437,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097825,"byte_end":13097919,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13097924,"byte_end":13097995,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098000,"byte_end":13098003,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098008,"byte_end":13098103,"line_start":441,"line_end":441,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098108,"byte_end":13098199,"line_start":442,"line_end":442,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098204,"byte_end":13098217,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098222,"byte_end":13098225,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098230,"byte_end":13098299,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098304,"byte_end":13098385,"line_start":446,"line_end":446,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098390,"byte_end":13098481,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098486,"byte_end":13098576,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098581,"byte_end":13098663,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098668,"byte_end":13098746,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098751,"byte_end":13098831,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098836,"byte_end":13098902,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098907,"byte_end":13098910,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098915,"byte_end":13098929,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098934,"byte_end":13098937,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098942,"byte_end":13098949,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13098954,"byte_end":13099018,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099023,"byte_end":13099067,"line_start":458,"line_end":458,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099072,"byte_end":13099075,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099080,"byte_end":13099110,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099115,"byte_end":13099118,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099123,"byte_end":13099153,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099158,"byte_end":13099195,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099200,"byte_end":13099279,"line_start":464,"line_end":464,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099284,"byte_end":13099365,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13099370,"byte_end":13099377,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102439,"byte_end":13102460,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\n                             P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                                &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100067,"byte_end":13100163,"line_start":490,"line_end":490,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100168,"byte_end":13100262,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100267,"byte_end":13100338,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100343,"byte_end":13100346,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100351,"byte_end":13100446,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100451,"byte_end":13100546,"line_start":495,"line_end":495,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100551,"byte_end":13100641,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100646,"byte_end":13100730,"line_start":497,"line_end":497,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100735,"byte_end":13100738,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100743,"byte_end":13100812,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100817,"byte_end":13100898,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100903,"byte_end":13100994,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13100999,"byte_end":13101089,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101094,"byte_end":13101176,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101181,"byte_end":13101259,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101264,"byte_end":13101344,"line_start":505,"line_end":505,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101349,"byte_end":13101415,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101420,"byte_end":13101423,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101428,"byte_end":13101478,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101483,"byte_end":13101486,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101491,"byte_end":13101505,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101510,"byte_end":13101513,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101518,"byte_end":13101525,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101530,"byte_end":13101594,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101599,"byte_end":13101643,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101648,"byte_end":13101651,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101656,"byte_end":13101686,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101691,"byte_end":13101721,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101726,"byte_end":13101729,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101734,"byte_end":13101769,"line_start":519,"line_end":519,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101774,"byte_end":13101814,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101819,"byte_end":13101829,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101834,"byte_end":13101906,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101911,"byte_end":13101933,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101938,"byte_end":13101962,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101967,"byte_end":13101989,"line_start":525,"line_end":525,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13101994,"byte_end":13102007,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102012,"byte_end":13102037,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102042,"byte_end":13102076,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102081,"byte_end":13102111,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102116,"byte_end":13102129,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102134,"byte_end":13102143,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102148,"byte_end":13102153,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102158,"byte_end":13102161,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102166,"byte_end":13102207,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102212,"byte_end":13102222,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102227,"byte_end":13102311,"line_start":536,"line_end":536,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102316,"byte_end":13102343,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102348,"byte_end":13102391,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102396,"byte_end":13102405,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102410,"byte_end":13102415,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13102420,"byte_end":13102427,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104957,"byte_end":13104969,"line_start":604,"line_end":604,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103127,"byte_end":13103211,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103216,"byte_end":13103310,"line_start":566,"line_end":566,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103315,"byte_end":13103318,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103323,"byte_end":13103417,"line_start":568,"line_end":568,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103422,"byte_end":13103516,"line_start":569,"line_end":569,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103521,"byte_end":13103578,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103583,"byte_end":13103586,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103591,"byte_end":13103665,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103670,"byte_end":13103747,"line_start":573,"line_end":573,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103752,"byte_end":13103822,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103827,"byte_end":13103903,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103908,"byte_end":13103967,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103972,"byte_end":13103975,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13103980,"byte_end":13104050,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104055,"byte_end":13104130,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104135,"byte_end":13104207,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104212,"byte_end":13104287,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104292,"byte_end":13104313,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104318,"byte_end":13104321,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104326,"byte_end":13104360,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104365,"byte_end":13104399,"line_start":585,"line_end":585,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104404,"byte_end":13104438,"line_start":586,"line_end":586,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104443,"byte_end":13104475,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104480,"byte_end":13104483,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104488,"byte_end":13104502,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104507,"byte_end":13104510,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104515,"byte_end":13104522,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104527,"byte_end":13104576,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104581,"byte_end":13104625,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104630,"byte_end":13104633,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104638,"byte_end":13104668,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104673,"byte_end":13104703,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104708,"byte_end":13104711,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104716,"byte_end":13104794,"line_start":598,"line_end":598,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104799,"byte_end":13104825,"line_start":599,"line_end":599,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104830,"byte_end":13104833,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104838,"byte_end":13104901,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104906,"byte_end":13104933,"line_start":602,"line_end":602,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13104938,"byte_end":13104945,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107269,"byte_end":13107284,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13105567,"byte_end":13105663,"line_start":624,"line_end":624,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13105668,"byte_end":13105762,"line_start":625,"line_end":625,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13105767,"byte_end":13105838,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13105843,"byte_end":13105846,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13105851,"byte_end":13105946,"line_start":628,"line_end":628,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13105951,"byte_end":13106042,"line_start":629,"line_end":629,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106047,"byte_end":13106060,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106065,"byte_end":13106068,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106073,"byte_end":13106158,"line_start":632,"line_end":632,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106163,"byte_end":13106194,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106199,"byte_end":13106202,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106207,"byte_end":13106244,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106249,"byte_end":13106252,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106257,"byte_end":13106345,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106350,"byte_end":13106371,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106376,"byte_end":13106379,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106384,"byte_end":13106416,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106421,"byte_end":13106453,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106458,"byte_end":13106490,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106495,"byte_end":13106527,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106532,"byte_end":13106564,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106569,"byte_end":13106601,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106606,"byte_end":13106637,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106642,"byte_end":13106645,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106650,"byte_end":13106664,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106669,"byte_end":13106672,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106677,"byte_end":13106684,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106689,"byte_end":13106716,"line_start":651,"line_end":651,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106721,"byte_end":13106785,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106790,"byte_end":13106834,"line_start":653,"line_end":653,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106839,"byte_end":13106842,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106847,"byte_end":13106877,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106882,"byte_end":13106885,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106890,"byte_end":13106920,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106925,"byte_end":13106962,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13106967,"byte_end":13107037,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107042,"byte_end":13107114,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107119,"byte_end":13107126,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107178,"byte_end":13107198,"line_start":663,"line_end":663,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107203,"byte_end":13107257,"line_start":664,"line_end":664,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110053,"byte_end":13110073,"line_start":742,"line_end":742,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107627,"byte_end":13107723,"line_start":679,"line_end":679,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107728,"byte_end":13107822,"line_start":680,"line_end":680,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107827,"byte_end":13107898,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107903,"byte_end":13107906,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13107911,"byte_end":13108005,"line_start":683,"line_end":683,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108010,"byte_end":13108105,"line_start":684,"line_end":684,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108110,"byte_end":13108200,"line_start":685,"line_end":685,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108205,"byte_end":13108289,"line_start":686,"line_end":686,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108294,"byte_end":13108297,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108302,"byte_end":13108387,"line_start":688,"line_end":688,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108392,"byte_end":13108423,"line_start":689,"line_end":689,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108428,"byte_end":13108431,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108436,"byte_end":13108484,"line_start":691,"line_end":691,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108489,"byte_end":13108492,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108497,"byte_end":13108539,"line_start":693,"line_end":693,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108544,"byte_end":13108547,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108552,"byte_end":13108650,"line_start":695,"line_end":695,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108655,"byte_end":13108676,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108681,"byte_end":13108684,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108689,"byte_end":13108721,"line_start":698,"line_end":698,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108726,"byte_end":13108758,"line_start":699,"line_end":699,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108763,"byte_end":13108795,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108800,"byte_end":13108832,"line_start":701,"line_end":701,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108837,"byte_end":13108869,"line_start":702,"line_end":702,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108874,"byte_end":13108906,"line_start":703,"line_end":703,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108911,"byte_end":13108942,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108947,"byte_end":13108950,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108955,"byte_end":13108969,"line_start":706,"line_end":706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108974,"byte_end":13108977,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108982,"byte_end":13108989,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13108994,"byte_end":13109021,"line_start":709,"line_end":709,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109026,"byte_end":13109090,"line_start":710,"line_end":710,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109095,"byte_end":13109139,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109144,"byte_end":13109147,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109152,"byte_end":13109182,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109187,"byte_end":13109217,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109222,"byte_end":13109225,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109230,"byte_end":13109265,"line_start":716,"line_end":716,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109270,"byte_end":13109310,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109315,"byte_end":13109325,"line_start":718,"line_end":718,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109330,"byte_end":13109393,"line_start":719,"line_end":719,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109398,"byte_end":13109420,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109425,"byte_end":13109449,"line_start":721,"line_end":721,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109454,"byte_end":13109476,"line_start":722,"line_end":722,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109481,"byte_end":13109494,"line_start":723,"line_end":723,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109499,"byte_end":13109524,"line_start":724,"line_end":724,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109529,"byte_end":13109563,"line_start":725,"line_end":725,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109568,"byte_end":13109598,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109603,"byte_end":13109616,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109621,"byte_end":13109630,"line_start":728,"line_end":728,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109635,"byte_end":13109640,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109645,"byte_end":13109648,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109653,"byte_end":13109694,"line_start":731,"line_end":731,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109699,"byte_end":13109709,"line_start":732,"line_end":732,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109714,"byte_end":13109789,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109794,"byte_end":13109821,"line_start":734,"line_end":734,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109826,"byte_end":13109869,"line_start":735,"line_end":735,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109874,"byte_end":13109883,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109888,"byte_end":13109893,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109898,"byte_end":13109905,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109957,"byte_end":13109977,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13109982,"byte_end":13110041,"line_start":741,"line_end":741,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111152,"byte_end":13111161,"line_start":775,"line_end":775,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110421,"byte_end":13110460,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110465,"byte_end":13110468,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110473,"byte_end":13110567,"line_start":758,"line_end":758,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110572,"byte_end":13110628,"line_start":759,"line_end":759,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110633,"byte_end":13110636,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110641,"byte_end":13110731,"line_start":761,"line_end":761,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110736,"byte_end":13110750,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110755,"byte_end":13110758,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110763,"byte_end":13110777,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110782,"byte_end":13110785,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110790,"byte_end":13110797,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110802,"byte_end":13110859,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110864,"byte_end":13110908,"line_start":768,"line_end":768,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110913,"byte_end":13110916,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110921,"byte_end":13110981,"line_start":770,"line_end":770,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13110986,"byte_end":13111016,"line_start":771,"line_end":771,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111021,"byte_end":13111076,"line_start":772,"line_end":772,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111081,"byte_end":13111128,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111133,"byte_end":13111140,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112060,"byte_end":13112068,"line_start":798,"line_end":798,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111332,"byte_end":13111370,"line_start":779,"line_end":779,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111375,"byte_end":13111378,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111383,"byte_end":13111476,"line_start":781,"line_end":781,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111481,"byte_end":13111537,"line_start":782,"line_end":782,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111542,"byte_end":13111545,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111550,"byte_end":13111640,"line_start":784,"line_end":784,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111645,"byte_end":13111659,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111664,"byte_end":13111667,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111672,"byte_end":13111686,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111691,"byte_end":13111694,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111699,"byte_end":13111706,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111711,"byte_end":13111768,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111773,"byte_end":13111817,"line_start":791,"line_end":791,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111822,"byte_end":13111825,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111830,"byte_end":13111890,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111895,"byte_end":13111925,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111930,"byte_end":13111984,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13111989,"byte_end":13112036,"line_start":796,"line_end":796,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112041,"byte_end":13112048,"line_start":797,"line_end":797,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112968,"byte_end":13112977,"line_start":821,"line_end":821,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112237,"byte_end":13112276,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112281,"byte_end":13112284,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112289,"byte_end":13112383,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112388,"byte_end":13112444,"line_start":805,"line_end":805,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112449,"byte_end":13112452,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112457,"byte_end":13112547,"line_start":807,"line_end":807,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112552,"byte_end":13112566,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112571,"byte_end":13112574,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112579,"byte_end":13112593,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112598,"byte_end":13112601,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112606,"byte_end":13112613,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112618,"byte_end":13112675,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112680,"byte_end":13112724,"line_start":814,"line_end":814,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112729,"byte_end":13112732,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112737,"byte_end":13112797,"line_start":816,"line_end":816,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112802,"byte_end":13112832,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112837,"byte_end":13112892,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112897,"byte_end":13112944,"line_start":819,"line_end":819,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13112949,"byte_end":13112956,"line_start":820,"line_end":820,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114274,"byte_end":13114284,"line_start":859,"line_end":859,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113147,"byte_end":13113182,"line_start":825,"line_end":825,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113187,"byte_end":13113190,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113195,"byte_end":13113284,"line_start":827,"line_end":827,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113289,"byte_end":13113375,"line_start":828,"line_end":828,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113380,"byte_end":13113415,"line_start":829,"line_end":829,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113420,"byte_end":13113423,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113428,"byte_end":13113440,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113445,"byte_end":13113448,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113453,"byte_end":13113512,"line_start":833,"line_end":833,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113517,"byte_end":13113520,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113525,"byte_end":13113537,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113542,"byte_end":13113545,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113550,"byte_end":13113637,"line_start":837,"line_end":837,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113642,"byte_end":13113675,"line_start":838,"line_end":838,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113680,"byte_end":13113683,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113688,"byte_end":13113702,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113707,"byte_end":13113710,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113715,"byte_end":13113726,"line_start":842,"line_end":842,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113731,"byte_end":13113750,"line_start":843,"line_end":843,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113755,"byte_end":13113789,"line_start":844,"line_end":844,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113794,"byte_end":13113820,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113825,"byte_end":13113852,"line_start":846,"line_end":846,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113857,"byte_end":13113862,"line_start":847,"line_end":847,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113867,"byte_end":13113870,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113875,"byte_end":13113908,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113913,"byte_end":13113941,"line_start":850,"line_end":850,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13113946,"byte_end":13114040,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114045,"byte_end":13114092,"line_start":852,"line_end":852,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114097,"byte_end":13114117,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114122,"byte_end":13114201,"line_start":854,"line_end":854,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114206,"byte_end":13114219,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114224,"byte_end":13114233,"line_start":856,"line_end":856,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114238,"byte_end":13114243,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114248,"byte_end":13114255,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117301,"byte_end":13117308,"line_start":972,"line_end":972,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117238,"byte_end":13117290,"line_start":971,"line_end":971,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117400,"byte_end":13117410,"line_start":974,"line_end":974,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117338,"byte_end":13117392,"line_start":973,"line_end":973,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117717,"byte_end":13117727,"line_start":982,"line_end":982,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117432,"byte_end":13117496,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117501,"byte_end":13117504,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117509,"byte_end":13117521,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117526,"byte_end":13117529,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117534,"byte_end":13117629,"line_start":980,"line_end":980,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117634,"byte_end":13117702,"line_start":981,"line_end":981,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117993,"byte_end":13117998,"line_start":991,"line_end":991,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117753,"byte_end":13117788,"line_start":985,"line_end":985,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117789,"byte_end":13117792,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117793,"byte_end":13117835,"line_start":987,"line_end":987,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117836,"byte_end":13117839,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117840,"byte_end":13117938,"line_start":989,"line_end":989,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13117939,"byte_end":13117981,"line_start":990,"line_end":990,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119396,"byte_end":13119404,"line_start":1042,"line_end":1042,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118648,"byte_end":13118698,"line_start":1020,"line_end":1020,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118703,"byte_end":13118706,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118711,"byte_end":13118803,"line_start":1022,"line_end":1022,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118808,"byte_end":13118901,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118906,"byte_end":13118931,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118936,"byte_end":13118939,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118944,"byte_end":13118956,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118961,"byte_end":13118964,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118969,"byte_end":13119013,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119018,"byte_end":13119021,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119026,"byte_end":13119038,"line_start":1030,"line_end":1030,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119043,"byte_end":13119046,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119051,"byte_end":13119147,"line_start":1032,"line_end":1032,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119152,"byte_end":13119199,"line_start":1033,"line_end":1033,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119204,"byte_end":13119207,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119212,"byte_end":13119226,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119231,"byte_end":13119234,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119239,"byte_end":13119246,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119251,"byte_end":13119282,"line_start":1038,"line_end":1038,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119287,"byte_end":13119290,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119295,"byte_end":13119365,"line_start":1040,"line_end":1040,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119370,"byte_end":13119377,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119802,"byte_end":13119810,"line_start":1059,"line_end":1059,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119539,"byte_end":13119583,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119588,"byte_end":13119591,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119596,"byte_end":13119610,"line_start":1050,"line_end":1050,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119615,"byte_end":13119618,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119623,"byte_end":13119630,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119635,"byte_end":13119666,"line_start":1053,"line_end":1053,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119671,"byte_end":13119674,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119679,"byte_end":13119708,"line_start":1055,"line_end":1055,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119713,"byte_end":13119748,"line_start":1056,"line_end":1056,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119753,"byte_end":13119778,"line_start":1057,"line_end":1057,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119783,"byte_end":13119790,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120199,"byte_end":13120202,"line_start":1074,"line_end":1074,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13119969,"byte_end":13120050,"line_start":1065,"line_end":1065,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120055,"byte_end":13120058,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120063,"byte_end":13120077,"line_start":1067,"line_end":1067,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120082,"byte_end":13120085,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120090,"byte_end":13120097,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120102,"byte_end":13120133,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120138,"byte_end":13120141,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120146,"byte_end":13120175,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120180,"byte_end":13120187,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120541,"byte_end":13120545,"line_start":1089,"line_end":1089,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120303,"byte_end":13120384,"line_start":1080,"line_end":1080,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120389,"byte_end":13120392,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120397,"byte_end":13120411,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120416,"byte_end":13120419,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120424,"byte_end":13120431,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120436,"byte_end":13120467,"line_start":1085,"line_end":1085,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120472,"byte_end":13120475,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120480,"byte_end":13120517,"line_start":1087,"line_end":1087,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120522,"byte_end":13120529,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120966,"byte_end":13120977,"line_start":1105,"line_end":1105,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120637,"byte_end":13120686,"line_start":1093,"line_end":1093,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120691,"byte_end":13120694,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120699,"byte_end":13120713,"line_start":1095,"line_end":1095,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120718,"byte_end":13120721,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120726,"byte_end":13120733,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120738,"byte_end":13120786,"line_start":1098,"line_end":1098,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120791,"byte_end":13120794,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120799,"byte_end":13120828,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120833,"byte_end":13120863,"line_start":1101,"line_end":1101,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120868,"byte_end":13120901,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120906,"byte_end":13120913,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120918,"byte_end":13120954,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121297,"byte_end":13121300,"line_start":1118,"line_end":1118,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121089,"byte_end":13121135,"line_start":1109,"line_end":1109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121140,"byte_end":13121143,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121148,"byte_end":13121162,"line_start":1111,"line_end":1111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121167,"byte_end":13121170,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121175,"byte_end":13121182,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121187,"byte_end":13121218,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121223,"byte_end":13121226,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121231,"byte_end":13121273,"line_start":1116,"line_end":1116,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121278,"byte_end":13121285,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121773,"byte_end":13121781,"line_start":1136,"line_end":1136,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121396,"byte_end":13121486,"line_start":1123,"line_end":1123,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121491,"byte_end":13121529,"line_start":1124,"line_end":1124,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121534,"byte_end":13121537,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121542,"byte_end":13121556,"line_start":1126,"line_end":1126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121561,"byte_end":13121564,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121569,"byte_end":13121576,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121581,"byte_end":13121612,"line_start":1129,"line_end":1129,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121617,"byte_end":13121620,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121625,"byte_end":13121654,"line_start":1131,"line_end":1131,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121659,"byte_end":13121686,"line_start":1132,"line_end":1132,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121691,"byte_end":13121717,"line_start":1133,"line_end":1133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121722,"byte_end":13121749,"line_start":1134,"line_end":1134,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121754,"byte_end":13121761,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":303},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124243,"byte_end":13124249,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123964,"byte_end":13124017,"line_start":1233,"line_end":1233,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124018,"byte_end":13124021,"line_start":1234,"line_end":1234,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124022,"byte_end":13124085,"line_start":1235,"line_end":1235,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124086,"byte_end":13124089,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124090,"byte_end":13124188,"line_start":1237,"line_end":1237,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124189,"byte_end":13124231,"line_start":1238,"line_end":1238,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125420,"byte_end":13125426,"line_start":1288,"line_end":1288,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124901,"byte_end":13124961,"line_start":1271,"line_end":1271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124966,"byte_end":13124969,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124974,"byte_end":13124988,"line_start":1273,"line_end":1273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124993,"byte_end":13124996,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125001,"byte_end":13125008,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125013,"byte_end":13125069,"line_start":1276,"line_end":1276,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125074,"byte_end":13125118,"line_start":1277,"line_end":1277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125123,"byte_end":13125126,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125131,"byte_end":13125160,"line_start":1279,"line_end":1279,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125165,"byte_end":13125195,"line_start":1280,"line_end":1280,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125200,"byte_end":13125228,"line_start":1281,"line_end":1281,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125233,"byte_end":13125236,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125241,"byte_end":13125271,"line_start":1283,"line_end":1283,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125276,"byte_end":13125310,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125315,"byte_end":13125347,"line_start":1285,"line_end":1285,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125352,"byte_end":13125359,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125364,"byte_end":13125408,"line_start":1287,"line_end":1287,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125803,"byte_end":13125807,"line_start":1305,"line_end":1305,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125587,"byte_end":13125618,"line_start":1295,"line_end":1295,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125623,"byte_end":13125626,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125631,"byte_end":13125645,"line_start":1297,"line_end":1297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125650,"byte_end":13125653,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125658,"byte_end":13125665,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125670,"byte_end":13125702,"line_start":1300,"line_end":1300,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125707,"byte_end":13125710,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125715,"byte_end":13125749,"line_start":1302,"line_end":1302,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125754,"byte_end":13125779,"line_start":1303,"line_end":1303,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125784,"byte_end":13125791,"line_start":1304,"line_end":1304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126413,"byte_end":13126420,"line_start":1327,"line_end":1327,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125922,"byte_end":13125964,"line_start":1312,"line_end":1312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125969,"byte_end":13125972,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125977,"byte_end":13125991,"line_start":1314,"line_end":1314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125996,"byte_end":13125999,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126004,"byte_end":13126011,"line_start":1316,"line_end":1316,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126016,"byte_end":13126072,"line_start":1317,"line_end":1317,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126077,"byte_end":13126121,"line_start":1318,"line_end":1318,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126126,"byte_end":13126129,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126134,"byte_end":13126161,"line_start":1320,"line_end":1320,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126166,"byte_end":13126196,"line_start":1321,"line_end":1321,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126201,"byte_end":13126246,"line_start":1322,"line_end":1322,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126251,"byte_end":13126289,"line_start":1323,"line_end":1323,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126294,"byte_end":13126340,"line_start":1324,"line_end":1324,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126345,"byte_end":13126352,"line_start":1325,"line_end":1325,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126357,"byte_end":13126401,"line_start":1326,"line_end":1326,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127794,"byte_end":13127799,"line_start":1365,"line_end":1365,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126520,"byte_end":13126549,"line_start":1332,"line_end":1332,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126554,"byte_end":13126557,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126562,"byte_end":13126640,"line_start":1334,"line_end":1334,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126645,"byte_end":13126648,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126653,"byte_end":13126665,"line_start":1336,"line_end":1336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126670,"byte_end":13126673,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126678,"byte_end":13126763,"line_start":1338,"line_end":1338,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126768,"byte_end":13126771,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126776,"byte_end":13126867,"line_start":1340,"line_end":1340,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126872,"byte_end":13126921,"line_start":1341,"line_end":1341,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126926,"byte_end":13126929,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13126934,"byte_end":13127006,"line_start":1343,"line_end":1343,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127011,"byte_end":13127086,"line_start":1344,"line_end":1344,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127091,"byte_end":13127094,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127099,"byte_end":13127192,"line_start":1346,"line_end":1346,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127197,"byte_end":13127290,"line_start":1347,"line_end":1347,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127295,"byte_end":13127333,"line_start":1348,"line_end":1348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127338,"byte_end":13127341,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127346,"byte_end":13127360,"line_start":1350,"line_end":1350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127365,"byte_end":13127368,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127373,"byte_end":13127380,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127385,"byte_end":13127434,"line_start":1353,"line_end":1353,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127439,"byte_end":13127483,"line_start":1354,"line_end":1354,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127488,"byte_end":13127491,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127496,"byte_end":13127526,"line_start":1356,"line_end":1356,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127531,"byte_end":13127561,"line_start":1357,"line_end":1357,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127566,"byte_end":13127600,"line_start":1358,"line_end":1358,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127605,"byte_end":13127617,"line_start":1359,"line_end":1359,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127622,"byte_end":13127659,"line_start":1360,"line_end":1360,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127664,"byte_end":13127669,"line_start":1361,"line_end":1361,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127674,"byte_end":13127681,"line_start":1362,"line_end":1362,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127686,"byte_end":13127730,"line_start":1363,"line_end":1363,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127735,"byte_end":13127775,"line_start":1364,"line_end":1364,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129110,"byte_end":13129119,"line_start":1407,"line_end":1407,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127905,"byte_end":13127934,"line_start":1370,"line_end":1370,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127939,"byte_end":13127942,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13127947,"byte_end":13128033,"line_start":1372,"line_end":1372,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128038,"byte_end":13128041,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128046,"byte_end":13128058,"line_start":1374,"line_end":1374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128063,"byte_end":13128066,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128071,"byte_end":13128166,"line_start":1376,"line_end":1376,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128171,"byte_end":13128208,"line_start":1377,"line_end":1377,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128213,"byte_end":13128216,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128221,"byte_end":13128310,"line_start":1379,"line_end":1379,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128315,"byte_end":13128318,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128323,"byte_end":13128397,"line_start":1381,"line_end":1381,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128402,"byte_end":13128405,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128410,"byte_end":13128424,"line_start":1383,"line_end":1383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128429,"byte_end":13128432,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128437,"byte_end":13128444,"line_start":1385,"line_end":1385,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128449,"byte_end":13128498,"line_start":1386,"line_end":1386,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128503,"byte_end":13128547,"line_start":1387,"line_end":1387,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128552,"byte_end":13128555,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128560,"byte_end":13128602,"line_start":1389,"line_end":1389,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128607,"byte_end":13128637,"line_start":1390,"line_end":1390,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128642,"byte_end":13128645,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128650,"byte_end":13128688,"line_start":1392,"line_end":1392,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128693,"byte_end":13128705,"line_start":1393,"line_end":1393,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128710,"byte_end":13128740,"line_start":1394,"line_end":1394,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128745,"byte_end":13128775,"line_start":1395,"line_end":1395,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128780,"byte_end":13128821,"line_start":1396,"line_end":1396,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128826,"byte_end":13128844,"line_start":1397,"line_end":1397,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128849,"byte_end":13128893,"line_start":1398,"line_end":1398,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128898,"byte_end":13128903,"line_start":1399,"line_end":1399,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128908,"byte_end":13128911,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128916,"byte_end":13128950,"line_start":1401,"line_end":1401,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128955,"byte_end":13128967,"line_start":1402,"line_end":1402,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13128972,"byte_end":13129024,"line_start":1403,"line_end":1403,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129029,"byte_end":13129034,"line_start":1404,"line_end":1404,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129039,"byte_end":13129046,"line_start":1405,"line_end":1405,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129051,"byte_end":13129091,"line_start":1406,"line_end":1406,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130501,"byte_end":13130507,"line_start":1444,"line_end":1444,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129237,"byte_end":13129277,"line_start":1412,"line_end":1412,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129282,"byte_end":13129285,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129290,"byte_end":13129385,"line_start":1414,"line_end":1414,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129390,"byte_end":13129393,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129398,"byte_end":13129410,"line_start":1416,"line_end":1416,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129415,"byte_end":13129418,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129423,"byte_end":13129508,"line_start":1418,"line_end":1418,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129513,"byte_end":13129516,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129521,"byte_end":13129612,"line_start":1420,"line_end":1420,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129617,"byte_end":13129666,"line_start":1421,"line_end":1421,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129671,"byte_end":13129674,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129679,"byte_end":13129751,"line_start":1423,"line_end":1423,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129756,"byte_end":13129831,"line_start":1424,"line_end":1424,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129836,"byte_end":13129839,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129844,"byte_end":13129937,"line_start":1426,"line_end":1426,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13129942,"byte_end":13130035,"line_start":1427,"line_end":1427,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130040,"byte_end":13130078,"line_start":1428,"line_end":1428,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130083,"byte_end":13130086,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130091,"byte_end":13130105,"line_start":1430,"line_end":1430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130110,"byte_end":13130113,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130118,"byte_end":13130125,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130130,"byte_end":13130179,"line_start":1433,"line_end":1433,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130184,"byte_end":13130228,"line_start":1434,"line_end":1434,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130233,"byte_end":13130236,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130241,"byte_end":13130271,"line_start":1436,"line_end":1436,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130276,"byte_end":13130306,"line_start":1437,"line_end":1437,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130311,"byte_end":13130345,"line_start":1438,"line_end":1438,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130350,"byte_end":13130362,"line_start":1439,"line_end":1439,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130367,"byte_end":13130411,"line_start":1440,"line_end":1440,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130416,"byte_end":13130421,"line_start":1441,"line_end":1441,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130426,"byte_end":13130433,"line_start":1442,"line_end":1442,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130438,"byte_end":13130482,"line_start":1443,"line_end":1443,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131367,"byte_end":13131377,"line_start":1477,"line_end":1477,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130697,"byte_end":13130732,"line_start":1453,"line_end":1453,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130737,"byte_end":13130740,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130745,"byte_end":13130757,"line_start":1455,"line_end":1455,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130762,"byte_end":13130765,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130770,"byte_end":13130829,"line_start":1457,"line_end":1457,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130834,"byte_end":13130837,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130842,"byte_end":13130854,"line_start":1459,"line_end":1459,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130859,"byte_end":13130862,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130867,"byte_end":13130954,"line_start":1461,"line_end":1461,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130959,"byte_end":13130992,"line_start":1462,"line_end":1462,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13130997,"byte_end":13131000,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131005,"byte_end":13131019,"line_start":1464,"line_end":1464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131024,"byte_end":13131027,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131032,"byte_end":13131039,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131044,"byte_end":13131093,"line_start":1467,"line_end":1467,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131098,"byte_end":13131142,"line_start":1468,"line_end":1468,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131147,"byte_end":13131150,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131155,"byte_end":13131185,"line_start":1470,"line_end":1470,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131190,"byte_end":13131202,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131207,"byte_end":13131249,"line_start":1472,"line_end":1472,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131254,"byte_end":13131292,"line_start":1473,"line_end":1473,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131297,"byte_end":13131326,"line_start":1474,"line_end":1474,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131331,"byte_end":13131336,"line_start":1475,"line_end":1475,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131341,"byte_end":13131348,"line_start":1476,"line_end":1476,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131986,"byte_end":13131989,"line_start":1496,"line_end":1496,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131529,"byte_end":13131575,"line_start":1482,"line_end":1482,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131580,"byte_end":13131583,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131588,"byte_end":13131602,"line_start":1484,"line_end":1484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131607,"byte_end":13131610,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131615,"byte_end":13131622,"line_start":1486,"line_end":1486,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131627,"byte_end":13131683,"line_start":1487,"line_end":1487,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131688,"byte_end":13131732,"line_start":1488,"line_end":1488,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131737,"byte_end":13131740,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131745,"byte_end":13131807,"line_start":1490,"line_end":1490,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131812,"byte_end":13131842,"line_start":1491,"line_end":1491,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131847,"byte_end":13131881,"line_start":1492,"line_end":1492,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131886,"byte_end":13131913,"line_start":1493,"line_end":1493,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131918,"byte_end":13131925,"line_start":1494,"line_end":1494,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13131930,"byte_end":13131974,"line_start":1495,"line_end":1495,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132712,"byte_end":13132720,"line_start":1520,"line_end":1520,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132085,"byte_end":13132175,"line_start":1501,"line_end":1501,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132180,"byte_end":13132218,"line_start":1502,"line_end":1502,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132223,"byte_end":13132226,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132231,"byte_end":13132245,"line_start":1504,"line_end":1504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132250,"byte_end":13132253,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132258,"byte_end":13132265,"line_start":1506,"line_end":1506,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132270,"byte_end":13132319,"line_start":1507,"line_end":1507,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132324,"byte_end":13132368,"line_start":1508,"line_end":1508,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132373,"byte_end":13132376,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132381,"byte_end":13132411,"line_start":1510,"line_end":1510,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132416,"byte_end":13132446,"line_start":1511,"line_end":1511,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132451,"byte_end":13132486,"line_start":1512,"line_end":1512,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132491,"byte_end":13132519,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132524,"byte_end":13132527,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132532,"byte_end":13132560,"line_start":1515,"line_end":1515,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132565,"byte_end":13132593,"line_start":1516,"line_end":1516,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132598,"byte_end":13132639,"line_start":1517,"line_end":1517,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132644,"byte_end":13132651,"line_start":1518,"line_end":1518,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132656,"byte_end":13132700,"line_start":1519,"line_end":1519,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135649,"byte_end":13135658,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135600,"byte_end":13135637,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135965,"byte_end":13135968,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135925,"byte_end":13135953,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136073,"byte_end":13136081,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136016,"byte_end":13136061,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136749,"byte_end":13136760,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136701,"byte_end":13136737,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136871,"byte_end":13136874,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136825,"byte_end":13136845,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136850,"byte_end":13136859,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13137012,"byte_end":13137021,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136943,"byte_end":13136986,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136991,"byte_end":13137000,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13137177,"byte_end":13137186,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13137095,"byte_end":13137151,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13137156,"byte_end":13137165,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157927,"byte_end":13157932,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":479}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156211,"byte_end":13156260,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156261,"byte_end":13156264,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156265,"byte_end":13156278,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156279,"byte_end":13156282,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156283,"byte_end":13156362,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156363,"byte_end":13156366,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156367,"byte_end":13156374,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156375,"byte_end":13156408,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156409,"byte_end":13156412,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156413,"byte_end":13156511,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156512,"byte_end":13156604,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156605,"byte_end":13156635,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156636,"byte_end":13156643,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156644,"byte_end":13156647,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156648,"byte_end":13156724,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156725,"byte_end":13156728,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156729,"byte_end":13156756,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156757,"byte_end":13156760,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156761,"byte_end":13156848,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156849,"byte_end":13156865,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156866,"byte_end":13156869,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156870,"byte_end":13156877,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156878,"byte_end":13156927,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156928,"byte_end":13156972,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156973,"byte_end":13156976,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13156977,"byte_end":13157015,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157016,"byte_end":13157045,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157046,"byte_end":13157049,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157050,"byte_end":13157080,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157081,"byte_end":13157111,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157112,"byte_end":13157115,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157116,"byte_end":13157190,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157191,"byte_end":13157225,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157226,"byte_end":13157229,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157230,"byte_end":13157281,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157282,"byte_end":13157328,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157329,"byte_end":13157372,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157373,"byte_end":13157378,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157379,"byte_end":13157386,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157387,"byte_end":13157390,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157391,"byte_end":13157412,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157413,"byte_end":13157416,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157417,"byte_end":13157512,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157513,"byte_end":13157611,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157612,"byte_end":13157631,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157632,"byte_end":13157635,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157636,"byte_end":13157643,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157644,"byte_end":13157677,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157678,"byte_end":13157681,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157682,"byte_end":13157712,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157713,"byte_end":13157743,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157744,"byte_end":13157776,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157777,"byte_end":13157794,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157795,"byte_end":13157827,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157828,"byte_end":13157845,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157846,"byte_end":13157879,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157880,"byte_end":13157887,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157888,"byte_end":13157891,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157892,"byte_end":13157915,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158907,"byte_end":13158912,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157991,"byte_end":13158080,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158085,"byte_end":13158110,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158115,"byte_end":13158118,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158123,"byte_end":13158216,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158221,"byte_end":13158309,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158314,"byte_end":13158404,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158409,"byte_end":13158449,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158454,"byte_end":13158457,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158462,"byte_end":13158552,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158557,"byte_end":13158648,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158653,"byte_end":13158740,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158745,"byte_end":13158765,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158770,"byte_end":13158773,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158778,"byte_end":13158865,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13158870,"byte_end":13158895,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163212,"byte_end":13163227,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159076,"byte_end":13159165,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159170,"byte_end":13159195,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159200,"byte_end":13159203,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159208,"byte_end":13159301,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159306,"byte_end":13159394,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159399,"byte_end":13159489,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159494,"byte_end":13159534,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159539,"byte_end":13159542,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159547,"byte_end":13159637,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159642,"byte_end":13159733,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159738,"byte_end":13159825,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159830,"byte_end":13159850,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159855,"byte_end":13159858,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159863,"byte_end":13159950,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159955,"byte_end":13159980,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159985,"byte_end":13159988,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13159993,"byte_end":13160005,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160010,"byte_end":13160013,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160018,"byte_end":13160110,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160115,"byte_end":13160202,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160207,"byte_end":13160219,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160224,"byte_end":13160227,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160232,"byte_end":13160239,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160244,"byte_end":13160277,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160282,"byte_end":13160285,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160290,"byte_end":13160320,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160325,"byte_end":13160352,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160357,"byte_end":13160369,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160374,"byte_end":13160449,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160454,"byte_end":13160493,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160498,"byte_end":13160534,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160539,"byte_end":13160550,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160555,"byte_end":13160560,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160565,"byte_end":13160572,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160577,"byte_end":13160580,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160585,"byte_end":13160679,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160684,"byte_end":13160715,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160720,"byte_end":13160723,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160728,"byte_end":13160823,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160828,"byte_end":13160920,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13160925,"byte_end":13161014,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161019,"byte_end":13161022,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161027,"byte_end":13161040,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161045,"byte_end":13161098,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161103,"byte_end":13161185,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161190,"byte_end":13161197,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161202,"byte_end":13161205,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161210,"byte_end":13161303,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161308,"byte_end":13161403,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161408,"byte_end":13161468,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161473,"byte_end":13161476,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161481,"byte_end":13161495,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161500,"byte_end":13161503,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161508,"byte_end":13161594,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161599,"byte_end":13161693,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161698,"byte_end":13161794,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161799,"byte_end":13161891,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161896,"byte_end":13161952,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161957,"byte_end":13161960,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161965,"byte_end":13161972,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13161977,"byte_end":13162033,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162038,"byte_end":13162082,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162087,"byte_end":13162090,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162095,"byte_end":13162126,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162131,"byte_end":13162134,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162139,"byte_end":13162216,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162221,"byte_end":13162252,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162257,"byte_end":13162260,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162265,"byte_end":13162295,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162300,"byte_end":13162330,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162335,"byte_end":13162338,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162343,"byte_end":13162420,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162425,"byte_end":13162497,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162502,"byte_end":13162505,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162510,"byte_end":13162531,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162536,"byte_end":13162596,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162601,"byte_end":13162683,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162688,"byte_end":13162704,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162709,"byte_end":13162788,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162793,"byte_end":13162836,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162841,"byte_end":13162909,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13162914,"byte_end":13163006,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163011,"byte_end":13163095,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163100,"byte_end":13163137,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163142,"byte_end":13163157,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163162,"byte_end":13163171,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163176,"byte_end":13163181,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163186,"byte_end":13163193,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166814,"byte_end":13166827,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163466,"byte_end":13163559,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163564,"byte_end":13163616,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163621,"byte_end":13163624,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163629,"byte_end":13163722,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163727,"byte_end":13163817,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163822,"byte_end":13163911,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163916,"byte_end":13163970,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163975,"byte_end":13163978,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13163983,"byte_end":13164076,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164081,"byte_end":13164174,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164179,"byte_end":13164272,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164277,"byte_end":13164308,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164313,"byte_end":13164316,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164321,"byte_end":13164410,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164415,"byte_end":13164440,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164445,"byte_end":13164448,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164453,"byte_end":13164465,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164470,"byte_end":13164473,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164478,"byte_end":13164571,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164576,"byte_end":13164609,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164614,"byte_end":13164617,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164622,"byte_end":13164717,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164722,"byte_end":13164760,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164765,"byte_end":13164768,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164773,"byte_end":13164868,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164873,"byte_end":13164965,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13164970,"byte_end":13165059,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165064,"byte_end":13165067,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165072,"byte_end":13165085,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165090,"byte_end":13165143,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165148,"byte_end":13165207,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165212,"byte_end":13165219,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165224,"byte_end":13165227,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165232,"byte_end":13165326,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165331,"byte_end":13165418,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165423,"byte_end":13165483,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165488,"byte_end":13165491,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165496,"byte_end":13165510,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165515,"byte_end":13165518,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165523,"byte_end":13165609,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165614,"byte_end":13165708,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165713,"byte_end":13165809,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165814,"byte_end":13165906,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165911,"byte_end":13165967,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165972,"byte_end":13165975,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165980,"byte_end":13165987,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13165992,"byte_end":13166048,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166053,"byte_end":13166097,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166102,"byte_end":13166105,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166110,"byte_end":13166141,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166146,"byte_end":13166149,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166154,"byte_end":13166231,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166236,"byte_end":13166267,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166272,"byte_end":13166275,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166280,"byte_end":13166310,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166315,"byte_end":13166345,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166350,"byte_end":13166353,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166358,"byte_end":13166435,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166440,"byte_end":13166512,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166517,"byte_end":13166520,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166525,"byte_end":13166546,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166551,"byte_end":13166611,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166616,"byte_end":13166698,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166703,"byte_end":13166719,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166724,"byte_end":13166759,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166764,"byte_end":13166773,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166778,"byte_end":13166783,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166788,"byte_end":13166795,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167712,"byte_end":13167717,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13166927,"byte_end":13167022,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167027,"byte_end":13167044,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167049,"byte_end":13167052,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167057,"byte_end":13167151,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167156,"byte_end":13167248,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167253,"byte_end":13167321,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167326,"byte_end":13167329,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167334,"byte_end":13167426,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167431,"byte_end":13167434,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167439,"byte_end":13167453,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167458,"byte_end":13167461,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167466,"byte_end":13167473,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167478,"byte_end":13167511,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167516,"byte_end":13167519,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167524,"byte_end":13167554,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167559,"byte_end":13167584,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167589,"byte_end":13167653,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167658,"byte_end":13167665,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167670,"byte_end":13167688,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167693,"byte_end":13167700,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168879,"byte_end":13168884,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167841,"byte_end":13167892,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167897,"byte_end":13167900,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13167905,"byte_end":13167995,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168000,"byte_end":13168094,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168099,"byte_end":13168193,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168198,"byte_end":13168250,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168255,"byte_end":13168258,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168263,"byte_end":13168356,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168361,"byte_end":13168364,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168369,"byte_end":13168383,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168388,"byte_end":13168391,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168396,"byte_end":13168403,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168408,"byte_end":13168457,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168462,"byte_end":13168506,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168511,"byte_end":13168514,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168519,"byte_end":13168548,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168553,"byte_end":13168586,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168591,"byte_end":13168596,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168601,"byte_end":13168640,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168645,"byte_end":13168699,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168704,"byte_end":13168709,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168714,"byte_end":13168732,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168737,"byte_end":13168742,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168747,"byte_end":13168786,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168791,"byte_end":13168845,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168850,"byte_end":13168855,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13168860,"byte_end":13168867,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170211,"byte_end":13170222,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169008,"byte_end":13169099,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169104,"byte_end":13169107,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169112,"byte_end":13169203,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169208,"byte_end":13169304,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169309,"byte_end":13169403,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169408,"byte_end":13169427,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169432,"byte_end":13169435,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169440,"byte_end":13169534,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169539,"byte_end":13169581,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169586,"byte_end":13169589,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169594,"byte_end":13169608,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169613,"byte_end":13169616,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169621,"byte_end":13169628,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169633,"byte_end":13169682,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169687,"byte_end":13169731,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169736,"byte_end":13169756,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169761,"byte_end":13169789,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169794,"byte_end":13169797,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169802,"byte_end":13169831,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169836,"byte_end":13169869,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169874,"byte_end":13169879,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169884,"byte_end":13169923,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169928,"byte_end":13169982,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169987,"byte_end":13169992,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13169997,"byte_end":13170064,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170069,"byte_end":13170074,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170079,"byte_end":13170118,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170123,"byte_end":13170177,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170182,"byte_end":13170187,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170192,"byte_end":13170199,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171368,"byte_end":13171377,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170827,"byte_end":13170882,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170887,"byte_end":13170890,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170895,"byte_end":13170970,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13170975,"byte_end":13171025,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171030,"byte_end":13171033,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171038,"byte_end":13171122,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171127,"byte_end":13171130,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171135,"byte_end":13171149,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171154,"byte_end":13171157,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171162,"byte_end":13171169,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171174,"byte_end":13171207,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171212,"byte_end":13171215,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171220,"byte_end":13171250,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171255,"byte_end":13171285,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171290,"byte_end":13171344,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171349,"byte_end":13171356,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174676,"byte_end":13174687,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171787,"byte_end":13171874,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171875,"byte_end":13171878,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171879,"byte_end":13171974,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171975,"byte_end":13172064,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172065,"byte_end":13172068,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172069,"byte_end":13172162,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172163,"byte_end":13172200,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172201,"byte_end":13172204,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172205,"byte_end":13172301,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172302,"byte_end":13172305,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172306,"byte_end":13172318,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172319,"byte_end":13172322,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172323,"byte_end":13172413,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172414,"byte_end":13172481,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172482,"byte_end":13172485,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172486,"byte_end":13172500,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172501,"byte_end":13172504,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172505,"byte_end":13172512,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172513,"byte_end":13172562,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172563,"byte_end":13172608,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172609,"byte_end":13172612,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172613,"byte_end":13172640,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172641,"byte_end":13172644,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172645,"byte_end":13172657,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172658,"byte_end":13172713,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172714,"byte_end":13172760,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172761,"byte_end":13172764,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172765,"byte_end":13172839,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172840,"byte_end":13172890,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172891,"byte_end":13172894,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172895,"byte_end":13172924,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172925,"byte_end":13172981,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172982,"byte_end":13172993,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172994,"byte_end":13172997,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13172998,"byte_end":13173079,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173080,"byte_end":13173085,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173086,"byte_end":13173093,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173094,"byte_end":13173097,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173098,"byte_end":13173192,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173193,"byte_end":13173196,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173197,"byte_end":13173291,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173292,"byte_end":13173377,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173378,"byte_end":13173381,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173382,"byte_end":13173481,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173482,"byte_end":13173580,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173581,"byte_end":13173601,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173602,"byte_end":13173605,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173606,"byte_end":13173613,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173614,"byte_end":13173663,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173664,"byte_end":13173695,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173696,"byte_end":13173741,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173742,"byte_end":13173745,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173746,"byte_end":13173767,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173768,"byte_end":13173798,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173799,"byte_end":13173804,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173805,"byte_end":13173808,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173809,"byte_end":13173829,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173830,"byte_end":13173860,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173861,"byte_end":13173891,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173892,"byte_end":13173897,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173898,"byte_end":13173901,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173902,"byte_end":13173933,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173934,"byte_end":13173962,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173963,"byte_end":13173983,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13173984,"byte_end":13174020,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174021,"byte_end":13174098,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174099,"byte_end":13174102,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174103,"byte_end":13174154,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174155,"byte_end":13174195,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174196,"byte_end":13174270,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174271,"byte_end":13174274,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174275,"byte_end":13174363,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174364,"byte_end":13174414,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174415,"byte_end":13174467,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174468,"byte_end":13174496,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174497,"byte_end":13174500,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174501,"byte_end":13174533,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174534,"byte_end":13174551,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174552,"byte_end":13174565,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174566,"byte_end":13174575,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174576,"byte_end":13174581,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174582,"byte_end":13174589,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174590,"byte_end":13174593,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174594,"byte_end":13174623,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174624,"byte_end":13174651,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174652,"byte_end":13174661,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":892},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":13230679,"byte_end":13230682,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":13230633,"byte_end":13230661,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":13230662,"byte_end":13230671,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":13230807,"byte_end":13230816,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":13230738,"byte_end":13230789,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":13230790,"byte_end":13230799,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":896},"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":13230926,"byte_end":13230943,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":13230877,"byte_end":13230918,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084943,"byte_end":13084963,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086390,"byte_end":13086398,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13090172,"byte_end":13090173,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093392,"byte_end":13093398,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093463,"byte_end":13093469,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093485,"byte_end":13093491,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093824,"byte_end":13093830,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114793,"byte_end":13114799,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13115146,"byte_end":13115152,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13115440,"byte_end":13115446,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13115793,"byte_end":13115799,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13115911,"byte_end":13115917,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13116312,"byte_end":13116318,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13116421,"byte_end":13116427,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13116547,"byte_end":13116553,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13116902,"byte_end":13116908,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118121,"byte_end":13118126,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118633,"byte_end":13118638,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120288,"byte_end":13120293,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121963,"byte_end":13121968,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122158,"byte_end":13122163,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122441,"byte_end":13122446,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122587,"byte_end":13122592,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122785,"byte_end":13122790,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122956,"byte_end":13122961,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123051,"byte_end":13123056,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123529,"byte_end":13123534,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123644,"byte_end":13123649,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123771,"byte_end":13123776,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123882,"byte_end":13123887,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124388,"byte_end":13124394,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124568,"byte_end":13124574,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124629,"byte_end":13124635,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124881,"byte_end":13124887,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125567,"byte_end":13125573,"line_start":1294,"line_end":1294,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132865,"byte_end":13132871,"line_start":1525,"line_end":1525,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133434,"byte_end":13133440,"line_start":1547,"line_end":1547,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133567,"byte_end":13133573,"line_start":1553,"line_end":1553,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133647,"byte_end":13133653,"line_start":1555,"line_end":1555,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133818,"byte_end":13133824,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133972,"byte_end":13133978,"line_start":1567,"line_end":1567,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13134281,"byte_end":13134287,"line_start":1578,"line_end":1578,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13134478,"byte_end":13134484,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135721,"byte_end":13135730,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135755,"byte_end":13135764,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135786,"byte_end":13135795,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135909,"byte_end":13135918,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136160,"byte_end":13136169,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136367,"byte_end":13136376,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136504,"byte_end":13136513,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136687,"byte_end":13136696,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136807,"byte_end":13136818,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13137278,"byte_end":13137289,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13137436,"byte_end":13137447,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/deferred.rs","byte_start":13148177,"byte_end":13148185,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/deferred.rs","byte_start":13148309,"byte_end":13148317,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/epoch.rs","byte_start":13152279,"byte_end":13152284,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/epoch.rs","byte_start":13154088,"byte_end":13154099,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157979,"byte_end":13157984,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171502,"byte_end":13171507,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171677,"byte_end":13171682,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174966,"byte_end":13174978,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13178051,"byte_end":13178054,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13178064,"byte_end":13178067,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13179016,"byte_end":13179019,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13182293,"byte_end":13182296,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13182695,"byte_end":13182698,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13183125,"byte_end":13183134,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13183144,"byte_end":13183153,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13183835,"byte_end":13183841,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13188965,"byte_end":13188970,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13197695,"byte_end":13197700,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13203765,"byte_end":13203770,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13203906,"byte_end":13203911,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13204424,"byte_end":13204428,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13207011,"byte_end":13207015,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13207547,"byte_end":13207551,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":13217372,"byte_end":13217377,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":13217414,"byte_end":13217419,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":13217435,"byte_end":13217440,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":13223360,"byte_end":13223365,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13084943,"byte_end":13084963,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13086390,"byte_end":13086398,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":43641},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13090172,"byte_end":13090173,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093392,"byte_end":13093398,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093463,"byte_end":13093469,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093485,"byte_end":13093491,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13093824,"byte_end":13093830,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13114793,"byte_end":13114799,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13115146,"byte_end":13115152,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9411}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13115440,"byte_end":13115446,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13115793,"byte_end":13115799,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13115911,"byte_end":13115917,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13116312,"byte_end":13116318,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13116421,"byte_end":13116427,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13116547,"byte_end":13116553,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13116902,"byte_end":13116908,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118121,"byte_end":13118126,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":249},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13118633,"byte_end":13118638,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13120288,"byte_end":13120293,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13121963,"byte_end":13121968,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122158,"byte_end":13122163,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122441,"byte_end":13122446,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122587,"byte_end":13122592,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122785,"byte_end":13122790,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13122956,"byte_end":13122961,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123051,"byte_end":13123056,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123529,"byte_end":13123534,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123644,"byte_end":13123649,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123771,"byte_end":13123776,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13123882,"byte_end":13123887,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124388,"byte_end":13124394,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124568,"byte_end":13124574,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124629,"byte_end":13124635,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13124881,"byte_end":13124887,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13125567,"byte_end":13125573,"line_start":1294,"line_end":1294,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13132865,"byte_end":13132871,"line_start":1525,"line_end":1525,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133434,"byte_end":13133440,"line_start":1547,"line_end":1547,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133567,"byte_end":13133573,"line_start":1553,"line_end":1553,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133647,"byte_end":13133653,"line_start":1555,"line_end":1555,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133818,"byte_end":13133824,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2703}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13133972,"byte_end":13133978,"line_start":1567,"line_end":1567,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13134281,"byte_end":13134287,"line_start":1578,"line_end":1578,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9411}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":13134478,"byte_end":13134484,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135721,"byte_end":13135730,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135755,"byte_end":13135764,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135786,"byte_end":13135795,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13135909,"byte_end":13135918,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136160,"byte_end":13136169,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136367,"byte_end":13136376,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136504,"byte_end":13136513,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136687,"byte_end":13136696,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13136807,"byte_end":13136818,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13137278,"byte_end":13137289,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":13137436,"byte_end":13137447,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/deferred.rs","byte_start":13148177,"byte_end":13148185,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/deferred.rs","byte_start":13148309,"byte_end":13148317,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/epoch.rs","byte_start":13152279,"byte_end":13152284,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/epoch.rs","byte_start":13154088,"byte_end":13154099,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13157979,"byte_end":13157984,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171502,"byte_end":13171507,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13171677,"byte_end":13171682,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":13174966,"byte_end":13174978,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13178051,"byte_end":13178054,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13178064,"byte_end":13178067,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13179016,"byte_end":13179019,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13182293,"byte_end":13182296,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13182695,"byte_end":13182698,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13183125,"byte_end":13183134,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13183144,"byte_end":13183153,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13183835,"byte_end":13183841,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13188965,"byte_end":13188970,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":13197695,"byte_end":13197700,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":622},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13203765,"byte_end":13203770,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13203906,"byte_end":13203911,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13204424,"byte_end":13204428,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13207011,"byte_end":13207015,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":850},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":13207547,"byte_end":13207551,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":13217372,"byte_end":13217377,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":13217414,"byte_end":13217419,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":13217435,"byte_end":13217440,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar2535/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":13223360,"byte_end":13223365,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3251}}]}